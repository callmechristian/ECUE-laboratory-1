
MECL_hello_world.elf:     file format elf32-littlenios2
MECL_hello_world.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04020244

Program Header:
    LOAD off    0x00001000 vaddr 0x04020000 paddr 0x04020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04020020 paddr 0x04020020 align 2**12
         filesz 0x00010ba8 memsz 0x00010ba8 flags r-x
    LOAD off    0x00012000 vaddr 0x00000000 paddr 0x04030bc8 align 2**12
         filesz 0x00001e78 memsz 0x00001ff4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04020000  04020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  04020020  04020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010984  04020244  04020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000360  00000000  04030bc8  00012000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b18  00000360  04030f28  00012360  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000017c  00001e78  04032a40  00013e78  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00001ff4  00001ff4  00013e78  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  04032a40  04032a40  00013e78  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00013e78  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000010d0  00000000  00000000  00013ea0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00026ebe  00000000  00000000  00014f70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000a295  00000000  00000000  0003be2e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000c9ee  00000000  00000000  000460c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002524  00000000  00000000  00052ab4  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003e7c  00000000  00000000  00054fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00018303  00000000  00000000  00058e54  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  00071158  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001980  00000000  00000000  000711b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00076191  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  00076194  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000761a0  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000761a1  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  000761a2  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  000761a6  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  000761aa  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  000761ae  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  000761b7  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  000761c0  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000012  00000000  00000000  000761c9  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000014  00000000  00000000  000761db  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0008fbd6  00000000  00000000  000761ef  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04020000 l    d  .entry	00000000 .entry
04020020 l    d  .exceptions	00000000 .exceptions
04020244 l    d  .text	00000000 .text
00000000 l    d  .rodata	00000000 .rodata
00000360 l    d  .rwdata	00000000 .rwdata
00001e78 l    d  .bss	00000000 .bss
00001ff4 l    d  .sdram	00000000 .sdram
04032a40 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../MECL_hello_world_bsp//obj/HAL/src/crt0.o
0402028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000360 l     O .rwdata	00000028 LUT
04020290 l     F .text	00000060 handle_button_interrupts
040202f0 l     F .text	00000064 init_button_pio
00000000 l    df *ABS*	00000000 w_log.c
00000000 l    df *ABS*	00000000 w_log10.c
00000000 l    df *ABS*	00000000 e_log.c
00000000 l    df *ABS*	00000000 e_log10.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
00000388 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 time.c
00000000 l    df *ABS*	00000000 vfprintf.c
000001b3 l     O .rodata	00000010 zeroes.4404
040260f0 l     F .text	000000bc __sbprintf
000001c3 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
04026300 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
04027e30 l     F .text	00000008 __fp_unlock
04027e44 l     F .text	0000019c __sinit.part.1
04027fe0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gettimeofdayr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
000007cc l     O .rwdata	00000020 lc_ctype_charset
000007ac l     O .rwdata	00000020 lc_message_charset
000007ec l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
000001f0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0402b3c4 l     F .text	000000fc __sprint_r.part.0
00000324 l     O .rodata	00000010 blanks.4348
00000314 l     O .rodata	00000010 zeroes.4349
0402c950 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0402def8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0402e004 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0402e030 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_gettod.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0402e490 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0402e570 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0402e65c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0402e830 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00001e6c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0402ec50 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0402ed84 l     F .text	00000034 alt_dev_reg
00000dd4 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0402f078 l     F .text	0000020c altera_avalon_jtag_uart_irq
0402f284 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_ts.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0402fca0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
04030114 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
04030254 l     F .text	0000003c alt_get_errno
04030290 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00001ec8 g     O .bss	00000004 alt_instruction_exception_handler
0402aa7c g     F .text	00000074 _mprec_log10
0402ab68 g     F .text	0000008c __any_on
0402ceec g     F .text	00000054 _isatty_r
000001fc g     O .rodata	00000028 __mprec_tinytens
0402e76c g     F .text	0000007c alt_main
04023ca4 g     F .text	000000c0 _puts_r
00001ef4 g     O .bss	00000100 alt_irq
0402cf40 g     F .text	00000060 _lseek_r
04020808 g     F .text	0000019c log
04030f28 g       *ABS*	00000000 __flash_rwdata_start
040227fc g     F .text	00000088 .hidden __eqdf2
04028c48 g     F .text	0000005c _gettimeofday_r
00001ff4 g       *ABS*	00000000 __alt_heap_start
04020564 g     F .text	00000040 ex_c1
04023c68 g     F .text	0000003c printf
0402d158 g     F .text	0000009c _wcrtomb_r
0402b284 g     F .text	0000005c __sseek
04028180 g     F .text	00000010 __sinit
0402d000 g     F .text	00000140 __swbuf_r
04028ca4 g     F .text	0000007c _setlocale_r
04027fe8 g     F .text	00000068 __sfmoreglue
0402e80c g     F .text	00000024 __malloc_unlock
00001ec4 g     O .bss	00000004 altera_avalon_timer_ts_freq
04029974 g     F .text	0000015c memmove
04028168 g     F .text	00000018 _cleanup
04029bf8 g     F .text	000000a8 _Balloc
04022884 g     F .text	000000dc .hidden __gtdf2
040304a8 g     F .text	00000024 altera_nios2_gen2_irq_init
04023c28 g     F .text	00000010 __errno
04020000 g     F .entry	0000001c __reset
00001e78 g     O .bss	00000004 edge_capture
04020020 g       *ABS*	00000000 __flash_exceptions_start
0402ce90 g     F .text	0000005c _fstat_r
00001e7c g     O .bss	00000004 errno
0402b200 g     F .text	00000008 __seofread
00001eb0 g     O .bss	00000004 alt_argv
00009e34 g       *ABS*	00000000 _gp
0402ec20 g     F .text	00000030 usleep
00000c54 g     O .rwdata	00000180 alt_fd_list
040304cc g     F .text	00000090 alt_find_dev
0402982c g     F .text	00000148 memcpy
04027e38 g     F .text	0000000c _cleanup_r
04023ae8 g     F .text	000000dc .hidden __floatsidf
040301d8 g     F .text	0000007c alt_io_redirect
04022960 g     F .text	000000f4 .hidden __ltdf2
04030bc8 g       *ABS*	00000000 __DTOR_END__
04023d64 g     F .text	00000014 puts
04030798 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0402142c g     F .text	00000074 __fpclassifyd
0402a9d8 g     F .text	000000a4 __ratio
0402c934 g     F .text	0000001c __vfiprintf_internal
0402f47c g     F .text	0000021c altera_avalon_jtag_uart_read
04023c38 g     F .text	00000030 _printf_r
040215ac g     F .text	00000064 .hidden __udivsi3
0402e4cc g     F .text	000000a4 isatty
0000024c g     O .rodata	000000c8 __mprec_tens
04028d20 g     F .text	0000000c __locale_charset
00001e98 g     O .bss	00000008 alt_timezone
04030708 g     F .text	00000090 alt_icache_flush
00001e94 g     O .bss	00000004 __malloc_top_pad
00001e40 g     O .rwdata	00000004 __mb_cur_max
04028d50 g     F .text	0000000c _localeconv_r
0402a004 g     F .text	0000003c __i2b
04028604 g     F .text	000004bc __sfvwrite_r
0402b158 g     F .text	00000054 _sbrk_r
0402cfa0 g     F .text	00000060 _read_r
0402125c g     F .text	000001d0 __ieee754_log10
00001e60 g     O .rwdata	00000004 alt_max_fd
0402cb84 g     F .text	000000f0 _fclose_r
04027e00 g     F .text	00000030 fflush
00001e90 g     O .bss	00000004 __malloc_max_sbrked_mem
0402e310 g     F .text	00000180 alt_irq_register
04021668 g     F .text	000008ac .hidden __adddf3
0402a780 g     F .text	0000010c __b2d
0402d918 g     F .text	00000538 .hidden __umoddi3
0402e698 g     F .text	000000d4 lseek
00001e34 g     O .rwdata	00000004 __fdlib_version
00001e38 g     O .rwdata	00000004 _global_impure_ptr
0402abf4 g     F .text	00000564 _realloc_r
00001ff4 g       *ABS*	00000000 __bss_end
04030024 g     F .text	000000f0 alt_iic_isr_register
0402eb18 g     F .text	00000108 alt_tick
0402d3a0 g     F .text	00000578 .hidden __udivdi3
040204e4 g     F .text	00000080 count_ones
0402cdec g     F .text	00000024 _fputwc_r
00000224 g     O .rodata	00000028 __mprec_bigtens
04029de8 g     F .text	00000104 __s2b
0402de50 g     F .text	000000a8 .hidden __floatunsidf
0402a4c0 g     F .text	00000060 __mcmp
040281a0 g     F .text	00000018 __fp_lock_all
0402ffd8 g     F .text	0000004c alt_ic_irq_enabled
0402ea7c g     F .text	0000009c alt_alarm_stop
00001ea8 g     O .bss	00000004 alt_irq_active
040200fc g     F .exceptions	000000d4 alt_irq_handler
00000c2c g     O .rwdata	00000028 alt_dev_null
04020480 g     F .text	00000064 read_nr_switches
0402fc58 g     F .text	00000048 alt_dcache_flush_all
04029eec g     F .text	00000068 __hi0bits
04023a68 g     F .text	00000080 .hidden __fixdfsi
00001e78 g       *ABS*	00000000 __ram_rwdata_end
00001e58 g     O .rwdata	00000008 alt_dev_list
0402ec8c g     F .text	000000f8 write
0402f9b4 g     F .text	00000020 alt_timestamp_freq
00000360 g       *ABS*	00000000 __ram_rodata_end
0402e06c g     F .text	000000b0 fstat
04022960 g     F .text	000000f4 .hidden __ledf2
0402a238 g     F .text	00000140 __pow5mult
0402b4d8 g     F .text	0000145c ___vfiprintf_internal_r
00001e88 g     O .bss	00000004 __nlocale_changed
04021610 g     F .text	00000058 .hidden __umodsi3
00001ff4 g       *ABS*	00000000 end
0402efb8 g     F .text	000000c0 altera_avalon_jtag_uart_init
040201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
04030bc8 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
04023bc4 g     F .text	00000064 .hidden __clzsi2
0402f698 g     F .text	00000224 altera_avalon_jtag_uart_write
04028190 g     F .text	00000004 __sfp_lock_acquire
04029748 g     F .text	000000e4 memchr
04023edc g     F .text	000021f8 ___vfprintf_internal_r
040282f4 g     F .text	00000310 _free_r
04028d2c g     F .text	00000010 __locale_mb_cur_max
04030a14 g     F .text	00000180 __call_exitprocs
00001e84 g     O .bss	00000004 __mlocale_changed
00001e44 g     O .rwdata	00000004 __malloc_sbrk_base
04020244 g     F .text	0000004c _start
00001eb8 g     O .bss	00000004 _alt_tick_rate
04023d90 g     F .text	00000064 rand
0402a378 g     F .text	00000148 __lshift
00001ebc g     O .bss	00000004 _alt_nticks
0402e86c g     F .text	000000fc read
0402edf0 g     F .text	00000064 alt_sys_init
040308fc g     F .text	00000118 __register_exitproc
0402a040 g     F .text	000001f8 __multiply
0402f324 g     F .text	00000068 altera_avalon_jtag_uart_close
00000360 g       *ABS*	00000000 __ram_rwdata_start
00000000 g       *ABS*	00000000 __ram_rodata_start
00001ecc g     O .bss	00000028 __malloc_current_mallinfo
0402a88c g     F .text	0000014c __d2b
040209a4 g     F .text	0000019c log10
0402ee54 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
04030664 g     F .text	000000a4 alt_get_fd
0402fb00 g     F .text	00000158 alt_busy_sleep
0402ca6c g     F .text	00000054 _close_r
04030880 g     F .text	0000007c memcmp
0402ef14 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00001ff4 g       *ABS*	00000000 __alt_stack_base
0402ef64 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
040261ac g     F .text	00000154 __swsetup_r
04021f14 g     F .text	000008e8 .hidden __divdf3
04028050 g     F .text	00000118 __sfp
0402aaf0 g     F .text	00000078 __copybits
00000824 g     O .rwdata	00000408 __malloc_av_
0402819c g     F .text	00000004 __sinit_lock_release
04022a54 g     F .text	00000718 .hidden __muldf3
0402b1ac g     F .text	00000054 __sread
0403055c g     F .text	00000108 alt_find_file
0402fcdc g     F .text	000000a4 alt_dev_llist_insert
0402e7e8 g     F .text	00000024 __malloc_lock
0402e9cc g     F .text	000000b0 sbrk
04027da4 g     F .text	0000005c _fflush_r
0402cac0 g     F .text	000000c4 _calloc_r
0402e11c g     F .text	000001f4 gettimeofday
04020354 g     F .text	0000012c display_seven
00001e78 g       *ABS*	00000000 __bss_start
04029ad0 g     F .text	00000128 memset
040207c0 g     F .text	00000048 main
00001eb4 g     O .bss	00000004 alt_envp
00001e8c g     O .bss	00000004 __malloc_max_total_mem
0402eeb4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0402d140 g     F .text	00000018 __swbuf
04023d78 g     F .text	00000018 srand
0402b2e0 g     F .text	00000008 __sclose
040214a0 g     F .text	00000008 matherr
04000000 g       *ABS*	00000000 __alt_heap_limit
0402cc74 g     F .text	00000014 fclose
0402f8bc g     F .text	00000078 alt_timestamp_start
04026500 g     F .text	00001688 _dtoa_r
04028f3c g     F .text	0000080c _malloc_r
0402d2b4 g     F .text	00000030 __ascii_wctomb
04023e8c g     F .text	00000050 time
00001e64 g     O .rwdata	00000004 alt_errno
04028ac0 g     F .text	000000c4 _fwalk
040214b4 g     F .text	00000084 .hidden __divsi3
040281d0 g     F .text	00000124 _malloc_trim_r
04030bc8 g       *ABS*	00000000 __CTOR_END__
0402b2e8 g     F .text	000000dc strcmp
04030bc8 g       *ABS*	00000000 __flash_rodata_start
04030bc8 g       *ABS*	00000000 __DTOR_LIST__
040227fc g     F .text	00000088 .hidden __nedf2
040205a4 g     F .text	0000006c ex_c2
0402edb8 g     F .text	00000038 alt_irq_init
0402e968 g     F .text	00000064 alt_release_fd
0000006a g     O .rodata	00000100 .hidden __clz_tab
00001e80 g     O .bss	00000004 _PathLocale
04030834 g     F .text	00000014 atexit
0402ca0c g     F .text	00000060 _write_r
04028d5c g     F .text	00000018 setlocale
00001e3c g     O .rwdata	00000004 _impure_ptr
00001eac g     O .bss	00000004 alt_argc
04027b88 g     F .text	0000021c __sflush_r
00001ec0 g     O .bss	00000004 altera_avalon_timer_ts_base
0402fde0 g     F .text	00000060 _do_dtors
04028d48 g     F .text	00000008 __locale_cjk_lang
04020b40 g     F .text	0000071c __ieee754_log
04020020 g       .exceptions	00000000 alt_irq_entry
0402a71c g     F .text	00000064 __ulp
040281b8 g     F .text	00000018 __fp_unlock_all
00001e50 g     O .rwdata	00000008 alt_fs_list
00001ea0 g     O .bss	00000008 alt_resettime
040214a8 g     F .text	0000000c nan
04020020 g       *ABS*	00000000 __ram_exceptions_start
04020610 g     F .text	000000b8 ex_c3
04028d74 g     F .text	0000000c localeconv
0402f934 g     F .text	00000080 alt_timestamp
04020000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0402fe74 g     F .text	00000050 alt_ic_isr_register
00001e78 g       *ABS*	00000000 _edata
00001ff4 g       *ABS*	00000000 _end
0402cc88 g     F .text	00000164 __fputwc
04020244 g       *ABS*	00000000 __ram_exceptions_end
0402f38c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0402ff4c g     F .text	0000008c alt_ic_irq_disable
0402b208 g     F .text	0000007c __swrite
00001e48 g     O .rwdata	00000004 __malloc_trim_threshold
04028d3c g     F .text	0000000c __locale_msgcharset
04030848 g     F .text	00000038 exit
04028b84 g     F .text	000000c4 _fwalk_reent
0402a520 g     F .text	000001fc __mdiff
04021538 g     F .text	00000074 .hidden __modsi3
04000000 g       *ABS*	00000000 __alt_data_end
04020020 g     F .exceptions	00000000 alt_exception
04028194 g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
04030b94 g     F .text	00000034 _exit
040206c8 g     F .text	000000f8 ex_c4
0402f9d4 g     F .text	0000012c alt_alarm_start
0402d340 g     F .text	00000060 .hidden __muldi3
04028d80 g     F .text	000001bc __smakebuf_r
04023df4 g     F .text	00000098 strlen
04030354 g     F .text	00000154 open
04022884 g     F .text	000000dc .hidden __gedf2
00001e4c g     O .rwdata	00000004 __wctomb
0402b4c0 g     F .text	00000018 __sprint_r
0402fe40 g     F .text	00000034 alt_icache_flush_all
00001e68 g     O .rwdata	00000004 alt_priority_mask
0402fec4 g     F .text	00000088 alt_ic_irq_enable
040260d4 g     F .text	0000001c __vfprintf_internal
0402d2e4 g     F .text	0000005c _wctomb_r
0402316c g     F .text	000008fc .hidden __subdf3
04029f54 g     F .text	000000b0 __lo0bits
00001e70 g     O .rwdata	00000008 alt_alarm_list
0402fd80 g     F .text	00000060 _do_ctors
0402d1f4 g     F .text	000000c0 wcrtomb
0402df34 g     F .text	000000d0 close
0402e5d8 g     F .text	00000084 alt_load
0402ce10 g     F .text	00000080 fputwc
04028198 g     F .text	00000004 __sinit_lock_acquire
04029cc8 g     F .text	00000120 __multadd
04029ca0 g     F .text	00000028 _Bfree



Disassembly of section .entry:

04020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 4020000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 4020004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 4020008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 402000c:	00bffd16 	blt	zero,r2,4020004 <__flash_rwdata_start+0xfffef0dc>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4020010:	004100b4 	movhi	at,1026
    ori r1, r1, %lo(_start)
 4020014:	08409114 	ori	at,at,580
    jmp r1
 4020018:	0800683a 	jmp	at
 402001c:	00000000 	call	0 <__alt_mem_sdram>

Disassembly of section .exceptions:

04020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4020020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4020024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4020028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 402002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4020030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4020034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4020038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 402003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4020040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4020044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4020048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 402004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4020050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4020054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4020058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 402005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4020060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4020064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4020068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 402006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4020070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4020074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4020078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 402007c:	10000326 	beq	r2,zero,402008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4020080:	20000226 	beq	r4,zero,402008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4020084:	40200fc0 	call	40200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4020088:	00000706 	br	40200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 402008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 4020090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 4020094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 4020098:	40201d00 	call	40201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 402009c:	1000021e 	bne	r2,zero,40200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 40200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 40200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 40200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 40200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40200f8:	ef80083a 	eret

040200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40200fc:	defff904 	addi	sp,sp,-28
 4020100:	dfc00615 	stw	ra,24(sp)
 4020104:	df000515 	stw	fp,20(sp)
 4020108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 402010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4020110:	0005313a 	rdctl	r2,ipending
 4020114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 4020118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 402011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 4020120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4020124:	00800044 	movi	r2,1
 4020128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 402012c:	e0fffb17 	ldw	r3,-20(fp)
 4020130:	e0bffc17 	ldw	r2,-16(fp)
 4020134:	1884703a 	and	r2,r3,r2
 4020138:	10001426 	beq	r2,zero,402018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 402013c:	00800034 	movhi	r2,0
 4020140:	1087bd04 	addi	r2,r2,7924
 4020144:	e0fffd17 	ldw	r3,-12(fp)
 4020148:	180690fa 	slli	r3,r3,3
 402014c:	10c5883a 	add	r2,r2,r3
 4020150:	10c00017 	ldw	r3,0(r2)
 4020154:	00800034 	movhi	r2,0
 4020158:	1087bd04 	addi	r2,r2,7924
 402015c:	e13ffd17 	ldw	r4,-12(fp)
 4020160:	200890fa 	slli	r4,r4,3
 4020164:	1105883a 	add	r2,r2,r4
 4020168:	10800104 	addi	r2,r2,4
 402016c:	10800017 	ldw	r2,0(r2)
 4020170:	1009883a 	mov	r4,r2
 4020174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 4020178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 402017c:	0005313a 	rdctl	r2,ipending
 4020180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 4020184:	e0bfff17 	ldw	r2,-4(fp)
 4020188:	00000706 	br	40201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 402018c:	e0bffc17 	ldw	r2,-16(fp)
 4020190:	1085883a 	add	r2,r2,r2
 4020194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 4020198:	e0bffd17 	ldw	r2,-12(fp)
 402019c:	10800044 	addi	r2,r2,1
 40201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 40201a4:	003fe106 	br	402012c <__flash_rwdata_start+0xfffef204>

    active = alt_irq_pending ();
 40201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 40201ac:	e0bffb17 	ldw	r2,-20(fp)
 40201b0:	103fdb1e 	bne	r2,zero,4020120 <__flash_rwdata_start+0xfffef1f8>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40201b4:	0001883a 	nop
}
 40201b8:	0001883a 	nop
 40201bc:	e037883a 	mov	sp,fp
 40201c0:	dfc00117 	ldw	ra,4(sp)
 40201c4:	df000017 	ldw	fp,0(sp)
 40201c8:	dec00204 	addi	sp,sp,8
 40201cc:	f800283a 	ret

040201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 40201d0:	defffb04 	addi	sp,sp,-20
 40201d4:	dfc00415 	stw	ra,16(sp)
 40201d8:	df000315 	stw	fp,12(sp)
 40201dc:	df000304 	addi	fp,sp,12
 40201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 40201e4:	000531fa 	rdctl	r2,exception
 40201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 40201ec:	e0bffd17 	ldw	r2,-12(fp)
 40201f0:	10801f0c 	andi	r2,r2,124
 40201f4:	1004d0ba 	srli	r2,r2,2
 40201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 40201fc:	0005333a 	rdctl	r2,badaddr
 4020200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 4020204:	d0a02517 	ldw	r2,-32620(gp)
 4020208:	10000726 	beq	r2,zero,4020228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 402020c:	d0a02517 	ldw	r2,-32620(gp)
 4020210:	e0fffd17 	ldw	r3,-12(fp)
 4020214:	e1bffe17 	ldw	r6,-8(fp)
 4020218:	e17fff17 	ldw	r5,-4(fp)
 402021c:	1809883a 	mov	r4,r3
 4020220:	103ee83a 	callr	r2
 4020224:	00000206 	br	4020230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 4020228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 402022c:	0005883a 	mov	r2,zero
}
 4020230:	e037883a 	mov	sp,fp
 4020234:	dfc00117 	ldw	ra,4(sp)
 4020238:	df000017 	ldw	fp,0(sp)
 402023c:	dec00204 	addi	sp,sp,8
 4020240:	f800283a 	ret

Disassembly of section .text:

04020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 4020244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 4020248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 402024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 4020250:	00bffd16 	blt	zero,r2,4020248 <__flash_rwdata_start+0xfffef320>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4020254:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
 4020258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 402025c:	06800034 	movhi	gp,0
    ori gp, gp, %lo(_gp)
 4020260:	d6a78d14 	ori	gp,gp,40500
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 4020264:	00800034 	movhi	r2,0
    ori r2, r2, %lo(__bss_start)
 4020268:	10879e14 	ori	r2,r2,7800

    movhi r3, %hi(__bss_end)
 402026c:	00c00034 	movhi	r3,0
    ori r3, r3, %lo(__bss_end)
 4020270:	18c7fd14 	ori	r3,r3,8180

    beq r2, r3, 1f
 4020274:	10c00326 	beq	r2,r3,4020284 <_start+0x40>

0:
    stw zero, (r2)
 4020278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 402027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 4020280:	10fffd36 	bltu	r2,r3,4020278 <__flash_rwdata_start+0xfffef350>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4020284:	402e5d80 	call	402e5d8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4020288:	402e76c0 	call	402e76c <alt_main>

0402028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 402028c:	003fff06 	br	402028c <__flash_rwdata_start+0xfffef364>

04020290 <handle_button_interrupts>:
// define int size
#define INT_SIZE sizeof(int) * 8 /* Total number of bits in integer */

// helper funcs
// program interrupts
static void handle_button_interrupts(void* context, alt_u32 id) {
 4020290:	defffc04 	addi	sp,sp,-16
 4020294:	df000315 	stw	fp,12(sp)
 4020298:	df000304 	addi	fp,sp,12
 402029c:	e13ffe15 	stw	r4,-8(fp)
 40202a0:	e17fff15 	stw	r5,-4(fp)
	/* Cast context to edge_capture's type. It is important that this
	be declared volatile to avoid unwanted compiler optimization. */
	volatile int* edge_capture_ptr = (volatile int*) context;
 40202a4:	e0bffe17 	ldw	r2,-8(fp)
 40202a8:	e0bffd15 	stw	r2,-12(fp)
	/* Read the edge capture register on the button PIO. Store value. */
	*edge_capture_ptr =
	IORD_ALTERA_AVALON_PIO_EDGE_CAP (KEY_BASE);
 40202ac:	00810134 	movhi	r2,1028
 40202b0:	10844704 	addi	r2,r2,4380
 40202b4:	10c00037 	ldwio	r3,0(r2)
static void handle_button_interrupts(void* context, alt_u32 id) {
	/* Cast context to edge_capture's type. It is important that this
	be declared volatile to avoid unwanted compiler optimization. */
	volatile int* edge_capture_ptr = (volatile int*) context;
	/* Read the edge capture register on the button PIO. Store value. */
	*edge_capture_ptr =
 40202b8:	e0bffd17 	ldw	r2,-12(fp)
 40202bc:	10c00015 	stw	r3,0(r2)
	IORD_ALTERA_AVALON_PIO_EDGE_CAP (KEY_BASE);
	/* Write to the edge capture register to reset it. */
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP (KEY_BASE, 0);
 40202c0:	0007883a 	mov	r3,zero
 40202c4:	00810134 	movhi	r2,1028
 40202c8:	10844704 	addi	r2,r2,4380
 40202cc:	10c00035 	stwio	r3,0(r2)
	/* Read the PIO to delay ISR exit. This is done to prevent a
	spurious interrupt in systems with high processor -> pio
	latency and fast interrupts. */
	IORD_ALTERA_AVALON_PIO_EDGE_CAP (KEY_BASE);
 40202d0:	00810134 	movhi	r2,1028
 40202d4:	10844704 	addi	r2,r2,4380
 40202d8:	10800037 	ldwio	r2,0(r2)
}
 40202dc:	0001883a 	nop
 40202e0:	e037883a 	mov	sp,fp
 40202e4:	df000017 	ldw	fp,0(sp)
 40202e8:	dec00104 	addi	sp,sp,4
 40202ec:	f800283a 	ret

040202f0 <init_button_pio>:
// registering the interrupt handler
static void init_button_pio() {
 40202f0:	defffd04 	addi	sp,sp,-12
 40202f4:	dfc00215 	stw	ra,8(sp)
 40202f8:	df000115 	stw	fp,4(sp)
 40202fc:	df000104 	addi	fp,sp,4
	/* Recast the edge_capture pointer to match the alt_irq_register() function
	prototype. */
	void* edge_capture_ptr = (void*) &edge_capture;
 4020300:	d0a01104 	addi	r2,gp,-32700
 4020304:	e0bfff15 	stw	r2,-4(fp)
	/* Enable all 4 button interrupts. */
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK (KEY_BASE, 0xf);
 4020308:	00c003c4 	movi	r3,15
 402030c:	00810134 	movhi	r2,1028
 4020310:	10844604 	addi	r2,r2,4376
 4020314:	10c00035 	stwio	r3,0(r2)
	/* Reset the edge capture register. */
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP (KEY_BASE, 0x0);
 4020318:	0007883a 	mov	r3,zero
 402031c:	00810134 	movhi	r2,1028
 4020320:	10844704 	addi	r2,r2,4380
 4020324:	10c00035 	stwio	r3,0(r2)
	/* Register the ISR. */
	alt_irq_register(KEY_IRQ, edge_capture_ptr,handle_button_interrupts );
 4020328:	018100b4 	movhi	r6,1026
 402032c:	3180a404 	addi	r6,r6,656
 4020330:	e17fff17 	ldw	r5,-4(fp)
 4020334:	01000084 	movi	r4,2
 4020338:	402e3100 	call	402e310 <alt_irq_register>
}
 402033c:	0001883a 	nop
 4020340:	e037883a 	mov	sp,fp
 4020344:	dfc00117 	ldw	ra,4(sp)
 4020348:	df000017 	ldw	fp,0(sp)
 402034c:	dec00204 	addi	sp,sp,8
 4020350:	f800283a 	ret

04020354 <display_seven>:
// display number on the seven segment display
void display_seven(int number) {
 4020354:	defffa04 	addi	sp,sp,-24
 4020358:	dfc00515 	stw	ra,20(sp)
 402035c:	df000415 	stw	fp,16(sp)
 4020360:	dc000315 	stw	r16,12(sp)
 4020364:	df000404 	addi	fp,sp,16
 4020368:	e13ffe15 	stw	r4,-8(fp)
	int i = 0, numlen = (int)log10(number)+1;
 402036c:	e03ffc15 	stw	zero,-16(fp)
 4020370:	e13ffe17 	ldw	r4,-8(fp)
 4020374:	4023ae80 	call	4023ae8 <__floatsidf>
 4020378:	100b883a 	mov	r5,r2
 402037c:	180d883a 	mov	r6,r3
 4020380:	2809883a 	mov	r4,r5
 4020384:	300b883a 	mov	r5,r6
 4020388:	40209a40 	call	40209a4 <log10>
 402038c:	100b883a 	mov	r5,r2
 4020390:	180d883a 	mov	r6,r3
 4020394:	2809883a 	mov	r4,r5
 4020398:	300b883a 	mov	r5,r6
 402039c:	4023a680 	call	4023a68 <__fixdfsi>
 40203a0:	10800044 	addi	r2,r2,1
 40203a4:	e0bffd15 	stw	r2,-12(fp)
	if(number == 0) {
 40203a8:	e0bffe17 	ldw	r2,-8(fp)
 40203ac:	1000021e 	bne	r2,zero,40203b8 <display_seven+0x64>
		numlen = 1;
 40203b0:	00800044 	movi	r2,1
 40203b4:	e0bffd15 	stw	r2,-12(fp)
	}
	for (i = 0; i < 6; i++){
 40203b8:	e03ffc15 	stw	zero,-16(fp)
 40203bc:	00002606 	br	4020458 <display_seven+0x104>
		if(numlen <= i) {
 40203c0:	e0bffd17 	ldw	r2,-12(fp)
 40203c4:	e0fffc17 	ldw	r3,-16(fp)
 40203c8:	18800916 	blt	r3,r2,40203f0 <display_seven+0x9c>
			IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE-0x20*i, 0xff);
 40203cc:	00800834 	movhi	r2,32
 40203d0:	10882144 	addi	r2,r2,8325
 40203d4:	e0fffc17 	ldw	r3,-16(fp)
 40203d8:	10c5c83a 	sub	r2,r2,r3
 40203dc:	1004917a 	slli	r2,r2,5
 40203e0:	1007883a 	mov	r3,r2
 40203e4:	00803fc4 	movi	r2,255
 40203e8:	18800035 	stwio	r2,0(r3)
 40203ec:	00001206 	br	4020438 <display_seven+0xe4>
		} else {
//			printf("%d\n", number);
			IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE-0x20*i, LUT[number%10]);
 40203f0:	00800834 	movhi	r2,32
 40203f4:	10882144 	addi	r2,r2,8325
 40203f8:	e0fffc17 	ldw	r3,-16(fp)
 40203fc:	10c5c83a 	sub	r2,r2,r3
 4020400:	1004917a 	slli	r2,r2,5
 4020404:	1021883a 	mov	r16,r2
 4020408:	e0bffe17 	ldw	r2,-8(fp)
 402040c:	01400284 	movi	r5,10
 4020410:	1009883a 	mov	r4,r2
 4020414:	40215380 	call	4021538 <__modsi3>
 4020418:	1007883a 	mov	r3,r2
 402041c:	00800034 	movhi	r2,0
 4020420:	1080d804 	addi	r2,r2,864
 4020424:	18c7883a 	add	r3,r3,r3
 4020428:	18c7883a 	add	r3,r3,r3
 402042c:	10c5883a 	add	r2,r2,r3
 4020430:	10800017 	ldw	r2,0(r2)
 4020434:	80800035 	stwio	r2,0(r16)
		}
		number = number/10;
 4020438:	e0bffe17 	ldw	r2,-8(fp)
 402043c:	01400284 	movi	r5,10
 4020440:	1009883a 	mov	r4,r2
 4020444:	40214b40 	call	40214b4 <__divsi3>
 4020448:	e0bffe15 	stw	r2,-8(fp)
void display_seven(int number) {
	int i = 0, numlen = (int)log10(number)+1;
	if(number == 0) {
		numlen = 1;
	}
	for (i = 0; i < 6; i++){
 402044c:	e0bffc17 	ldw	r2,-16(fp)
 4020450:	10800044 	addi	r2,r2,1
 4020454:	e0bffc15 	stw	r2,-16(fp)
 4020458:	e0bffc17 	ldw	r2,-16(fp)
 402045c:	10800190 	cmplti	r2,r2,6
 4020460:	103fd71e 	bne	r2,zero,40203c0 <__flash_rwdata_start+0xfffef498>
//			printf("%d\n", number);
			IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE-0x20*i, LUT[number%10]);
		}
		number = number/10;
	}
}
 4020464:	0001883a 	nop
 4020468:	e6ffff04 	addi	sp,fp,-4
 402046c:	dfc00217 	ldw	ra,8(sp)
 4020470:	df000117 	ldw	fp,4(sp)
 4020474:	dc000017 	ldw	r16,0(sp)
 4020478:	dec00304 	addi	sp,sp,12
 402047c:	f800283a 	ret

04020480 <read_nr_switches>:
// read number of HIGH switches
int read_nr_switches() {
 4020480:	defffd04 	addi	sp,sp,-12
 4020484:	dfc00215 	stw	ra,8(sp)
 4020488:	df000115 	stw	fp,4(sp)
 402048c:	df000104 	addi	fp,sp,4
	int data;
	data = IORD_ALTERA_AVALON_PIO_DATA(SWITCHES_BASE);
 4020490:	00810134 	movhi	r2,1028
 4020494:	10844004 	addi	r2,r2,4352
 4020498:	10800037 	ldwio	r2,0(r2)
 402049c:	e0bfff15 	stw	r2,-4(fp)
	printf("Our number %d\n", data);
 40204a0:	e17fff17 	ldw	r5,-4(fp)
 40204a4:	01000034 	movhi	r4,0
 40204a8:	21000004 	addi	r4,r4,0
 40204ac:	4023c680 	call	4023c68 <printf>
	printf("Nr of ones %d\n", count_ones(data));
 40204b0:	e13fff17 	ldw	r4,-4(fp)
 40204b4:	40204e40 	call	40204e4 <count_ones>
 40204b8:	100b883a 	mov	r5,r2
 40204bc:	01000034 	movhi	r4,0
 40204c0:	21000404 	addi	r4,r4,16
 40204c4:	4023c680 	call	4023c68 <printf>
	return count_ones(data);
 40204c8:	e13fff17 	ldw	r4,-4(fp)
 40204cc:	40204e40 	call	40204e4 <count_ones>
}
 40204d0:	e037883a 	mov	sp,fp
 40204d4:	dfc00117 	ldw	ra,4(sp)
 40204d8:	df000017 	ldw	fp,0(sp)
 40204dc:	dec00204 	addi	sp,sp,8
 40204e0:	f800283a 	ret

040204e4 <count_ones>:

// count number of 1s in the binary structure of the number
int count_ones(int nr) {
 40204e4:	defffb04 	addi	sp,sp,-20
 40204e8:	df000415 	stw	fp,16(sp)
 40204ec:	df000404 	addi	fp,sp,16
 40204f0:	e13fff15 	stw	r4,-4(fp)
	int zeros, ones, i;

	zeros = 0;
 40204f4:	e03ffc15 	stw	zero,-16(fp)
	ones = 0;
 40204f8:	e03ffd15 	stw	zero,-12(fp)

	for(i=0; i<INT_SIZE; i++)
 40204fc:	e03ffe15 	stw	zero,-8(fp)
 4020500:	00001006 	br	4020544 <count_ones+0x60>
	{
		/* If LSB is set then increment ones otherwise zeros */
		if(nr & 1)
 4020504:	e0bfff17 	ldw	r2,-4(fp)
 4020508:	1080004c 	andi	r2,r2,1
 402050c:	10000426 	beq	r2,zero,4020520 <count_ones+0x3c>
			ones++;
 4020510:	e0bffd17 	ldw	r2,-12(fp)
 4020514:	10800044 	addi	r2,r2,1
 4020518:	e0bffd15 	stw	r2,-12(fp)
 402051c:	00000306 	br	402052c <count_ones+0x48>
		else
			zeros++;
 4020520:	e0bffc17 	ldw	r2,-16(fp)
 4020524:	10800044 	addi	r2,r2,1
 4020528:	e0bffc15 	stw	r2,-16(fp)

		/* Right shift bits of nr to one position */
		nr >>= 1;
 402052c:	e0bfff17 	ldw	r2,-4(fp)
 4020530:	1005d07a 	srai	r2,r2,1
 4020534:	e0bfff15 	stw	r2,-4(fp)
	int zeros, ones, i;

	zeros = 0;
	ones = 0;

	for(i=0; i<INT_SIZE; i++)
 4020538:	e0bffe17 	ldw	r2,-8(fp)
 402053c:	10800044 	addi	r2,r2,1
 4020540:	e0bffe15 	stw	r2,-8(fp)
 4020544:	e0bffe17 	ldw	r2,-8(fp)
 4020548:	10800830 	cmpltui	r2,r2,32
 402054c:	103fed1e 	bne	r2,zero,4020504 <__flash_rwdata_start+0xfffef5dc>

		/* Right shift bits of nr to one position */
		nr >>= 1;
	}

	return ones;
 4020550:	e0bffd17 	ldw	r2,-12(fp)
}
 4020554:	e037883a 	mov	sp,fp
 4020558:	df000017 	ldw	fp,0(sp)
 402055c:	dec00104 	addi	sp,sp,4
 4020560:	f800283a 	ret

04020564 <ex_c1>:

// exercises
void ex_c1() {
 4020564:	defffe04 	addi	sp,sp,-8
 4020568:	df000115 	stw	fp,4(sp)
 402056c:	df000104 	addi	fp,sp,4
	// READ SWITCHES AND WRITE TO LEDS
	int data;
	data = IORD_ALTERA_AVALON_PIO_DATA(SWITCHES_BASE);
 4020570:	00810134 	movhi	r2,1028
 4020574:	10844004 	addi	r2,r2,4352
 4020578:	10800037 	ldwio	r2,0(r2)
 402057c:	e0bfff15 	stw	r2,-4(fp)
	//  printf("%d",data);
	IOWR_ALTERA_AVALON_PIO_DATA(LEDS_BASE, data);
 4020580:	00810134 	movhi	r2,1028
 4020584:	10843004 	addi	r2,r2,4288
 4020588:	e0ffff17 	ldw	r3,-4(fp)
 402058c:	10c00035 	stwio	r3,0(r2)
	//  IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, 0x02);
	//  IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, 0x78);
	//  IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, 0x00);
	//  IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, 0x10);

}
 4020590:	0001883a 	nop
 4020594:	e037883a 	mov	sp,fp
 4020598:	df000017 	ldw	fp,0(sp)
 402059c:	dec00104 	addi	sp,sp,4
 40205a0:	f800283a 	ret

040205a4 <ex_c2>:

void ex_c2() {
 40205a4:	defffd04 	addi	sp,sp,-12
 40205a8:	dfc00215 	stw	ra,8(sp)
 40205ac:	df000115 	stw	fp,4(sp)
 40205b0:	df000104 	addi	fp,sp,4
	// C2 7 segment display counter value
	int i = 0;
 40205b4:	e03fff15 	stw	zero,-4(fp)
	for (i = 0; i < 10000; i++) {
 40205b8:	e03fff15 	stw	zero,-4(fp)
 40205bc:	00000b06 	br	40205ec <ex_c2+0x48>
	  display_seven(i);
 40205c0:	e13fff17 	ldw	r4,-4(fp)
 40205c4:	40203540 	call	4020354 <display_seven>
	  printf("Wrote %d to display\n", i);
 40205c8:	e17fff17 	ldw	r5,-4(fp)
 40205cc:	01000034 	movhi	r4,0
 40205d0:	21000804 	addi	r4,r4,32
 40205d4:	4023c680 	call	4023c68 <printf>
	  usleep(20000);
 40205d8:	01138804 	movi	r4,20000
 40205dc:	402ec200 	call	402ec20 <usleep>
}

void ex_c2() {
	// C2 7 segment display counter value
	int i = 0;
	for (i = 0; i < 10000; i++) {
 40205e0:	e0bfff17 	ldw	r2,-4(fp)
 40205e4:	10800044 	addi	r2,r2,1
 40205e8:	e0bfff15 	stw	r2,-4(fp)
 40205ec:	e0bfff17 	ldw	r2,-4(fp)
 40205f0:	1089c410 	cmplti	r2,r2,10000
 40205f4:	103ff21e 	bne	r2,zero,40205c0 <__flash_rwdata_start+0xfffef698>
	  display_seven(i);
	  printf("Wrote %d to display\n", i);
	  usleep(20000);
	}
	// ---------------------------------
}
 40205f8:	0001883a 	nop
 40205fc:	e037883a 	mov	sp,fp
 4020600:	dfc00117 	ldw	ra,4(sp)
 4020604:	df000017 	ldw	fp,0(sp)
 4020608:	dec00204 	addi	sp,sp,8
 402060c:	f800283a 	ret

04020610 <ex_c3>:

void ex_c3() {
 4020610:	defffd04 	addi	sp,sp,-12
 4020614:	dfc00215 	stw	ra,8(sp)
 4020618:	df000115 	stw	fp,4(sp)
 402061c:	df000104 	addi	fp,sp,4
	init_button_pio();
 4020620:	40202f00 	call	40202f0 <init_button_pio>
	int nr_switches = read_nr_switches();
 4020624:	40204800 	call	4020480 <read_nr_switches>
 4020628:	e0bfff15 	stw	r2,-4(fp)
	while(1) {
		if(edge_capture == 1) {
 402062c:	d0a01117 	ldw	r2,-32700(gp)
 4020630:	10800058 	cmpnei	r2,r2,1
 4020634:	1000031e 	bne	r2,zero,4020644 <ex_c3+0x34>
			display_seven(0);
 4020638:	0009883a 	mov	r4,zero
 402063c:	40203540 	call	4020354 <display_seven>
 4020640:	00001a06 	br	40206ac <ex_c3+0x9c>
		} else {
			display_seven(log2(edge_capture));
 4020644:	d0a01117 	ldw	r2,-32700(gp)
 4020648:	1009883a 	mov	r4,r2
 402064c:	4023ae80 	call	4023ae8 <__floatsidf>
 4020650:	100b883a 	mov	r5,r2
 4020654:	180d883a 	mov	r6,r3
 4020658:	2809883a 	mov	r4,r5
 402065c:	300b883a 	mov	r5,r6
 4020660:	40208080 	call	4020808 <log>
 4020664:	1011883a 	mov	r8,r2
 4020668:	1813883a 	mov	r9,r3
 402066c:	01bfbeb4 	movhi	r6,65274
 4020670:	318e7bc4 	addi	r6,r6,14831
 4020674:	01cff9b4 	movhi	r7,16358
 4020678:	39cb9084 	addi	r7,r7,11842
 402067c:	4009883a 	mov	r4,r8
 4020680:	480b883a 	mov	r5,r9
 4020684:	4021f140 	call	4021f14 <__divdf3>
 4020688:	1009883a 	mov	r4,r2
 402068c:	180b883a 	mov	r5,r3
 4020690:	2005883a 	mov	r2,r4
 4020694:	2807883a 	mov	r3,r5
 4020698:	1009883a 	mov	r4,r2
 402069c:	180b883a 	mov	r5,r3
 40206a0:	4023a680 	call	4023a68 <__fixdfsi>
 40206a4:	1009883a 	mov	r4,r2
 40206a8:	40203540 	call	4020354 <display_seven>
		}

		usleep(nr_switches*1000000);
 40206ac:	e0ffff17 	ldw	r3,-4(fp)
 40206b0:	008003f4 	movhi	r2,15
 40206b4:	10909004 	addi	r2,r2,16960
 40206b8:	1885383a 	mul	r2,r3,r2
 40206bc:	1009883a 	mov	r4,r2
 40206c0:	402ec200 	call	402ec20 <usleep>
	}
 40206c4:	003fd906 	br	402062c <__flash_rwdata_start+0xfffef704>

040206c8 <ex_c4>:
}

void ex_c4() {
 40206c8:	defffc04 	addi	sp,sp,-16
 40206cc:	dfc00315 	stw	ra,12(sp)
 40206d0:	df000215 	stw	fp,8(sp)
 40206d4:	df000204 	addi	fp,sp,8
	init_button_pio();
 40206d8:	40202f00 	call	40202f0 <init_button_pio>
	while(1) {
		if(edge_capture == 1) {
 40206dc:	d0a01117 	ldw	r2,-32700(gp)
 40206e0:	10800058 	cmpnei	r2,r2,1
 40206e4:	103ffd1e 	bne	r2,zero,40206dc <__flash_rwdata_start+0xfffef7b4>
			int r = (rand()%10) * 10000000;      // Returns a pseudo-random integer between 0 and RAND_MAX.
 40206e8:	4023d900 	call	4023d90 <rand>
 40206ec:	01400284 	movi	r5,10
 40206f0:	1009883a 	mov	r4,r2
 40206f4:	40215380 	call	4021538 <__modsi3>
 40206f8:	1007883a 	mov	r3,r2
 40206fc:	00802674 	movhi	r2,153
 4020700:	10a5a004 	addi	r2,r2,-27008
 4020704:	1885383a 	mul	r2,r3,r2
 4020708:	e0bffe15 	stw	r2,-8(fp)
			printf("r is %d\n", r);
 402070c:	e17ffe17 	ldw	r5,-8(fp)
 4020710:	01000034 	movhi	r4,0
 4020714:	21000e04 	addi	r4,r4,56
 4020718:	4023c680 	call	4023c68 <printf>
			int start = alt_timestamp_start(); // intialize the timer
 402071c:	402f8bc0 	call	402f8bc <alt_timestamp_start>
 4020720:	e0bfff15 	stw	r2,-4(fp)
			while(alt_timestamp()/10 < r) {
 4020724:	00001806 	br	4020788 <ex_c4+0xc0>
				printf("%d\n", (alt_timestamp()));
 4020728:	402f9340 	call	402f934 <alt_timestamp>
 402072c:	100b883a 	mov	r5,r2
 4020730:	01000034 	movhi	r4,0
 4020734:	21001104 	addi	r4,r4,68
 4020738:	4023c680 	call	4023c68 <printf>
				IOWR_ALTERA_AVALON_PIO_DATA(LEDS_BASE, 0b01010101010);
 402073c:	00c0aa84 	movi	r3,682
 4020740:	00810134 	movhi	r2,1028
 4020744:	10843004 	addi	r2,r2,4288
 4020748:	10c00035 	stwio	r3,0(r2)
				usleep(1000000/2);
 402074c:	01000234 	movhi	r4,8
 4020750:	21284804 	addi	r4,r4,-24288
 4020754:	402ec200 	call	402ec20 <usleep>
				IOWR_ALTERA_AVALON_PIO_DATA(LEDS_BASE, 0b10101010101);
 4020758:	00c15544 	movi	r3,1365
 402075c:	00810134 	movhi	r2,1028
 4020760:	10843004 	addi	r2,r2,4288
 4020764:	10c00035 	stwio	r3,0(r2)
				usleep(1000000/2);
 4020768:	01000234 	movhi	r4,8
 402076c:	21284804 	addi	r4,r4,-24288
 4020770:	402ec200 	call	402ec20 <usleep>
				printf("%d\n", (alt_timestamp()));
 4020774:	402f9340 	call	402f934 <alt_timestamp>
 4020778:	100b883a 	mov	r5,r2
 402077c:	01000034 	movhi	r4,0
 4020780:	21001104 	addi	r4,r4,68
 4020784:	4023c680 	call	4023c68 <printf>
	while(1) {
		if(edge_capture == 1) {
			int r = (rand()%10) * 10000000;      // Returns a pseudo-random integer between 0 and RAND_MAX.
			printf("r is %d\n", r);
			int start = alt_timestamp_start(); // intialize the timer
			while(alt_timestamp()/10 < r) {
 4020788:	402f9340 	call	402f934 <alt_timestamp>
 402078c:	01400284 	movi	r5,10
 4020790:	1009883a 	mov	r4,r2
 4020794:	40215ac0 	call	40215ac <__udivsi3>
 4020798:	1007883a 	mov	r3,r2
 402079c:	e0bffe17 	ldw	r2,-8(fp)
 40207a0:	18bfe136 	bltu	r3,r2,4020728 <__flash_rwdata_start+0xfffef800>
			}

//			alt_timestamp(); // read the timer
//			alt_timestamp_freq() // read the frequence of the timer

			IOWR_ALTERA_AVALON_PIO_DATA(LEDS_BASE, 0xff);
 40207a4:	00c03fc4 	movi	r3,255
 40207a8:	00810134 	movhi	r2,1028
 40207ac:	10843004 	addi	r2,r2,4288
 40207b0:	10c00035 	stwio	r3,0(r2)
			edge_capture = 2;
 40207b4:	00800084 	movi	r2,2
 40207b8:	d0a01115 	stw	r2,-32700(gp)
		}
	}
 40207bc:	003fc706 	br	40206dc <__flash_rwdata_start+0xfffef7b4>

040207c0 <main>:
}

int main()
{
 40207c0:	defffe04 	addi	sp,sp,-8
 40207c4:	dfc00115 	stw	ra,4(sp)
 40207c8:	df000015 	stw	fp,0(sp)
 40207cc:	d839883a 	mov	fp,sp
  printf("Upload successful. :)\n");
 40207d0:	01000034 	movhi	r4,0
 40207d4:	21001204 	addi	r4,r4,72
 40207d8:	4023d640 	call	4023d64 <puts>

  // for random numbers
  srand(time(NULL));   // Initialization, should only be called once.
 40207dc:	0009883a 	mov	r4,zero
 40207e0:	4023e8c0 	call	4023e8c <time>
 40207e4:	1009883a 	mov	r4,r2
 40207e8:	4023d780 	call	4023d78 <srand>
  ex_c4();
 40207ec:	40206c80 	call	40206c8 <ex_c4>
  return 0;
 40207f0:	0005883a 	mov	r2,zero
}
 40207f4:	e037883a 	mov	sp,fp
 40207f8:	dfc00117 	ldw	ra,4(sp)
 40207fc:	df000017 	ldw	fp,0(sp)
 4020800:	dec00204 	addi	sp,sp,8
 4020804:	f800283a 	ret

04020808 <log>:
 4020808:	defff104 	addi	sp,sp,-60
 402080c:	dd000d15 	stw	r20,52(sp)
 4020810:	05000034 	movhi	r20,0
 4020814:	dcc00c15 	stw	r19,48(sp)
 4020818:	dc800b15 	stw	r18,44(sp)
 402081c:	dc400a15 	stw	r17,40(sp)
 4020820:	dc000915 	stw	r16,36(sp)
 4020824:	dfc00e15 	stw	ra,56(sp)
 4020828:	a5078d04 	addi	r20,r20,7732
 402082c:	2027883a 	mov	r19,r4
 4020830:	2825883a 	mov	r18,r5
 4020834:	4020b400 	call	4020b40 <__ieee754_log>
 4020838:	1821883a 	mov	r16,r3
 402083c:	a0c00017 	ldw	r3,0(r20)
 4020840:	1023883a 	mov	r17,r2
 4020844:	00bfffc4 	movi	r2,-1
 4020848:	18800a26 	beq	r3,r2,4020874 <log+0x6c>
 402084c:	9809883a 	mov	r4,r19
 4020850:	900b883a 	mov	r5,r18
 4020854:	402142c0 	call	402142c <__fpclassifyd>
 4020858:	10000626 	beq	r2,zero,4020874 <log+0x6c>
 402085c:	000d883a 	mov	r6,zero
 4020860:	000f883a 	mov	r7,zero
 4020864:	9809883a 	mov	r4,r19
 4020868:	900b883a 	mov	r5,r18
 402086c:	40228840 	call	4022884 <__gedf2>
 4020870:	00800a0e 	bge	zero,r2,402089c <log+0x94>
 4020874:	8805883a 	mov	r2,r17
 4020878:	8007883a 	mov	r3,r16
 402087c:	dfc00e17 	ldw	ra,56(sp)
 4020880:	dd000d17 	ldw	r20,52(sp)
 4020884:	dcc00c17 	ldw	r19,48(sp)
 4020888:	dc800b17 	ldw	r18,44(sp)
 402088c:	dc400a17 	ldw	r17,40(sp)
 4020890:	dc000917 	ldw	r16,36(sp)
 4020894:	dec00f04 	addi	sp,sp,60
 4020898:	f800283a 	ret
 402089c:	00800034 	movhi	r2,0
 40208a0:	a4000017 	ldw	r16,0(r20)
 40208a4:	10801804 	addi	r2,r2,96
 40208a8:	d8000815 	stw	zero,32(sp)
 40208ac:	d8800115 	stw	r2,4(sp)
 40208b0:	dcc00215 	stw	r19,8(sp)
 40208b4:	dc800315 	stw	r18,12(sp)
 40208b8:	dcc00415 	stw	r19,16(sp)
 40208bc:	dc800515 	stw	r18,20(sp)
 40208c0:	000d883a 	mov	r6,zero
 40208c4:	000f883a 	mov	r7,zero
 40208c8:	9809883a 	mov	r4,r19
 40208cc:	900b883a 	mov	r5,r18
 40208d0:	8000101e 	bne	r16,zero,4020914 <log+0x10c>
 40208d4:	00b80034 	movhi	r2,57344
 40208d8:	d8800615 	stw	r2,24(sp)
 40208dc:	00b1fc34 	movhi	r2,51184
 40208e0:	10bfffc4 	addi	r2,r2,-1
 40208e4:	d8800715 	stw	r2,28(sp)
 40208e8:	40227fc0 	call	40227fc <__eqdf2>
 40208ec:	10001f1e 	bne	r2,zero,402096c <log+0x164>
 40208f0:	00800084 	movi	r2,2
 40208f4:	d8800015 	stw	r2,0(sp)
 40208f8:	d809883a 	mov	r4,sp
 40208fc:	40214a00 	call	40214a0 <matherr>
 4020900:	1000151e 	bne	r2,zero,4020958 <log+0x150>
 4020904:	4023c280 	call	4023c28 <__errno>
 4020908:	00c00884 	movi	r3,34
 402090c:	10c00015 	stw	r3,0(r2)
 4020910:	00001106 	br	4020958 <log+0x150>
 4020914:	00bffc34 	movhi	r2,65520
 4020918:	d8000615 	stw	zero,24(sp)
 402091c:	d8800715 	stw	r2,28(sp)
 4020920:	40227fc0 	call	40227fc <__eqdf2>
 4020924:	10001726 	beq	r2,zero,4020984 <log+0x17c>
 4020928:	00800044 	movi	r2,1
 402092c:	d8800015 	stw	r2,0(sp)
 4020930:	00800084 	movi	r2,2
 4020934:	80800f1e 	bne	r16,r2,4020974 <log+0x16c>
 4020938:	4023c280 	call	4023c28 <__errno>
 402093c:	00c00844 	movi	r3,33
 4020940:	10c00015 	stw	r3,0(r2)
 4020944:	01000034 	movhi	r4,0
 4020948:	21006504 	addi	r4,r4,404
 402094c:	40214a80 	call	40214a8 <nan>
 4020950:	d8800615 	stw	r2,24(sp)
 4020954:	d8c00715 	stw	r3,28(sp)
 4020958:	d8800817 	ldw	r2,32(sp)
 402095c:	10000d1e 	bne	r2,zero,4020994 <log+0x18c>
 4020960:	d8800617 	ldw	r2,24(sp)
 4020964:	d8c00717 	ldw	r3,28(sp)
 4020968:	003fc406 	br	402087c <__flash_rwdata_start+0xfffef954>
 402096c:	00800044 	movi	r2,1
 4020970:	d8800015 	stw	r2,0(sp)
 4020974:	d809883a 	mov	r4,sp
 4020978:	40214a00 	call	40214a0 <matherr>
 402097c:	103ff11e 	bne	r2,zero,4020944 <__flash_rwdata_start+0xfffefa1c>
 4020980:	003fed06 	br	4020938 <__flash_rwdata_start+0xfffefa10>
 4020984:	00800084 	movi	r2,2
 4020988:	d8800015 	stw	r2,0(sp)
 402098c:	80bfdd26 	beq	r16,r2,4020904 <__flash_rwdata_start+0xfffef9dc>
 4020990:	003fd906 	br	40208f8 <__flash_rwdata_start+0xfffef9d0>
 4020994:	4023c280 	call	4023c28 <__errno>
 4020998:	d8c00817 	ldw	r3,32(sp)
 402099c:	10c00015 	stw	r3,0(r2)
 40209a0:	003fef06 	br	4020960 <__flash_rwdata_start+0xfffefa38>

040209a4 <log10>:
 40209a4:	defff104 	addi	sp,sp,-60
 40209a8:	dd000d15 	stw	r20,52(sp)
 40209ac:	05000034 	movhi	r20,0
 40209b0:	dcc00c15 	stw	r19,48(sp)
 40209b4:	dc800b15 	stw	r18,44(sp)
 40209b8:	dc400a15 	stw	r17,40(sp)
 40209bc:	dc000915 	stw	r16,36(sp)
 40209c0:	dfc00e15 	stw	ra,56(sp)
 40209c4:	a5078d04 	addi	r20,r20,7732
 40209c8:	2027883a 	mov	r19,r4
 40209cc:	2825883a 	mov	r18,r5
 40209d0:	402125c0 	call	402125c <__ieee754_log10>
 40209d4:	1821883a 	mov	r16,r3
 40209d8:	a0c00017 	ldw	r3,0(r20)
 40209dc:	1023883a 	mov	r17,r2
 40209e0:	00bfffc4 	movi	r2,-1
 40209e4:	18800a26 	beq	r3,r2,4020a10 <log10+0x6c>
 40209e8:	9809883a 	mov	r4,r19
 40209ec:	900b883a 	mov	r5,r18
 40209f0:	402142c0 	call	402142c <__fpclassifyd>
 40209f4:	10000626 	beq	r2,zero,4020a10 <log10+0x6c>
 40209f8:	000d883a 	mov	r6,zero
 40209fc:	000f883a 	mov	r7,zero
 4020a00:	9809883a 	mov	r4,r19
 4020a04:	900b883a 	mov	r5,r18
 4020a08:	40229600 	call	4022960 <__ledf2>
 4020a0c:	00800a0e 	bge	zero,r2,4020a38 <log10+0x94>
 4020a10:	8805883a 	mov	r2,r17
 4020a14:	8007883a 	mov	r3,r16
 4020a18:	dfc00e17 	ldw	ra,56(sp)
 4020a1c:	dd000d17 	ldw	r20,52(sp)
 4020a20:	dcc00c17 	ldw	r19,48(sp)
 4020a24:	dc800b17 	ldw	r18,44(sp)
 4020a28:	dc400a17 	ldw	r17,40(sp)
 4020a2c:	dc000917 	ldw	r16,36(sp)
 4020a30:	dec00f04 	addi	sp,sp,60
 4020a34:	f800283a 	ret
 4020a38:	00800034 	movhi	r2,0
 4020a3c:	a4000017 	ldw	r16,0(r20)
 4020a40:	10801904 	addi	r2,r2,100
 4020a44:	d8000815 	stw	zero,32(sp)
 4020a48:	d8800115 	stw	r2,4(sp)
 4020a4c:	dcc00215 	stw	r19,8(sp)
 4020a50:	dc800315 	stw	r18,12(sp)
 4020a54:	dcc00415 	stw	r19,16(sp)
 4020a58:	dc800515 	stw	r18,20(sp)
 4020a5c:	000d883a 	mov	r6,zero
 4020a60:	000f883a 	mov	r7,zero
 4020a64:	9809883a 	mov	r4,r19
 4020a68:	900b883a 	mov	r5,r18
 4020a6c:	8000101e 	bne	r16,zero,4020ab0 <log10+0x10c>
 4020a70:	00b80034 	movhi	r2,57344
 4020a74:	d8800615 	stw	r2,24(sp)
 4020a78:	00b1fc34 	movhi	r2,51184
 4020a7c:	10bfffc4 	addi	r2,r2,-1
 4020a80:	d8800715 	stw	r2,28(sp)
 4020a84:	40227fc0 	call	40227fc <__eqdf2>
 4020a88:	10001f1e 	bne	r2,zero,4020b08 <log10+0x164>
 4020a8c:	00800084 	movi	r2,2
 4020a90:	d8800015 	stw	r2,0(sp)
 4020a94:	d809883a 	mov	r4,sp
 4020a98:	40214a00 	call	40214a0 <matherr>
 4020a9c:	1000151e 	bne	r2,zero,4020af4 <log10+0x150>
 4020aa0:	4023c280 	call	4023c28 <__errno>
 4020aa4:	00c00884 	movi	r3,34
 4020aa8:	10c00015 	stw	r3,0(r2)
 4020aac:	00001106 	br	4020af4 <log10+0x150>
 4020ab0:	00bffc34 	movhi	r2,65520
 4020ab4:	d8000615 	stw	zero,24(sp)
 4020ab8:	d8800715 	stw	r2,28(sp)
 4020abc:	40227fc0 	call	40227fc <__eqdf2>
 4020ac0:	10001726 	beq	r2,zero,4020b20 <log10+0x17c>
 4020ac4:	00800044 	movi	r2,1
 4020ac8:	d8800015 	stw	r2,0(sp)
 4020acc:	00800084 	movi	r2,2
 4020ad0:	80800f1e 	bne	r16,r2,4020b10 <log10+0x16c>
 4020ad4:	4023c280 	call	4023c28 <__errno>
 4020ad8:	00c00844 	movi	r3,33
 4020adc:	10c00015 	stw	r3,0(r2)
 4020ae0:	01000034 	movhi	r4,0
 4020ae4:	21006504 	addi	r4,r4,404
 4020ae8:	40214a80 	call	40214a8 <nan>
 4020aec:	d8800615 	stw	r2,24(sp)
 4020af0:	d8c00715 	stw	r3,28(sp)
 4020af4:	d8800817 	ldw	r2,32(sp)
 4020af8:	10000d1e 	bne	r2,zero,4020b30 <log10+0x18c>
 4020afc:	d8800617 	ldw	r2,24(sp)
 4020b00:	d8c00717 	ldw	r3,28(sp)
 4020b04:	003fc406 	br	4020a18 <__flash_rwdata_start+0xfffefaf0>
 4020b08:	00800044 	movi	r2,1
 4020b0c:	d8800015 	stw	r2,0(sp)
 4020b10:	d809883a 	mov	r4,sp
 4020b14:	40214a00 	call	40214a0 <matherr>
 4020b18:	103ff11e 	bne	r2,zero,4020ae0 <__flash_rwdata_start+0xfffefbb8>
 4020b1c:	003fed06 	br	4020ad4 <__flash_rwdata_start+0xfffefbac>
 4020b20:	00800084 	movi	r2,2
 4020b24:	d8800015 	stw	r2,0(sp)
 4020b28:	80bfdd26 	beq	r16,r2,4020aa0 <__flash_rwdata_start+0xfffefb78>
 4020b2c:	003fd906 	br	4020a94 <__flash_rwdata_start+0xfffefb6c>
 4020b30:	4023c280 	call	4023c28 <__errno>
 4020b34:	d8c00817 	ldw	r3,32(sp)
 4020b38:	10c00015 	stw	r3,0(r2)
 4020b3c:	003fef06 	br	4020afc <__flash_rwdata_start+0xfffefbd4>

04020b40 <__ieee754_log>:
 4020b40:	defff204 	addi	sp,sp,-56
 4020b44:	01800434 	movhi	r6,16
 4020b48:	dfc00d15 	stw	ra,52(sp)
 4020b4c:	df000c15 	stw	fp,48(sp)
 4020b50:	ddc00b15 	stw	r23,44(sp)
 4020b54:	dd800a15 	stw	r22,40(sp)
 4020b58:	dd400915 	stw	r21,36(sp)
 4020b5c:	dd000815 	stw	r20,32(sp)
 4020b60:	dcc00715 	stw	r19,28(sp)
 4020b64:	dc800615 	stw	r18,24(sp)
 4020b68:	dc400515 	stw	r17,20(sp)
 4020b6c:	dc000415 	stw	r16,16(sp)
 4020b70:	31bfffc4 	addi	r6,r6,-1
 4020b74:	280f883a 	mov	r7,r5
 4020b78:	2005883a 	mov	r2,r4
 4020b7c:	31404616 	blt	r6,r5,4020c98 <__ieee754_log+0x158>
 4020b80:	00e00034 	movhi	r3,32768
 4020b84:	18ffffc4 	addi	r3,r3,-1
 4020b88:	28c6703a 	and	r3,r5,r3
 4020b8c:	1906b03a 	or	r3,r3,r4
 4020b90:	1800f426 	beq	r3,zero,4020f64 <__ieee754_log+0x424>
 4020b94:	28017816 	blt	r5,zero,4021178 <__ieee754_log+0x638>
 4020b98:	01d0d434 	movhi	r7,17232
 4020b9c:	000d883a 	mov	r6,zero
 4020ba0:	4022a540 	call	4022a54 <__muldf3>
 4020ba4:	015ffc34 	movhi	r5,32752
 4020ba8:	297fffc4 	addi	r5,r5,-1
 4020bac:	180f883a 	mov	r7,r3
 4020bb0:	013ff284 	movi	r4,-54
 4020bb4:	28c03d16 	blt	r5,r3,4020cac <__ieee754_log+0x16c>
 4020bb8:	04c00434 	movhi	r19,16
 4020bbc:	9cffffc4 	addi	r19,r19,-1
 4020bc0:	01400274 	movhi	r5,9
 4020bc4:	1cf8703a 	and	fp,r3,r19
 4020bc8:	2957d904 	addi	r5,r5,24420
 4020bcc:	1821d53a 	srai	r16,r3,20
 4020bd0:	e14b883a 	add	r5,fp,r5
 4020bd4:	2940042c 	andhi	r5,r5,16
 4020bd8:	2807d53a 	srai	r3,r5,20
 4020bdc:	843f0044 	addi	r16,r16,-1023
 4020be0:	294ffc3c 	xorhi	r5,r5,16368
 4020be4:	8121883a 	add	r16,r16,r4
 4020be8:	000d883a 	mov	r6,zero
 4020bec:	01cffc34 	movhi	r7,16368
 4020bf0:	1009883a 	mov	r4,r2
 4020bf4:	2f0ab03a 	or	r5,r5,fp
 4020bf8:	1c21883a 	add	r16,r3,r16
 4020bfc:	402316c0 	call	402316c <__subdf3>
 4020c00:	1025883a 	mov	r18,r2
 4020c04:	e0800084 	addi	r2,fp,2
 4020c08:	14e6703a 	and	r19,r2,r19
 4020c0c:	00800084 	movi	r2,2
 4020c10:	1823883a 	mov	r17,r3
 4020c14:	000d883a 	mov	r6,zero
 4020c18:	14c03416 	blt	r2,r19,4020cec <__ieee754_log+0x1ac>
 4020c1c:	000f883a 	mov	r7,zero
 4020c20:	9009883a 	mov	r4,r18
 4020c24:	180b883a 	mov	r5,r3
 4020c28:	40227fc0 	call	40227fc <__eqdf2>
 4020c2c:	1000d31e 	bne	r2,zero,4020f7c <__ieee754_log+0x43c>
 4020c30:	80015926 	beq	r16,zero,4021198 <__ieee754_log+0x658>
 4020c34:	8009883a 	mov	r4,r16
 4020c38:	4023ae80 	call	4023ae8 <__floatsidf>
 4020c3c:	01cff9b4 	movhi	r7,16358
 4020c40:	39cb9084 	addi	r7,r7,11842
 4020c44:	01bfb834 	movhi	r6,65248
 4020c48:	1009883a 	mov	r4,r2
 4020c4c:	180b883a 	mov	r5,r3
 4020c50:	1023883a 	mov	r17,r2
 4020c54:	1821883a 	mov	r16,r3
 4020c58:	4022a540 	call	4022a54 <__muldf3>
 4020c5c:	018d5e74 	movhi	r6,13689
 4020c60:	01cf7ab4 	movhi	r7,15850
 4020c64:	8809883a 	mov	r4,r17
 4020c68:	800b883a 	mov	r5,r16
 4020c6c:	318f1d84 	addi	r6,r6,15478
 4020c70:	39ce7bc4 	addi	r7,r7,14831
 4020c74:	1027883a 	mov	r19,r2
 4020c78:	1825883a 	mov	r18,r3
 4020c7c:	4022a540 	call	4022a54 <__muldf3>
 4020c80:	100d883a 	mov	r6,r2
 4020c84:	180f883a 	mov	r7,r3
 4020c88:	9809883a 	mov	r4,r19
 4020c8c:	900b883a 	mov	r5,r18
 4020c90:	40216680 	call	4021668 <__adddf3>
 4020c94:	00000906 	br	4020cbc <__ieee754_log+0x17c>
 4020c98:	2807883a 	mov	r3,r5
 4020c9c:	015ffc34 	movhi	r5,32752
 4020ca0:	297fffc4 	addi	r5,r5,-1
 4020ca4:	0009883a 	mov	r4,zero
 4020ca8:	28ffc30e 	bge	r5,r3,4020bb8 <__flash_rwdata_start+0xfffefc90>
 4020cac:	100d883a 	mov	r6,r2
 4020cb0:	1009883a 	mov	r4,r2
 4020cb4:	380b883a 	mov	r5,r7
 4020cb8:	40216680 	call	4021668 <__adddf3>
 4020cbc:	dfc00d17 	ldw	ra,52(sp)
 4020cc0:	df000c17 	ldw	fp,48(sp)
 4020cc4:	ddc00b17 	ldw	r23,44(sp)
 4020cc8:	dd800a17 	ldw	r22,40(sp)
 4020ccc:	dd400917 	ldw	r21,36(sp)
 4020cd0:	dd000817 	ldw	r20,32(sp)
 4020cd4:	dcc00717 	ldw	r19,28(sp)
 4020cd8:	dc800617 	ldw	r18,24(sp)
 4020cdc:	dc400517 	ldw	r17,20(sp)
 4020ce0:	dc000417 	ldw	r16,16(sp)
 4020ce4:	dec00e04 	addi	sp,sp,56
 4020ce8:	f800283a 	ret
 4020cec:	01d00034 	movhi	r7,16384
 4020cf0:	9009883a 	mov	r4,r18
 4020cf4:	180b883a 	mov	r5,r3
 4020cf8:	40216680 	call	4021668 <__adddf3>
 4020cfc:	100d883a 	mov	r6,r2
 4020d00:	180f883a 	mov	r7,r3
 4020d04:	880b883a 	mov	r5,r17
 4020d08:	9009883a 	mov	r4,r18
 4020d0c:	4021f140 	call	4021f14 <__divdf3>
 4020d10:	8009883a 	mov	r4,r16
 4020d14:	102d883a 	mov	r22,r2
 4020d18:	182b883a 	mov	r21,r3
 4020d1c:	4023ae80 	call	4023ae8 <__floatsidf>
 4020d20:	b00d883a 	mov	r6,r22
 4020d24:	a80f883a 	mov	r7,r21
 4020d28:	b009883a 	mov	r4,r22
 4020d2c:	a80b883a 	mov	r5,r21
 4020d30:	d8800015 	stw	r2,0(sp)
 4020d34:	d8c00115 	stw	r3,4(sp)
 4020d38:	4022a540 	call	4022a54 <__muldf3>
 4020d3c:	027ffeb4 	movhi	r9,65530
 4020d40:	4a7ae184 	addi	r9,r9,-5242
 4020d44:	100d883a 	mov	r6,r2
 4020d48:	180f883a 	mov	r7,r3
 4020d4c:	1009883a 	mov	r4,r2
 4020d50:	180b883a 	mov	r5,r3
 4020d54:	e26f883a 	add	r23,fp,r9
 4020d58:	d8c00315 	stw	r3,12(sp)
 4020d5c:	d8800215 	stw	r2,8(sp)
 4020d60:	4022a540 	call	4022a54 <__muldf3>
 4020d64:	01b7cfb4 	movhi	r6,57150
 4020d68:	01cff0f4 	movhi	r7,16323
 4020d6c:	31949104 	addi	r6,r6,21060
 4020d70:	39fc4484 	addi	r7,r7,-3822
 4020d74:	1009883a 	mov	r4,r2
 4020d78:	180b883a 	mov	r5,r3
 4020d7c:	1029883a 	mov	r20,r2
 4020d80:	1827883a 	mov	r19,r3
 4020d84:	4022a540 	call	4022a54 <__muldf3>
 4020d88:	01a5b2f4 	movhi	r6,38603
 4020d8c:	01cff1f4 	movhi	r7,16327
 4020d90:	3180f784 	addi	r6,r6,990
 4020d94:	39d19904 	addi	r7,r7,18020
 4020d98:	1009883a 	mov	r4,r2
 4020d9c:	180b883a 	mov	r5,r3
 4020da0:	40216680 	call	4021668 <__adddf3>
 4020da4:	a00d883a 	mov	r6,r20
 4020da8:	980f883a 	mov	r7,r19
 4020dac:	1009883a 	mov	r4,r2
 4020db0:	180b883a 	mov	r5,r3
 4020db4:	4022a540 	call	4022a54 <__muldf3>
 4020db8:	01a508f4 	movhi	r6,37923
 4020dbc:	01cff4b4 	movhi	r7,16338
 4020dc0:	31a4d644 	addi	r6,r6,-27815
 4020dc4:	39d24904 	addi	r7,r7,18724
 4020dc8:	1009883a 	mov	r4,r2
 4020dcc:	180b883a 	mov	r5,r3
 4020dd0:	40216680 	call	4021668 <__adddf3>
 4020dd4:	a00d883a 	mov	r6,r20
 4020dd8:	980f883a 	mov	r7,r19
 4020ddc:	1009883a 	mov	r4,r2
 4020de0:	180b883a 	mov	r5,r3
 4020de4:	4022a540 	call	4022a54 <__muldf3>
 4020de8:	01955574 	movhi	r6,21845
 4020dec:	01cff974 	movhi	r7,16357
 4020df0:	319564c4 	addi	r6,r6,21907
 4020df4:	39d55544 	addi	r7,r7,21845
 4020df8:	1009883a 	mov	r4,r2
 4020dfc:	180b883a 	mov	r5,r3
 4020e00:	40216680 	call	4021668 <__adddf3>
 4020e04:	dac00217 	ldw	r11,8(sp)
 4020e08:	da800317 	ldw	r10,12(sp)
 4020e0c:	1009883a 	mov	r4,r2
 4020e10:	580d883a 	mov	r6,r11
 4020e14:	500f883a 	mov	r7,r10
 4020e18:	180b883a 	mov	r5,r3
 4020e1c:	4022a540 	call	4022a54 <__muldf3>
 4020e20:	01b41e74 	movhi	r6,53369
 4020e24:	01cff134 	movhi	r7,16324
 4020e28:	a009883a 	mov	r4,r20
 4020e2c:	980b883a 	mov	r5,r19
 4020e30:	31b1a7c4 	addi	r6,r6,-14689
 4020e34:	39e68244 	addi	r7,r7,-26103
 4020e38:	d8c00315 	stw	r3,12(sp)
 4020e3c:	d8800215 	stw	r2,8(sp)
 4020e40:	4022a540 	call	4022a54 <__muldf3>
 4020e44:	018763b4 	movhi	r6,7566
 4020e48:	01cff334 	movhi	r7,16332
 4020e4c:	319e2bc4 	addi	r6,r6,30895
 4020e50:	39dc7144 	addi	r7,r7,29125
 4020e54:	1009883a 	mov	r4,r2
 4020e58:	180b883a 	mov	r5,r3
 4020e5c:	40216680 	call	4021668 <__adddf3>
 4020e60:	a00d883a 	mov	r6,r20
 4020e64:	980f883a 	mov	r7,r19
 4020e68:	1009883a 	mov	r4,r2
 4020e6c:	180b883a 	mov	r5,r3
 4020e70:	4022a540 	call	4022a54 <__muldf3>
 4020e74:	01a66634 	movhi	r6,39320
 4020e78:	01cff6b4 	movhi	r7,16346
 4020e7c:	31be8104 	addi	r6,r6,-1532
 4020e80:	39e66644 	addi	r7,r7,-26215
 4020e84:	1009883a 	mov	r4,r2
 4020e88:	180b883a 	mov	r5,r3
 4020e8c:	40216680 	call	4021668 <__adddf3>
 4020e90:	a00d883a 	mov	r6,r20
 4020e94:	980f883a 	mov	r7,r19
 4020e98:	1009883a 	mov	r4,r2
 4020e9c:	180b883a 	mov	r5,r3
 4020ea0:	4022a540 	call	4022a54 <__muldf3>
 4020ea4:	dac00217 	ldw	r11,8(sp)
 4020ea8:	da800317 	ldw	r10,12(sp)
 4020eac:	100d883a 	mov	r6,r2
 4020eb0:	180f883a 	mov	r7,r3
 4020eb4:	5809883a 	mov	r4,r11
 4020eb8:	500b883a 	mov	r5,r10
 4020ebc:	40216680 	call	4021668 <__adddf3>
 4020ec0:	1827883a 	mov	r19,r3
 4020ec4:	00c001f4 	movhi	r3,7
 4020ec8:	18ee1444 	addi	r3,r3,-18351
 4020ecc:	1f07c83a 	sub	r3,r3,fp
 4020ed0:	1dd2b03a 	or	r9,r3,r23
 4020ed4:	1029883a 	mov	r20,r2
 4020ed8:	0240490e 	bge	zero,r9,4021000 <__ieee754_log+0x4c0>
 4020edc:	000d883a 	mov	r6,zero
 4020ee0:	01cff834 	movhi	r7,16352
 4020ee4:	9009883a 	mov	r4,r18
 4020ee8:	880b883a 	mov	r5,r17
 4020eec:	4022a540 	call	4022a54 <__muldf3>
 4020ef0:	900d883a 	mov	r6,r18
 4020ef4:	880f883a 	mov	r7,r17
 4020ef8:	1009883a 	mov	r4,r2
 4020efc:	180b883a 	mov	r5,r3
 4020f00:	4022a540 	call	4022a54 <__muldf3>
 4020f04:	1039883a 	mov	fp,r2
 4020f08:	182f883a 	mov	r23,r3
 4020f0c:	8000691e 	bne	r16,zero,40210b4 <__ieee754_log+0x574>
 4020f10:	100d883a 	mov	r6,r2
 4020f14:	180f883a 	mov	r7,r3
 4020f18:	a009883a 	mov	r4,r20
 4020f1c:	980b883a 	mov	r5,r19
 4020f20:	40216680 	call	4021668 <__adddf3>
 4020f24:	b00d883a 	mov	r6,r22
 4020f28:	a80f883a 	mov	r7,r21
 4020f2c:	1009883a 	mov	r4,r2
 4020f30:	180b883a 	mov	r5,r3
 4020f34:	4022a540 	call	4022a54 <__muldf3>
 4020f38:	100d883a 	mov	r6,r2
 4020f3c:	180f883a 	mov	r7,r3
 4020f40:	e009883a 	mov	r4,fp
 4020f44:	b80b883a 	mov	r5,r23
 4020f48:	402316c0 	call	402316c <__subdf3>
 4020f4c:	100d883a 	mov	r6,r2
 4020f50:	180f883a 	mov	r7,r3
 4020f54:	9009883a 	mov	r4,r18
 4020f58:	880b883a 	mov	r5,r17
 4020f5c:	402316c0 	call	402316c <__subdf3>
 4020f60:	003f5606 	br	4020cbc <__flash_rwdata_start+0xfffefd94>
 4020f64:	000d883a 	mov	r6,zero
 4020f68:	000f883a 	mov	r7,zero
 4020f6c:	0009883a 	mov	r4,zero
 4020f70:	0170d434 	movhi	r5,50000
 4020f74:	4021f140 	call	4021f14 <__divdf3>
 4020f78:	003f5006 	br	4020cbc <__flash_rwdata_start+0xfffefd94>
 4020f7c:	01955574 	movhi	r6,21845
 4020f80:	01cff574 	movhi	r7,16341
 4020f84:	31955544 	addi	r6,r6,21845
 4020f88:	39d55544 	addi	r7,r7,21845
 4020f8c:	9009883a 	mov	r4,r18
 4020f90:	880b883a 	mov	r5,r17
 4020f94:	4022a540 	call	4022a54 <__muldf3>
 4020f98:	100d883a 	mov	r6,r2
 4020f9c:	180f883a 	mov	r7,r3
 4020fa0:	0009883a 	mov	r4,zero
 4020fa4:	014ff834 	movhi	r5,16352
 4020fa8:	402316c0 	call	402316c <__subdf3>
 4020fac:	900d883a 	mov	r6,r18
 4020fb0:	880f883a 	mov	r7,r17
 4020fb4:	9009883a 	mov	r4,r18
 4020fb8:	880b883a 	mov	r5,r17
 4020fbc:	1029883a 	mov	r20,r2
 4020fc0:	1827883a 	mov	r19,r3
 4020fc4:	4022a540 	call	4022a54 <__muldf3>
 4020fc8:	a009883a 	mov	r4,r20
 4020fcc:	980b883a 	mov	r5,r19
 4020fd0:	100d883a 	mov	r6,r2
 4020fd4:	180f883a 	mov	r7,r3
 4020fd8:	4022a540 	call	4022a54 <__muldf3>
 4020fdc:	1029883a 	mov	r20,r2
 4020fe0:	1827883a 	mov	r19,r3
 4020fe4:	80006f1e 	bne	r16,zero,40211a4 <__ieee754_log+0x664>
 4020fe8:	100d883a 	mov	r6,r2
 4020fec:	180f883a 	mov	r7,r3
 4020ff0:	9009883a 	mov	r4,r18
 4020ff4:	880b883a 	mov	r5,r17
 4020ff8:	402316c0 	call	402316c <__subdf3>
 4020ffc:	003f2f06 	br	4020cbc <__flash_rwdata_start+0xfffefd94>
 4021000:	80008b26 	beq	r16,zero,4021230 <__ieee754_log+0x6f0>
 4021004:	d9000017 	ldw	r4,0(sp)
 4021008:	d9400117 	ldw	r5,4(sp)
 402100c:	01cff9b4 	movhi	r7,16358
 4021010:	39cb9084 	addi	r7,r7,11842
 4021014:	01bfb834 	movhi	r6,65248
 4021018:	4022a540 	call	4022a54 <__muldf3>
 402101c:	a00d883a 	mov	r6,r20
 4021020:	980f883a 	mov	r7,r19
 4021024:	9009883a 	mov	r4,r18
 4021028:	880b883a 	mov	r5,r17
 402102c:	1821883a 	mov	r16,r3
 4021030:	d8800215 	stw	r2,8(sp)
 4021034:	402316c0 	call	402316c <__subdf3>
 4021038:	b00d883a 	mov	r6,r22
 402103c:	a80f883a 	mov	r7,r21
 4021040:	1009883a 	mov	r4,r2
 4021044:	180b883a 	mov	r5,r3
 4021048:	4022a540 	call	4022a54 <__muldf3>
 402104c:	d9000017 	ldw	r4,0(sp)
 4021050:	d9400117 	ldw	r5,4(sp)
 4021054:	018d5e74 	movhi	r6,13689
 4021058:	01cf7ab4 	movhi	r7,15850
 402105c:	318f1d84 	addi	r6,r6,15478
 4021060:	39ce7bc4 	addi	r7,r7,14831
 4021064:	1029883a 	mov	r20,r2
 4021068:	1827883a 	mov	r19,r3
 402106c:	4022a540 	call	4022a54 <__muldf3>
 4021070:	a009883a 	mov	r4,r20
 4021074:	980b883a 	mov	r5,r19
 4021078:	100d883a 	mov	r6,r2
 402107c:	180f883a 	mov	r7,r3
 4021080:	402316c0 	call	402316c <__subdf3>
 4021084:	900d883a 	mov	r6,r18
 4021088:	880f883a 	mov	r7,r17
 402108c:	1009883a 	mov	r4,r2
 4021090:	180b883a 	mov	r5,r3
 4021094:	402316c0 	call	402316c <__subdf3>
 4021098:	da000217 	ldw	r8,8(sp)
 402109c:	100d883a 	mov	r6,r2
 40210a0:	180f883a 	mov	r7,r3
 40210a4:	4009883a 	mov	r4,r8
 40210a8:	800b883a 	mov	r5,r16
 40210ac:	402316c0 	call	402316c <__subdf3>
 40210b0:	003f0206 	br	4020cbc <__flash_rwdata_start+0xfffefd94>
 40210b4:	d9000017 	ldw	r4,0(sp)
 40210b8:	d9400117 	ldw	r5,4(sp)
 40210bc:	01cff9b4 	movhi	r7,16358
 40210c0:	39cb9084 	addi	r7,r7,11842
 40210c4:	01bfb834 	movhi	r6,65248
 40210c8:	4022a540 	call	4022a54 <__muldf3>
 40210cc:	e00d883a 	mov	r6,fp
 40210d0:	b80f883a 	mov	r7,r23
 40210d4:	a009883a 	mov	r4,r20
 40210d8:	980b883a 	mov	r5,r19
 40210dc:	1821883a 	mov	r16,r3
 40210e0:	d8800315 	stw	r2,12(sp)
 40210e4:	40216680 	call	4021668 <__adddf3>
 40210e8:	b00d883a 	mov	r6,r22
 40210ec:	a80f883a 	mov	r7,r21
 40210f0:	1009883a 	mov	r4,r2
 40210f4:	180b883a 	mov	r5,r3
 40210f8:	4022a540 	call	4022a54 <__muldf3>
 40210fc:	d9000017 	ldw	r4,0(sp)
 4021100:	d9400117 	ldw	r5,4(sp)
 4021104:	018d5e74 	movhi	r6,13689
 4021108:	01cf7ab4 	movhi	r7,15850
 402110c:	318f1d84 	addi	r6,r6,15478
 4021110:	39ce7bc4 	addi	r7,r7,14831
 4021114:	1029883a 	mov	r20,r2
 4021118:	1827883a 	mov	r19,r3
 402111c:	4022a540 	call	4022a54 <__muldf3>
 4021120:	a009883a 	mov	r4,r20
 4021124:	980b883a 	mov	r5,r19
 4021128:	100d883a 	mov	r6,r2
 402112c:	180f883a 	mov	r7,r3
 4021130:	40216680 	call	4021668 <__adddf3>
 4021134:	e009883a 	mov	r4,fp
 4021138:	b80b883a 	mov	r5,r23
 402113c:	100d883a 	mov	r6,r2
 4021140:	180f883a 	mov	r7,r3
 4021144:	402316c0 	call	402316c <__subdf3>
 4021148:	900d883a 	mov	r6,r18
 402114c:	880f883a 	mov	r7,r17
 4021150:	1009883a 	mov	r4,r2
 4021154:	180b883a 	mov	r5,r3
 4021158:	402316c0 	call	402316c <__subdf3>
 402115c:	da800317 	ldw	r10,12(sp)
 4021160:	100d883a 	mov	r6,r2
 4021164:	180f883a 	mov	r7,r3
 4021168:	5009883a 	mov	r4,r10
 402116c:	800b883a 	mov	r5,r16
 4021170:	402316c0 	call	402316c <__subdf3>
 4021174:	003ed106 	br	4020cbc <__flash_rwdata_start+0xfffefd94>
 4021178:	200d883a 	mov	r6,r4
 402117c:	402316c0 	call	402316c <__subdf3>
 4021180:	000d883a 	mov	r6,zero
 4021184:	000f883a 	mov	r7,zero
 4021188:	1009883a 	mov	r4,r2
 402118c:	180b883a 	mov	r5,r3
 4021190:	4021f140 	call	4021f14 <__divdf3>
 4021194:	003ec906 	br	4020cbc <__flash_rwdata_start+0xfffefd94>
 4021198:	0005883a 	mov	r2,zero
 402119c:	0007883a 	mov	r3,zero
 40211a0:	003ec606 	br	4020cbc <__flash_rwdata_start+0xfffefd94>
 40211a4:	8009883a 	mov	r4,r16
 40211a8:	4023ae80 	call	4023ae8 <__floatsidf>
 40211ac:	01cff9b4 	movhi	r7,16358
 40211b0:	39cb9084 	addi	r7,r7,11842
 40211b4:	01bfb834 	movhi	r6,65248
 40211b8:	1009883a 	mov	r4,r2
 40211bc:	180b883a 	mov	r5,r3
 40211c0:	102b883a 	mov	r21,r2
 40211c4:	1821883a 	mov	r16,r3
 40211c8:	4022a540 	call	4022a54 <__muldf3>
 40211cc:	018d5e74 	movhi	r6,13689
 40211d0:	01cf7ab4 	movhi	r7,15850
 40211d4:	a809883a 	mov	r4,r21
 40211d8:	800b883a 	mov	r5,r16
 40211dc:	318f1d84 	addi	r6,r6,15478
 40211e0:	39ce7bc4 	addi	r7,r7,14831
 40211e4:	102f883a 	mov	r23,r2
 40211e8:	182d883a 	mov	r22,r3
 40211ec:	4022a540 	call	4022a54 <__muldf3>
 40211f0:	a009883a 	mov	r4,r20
 40211f4:	980b883a 	mov	r5,r19
 40211f8:	100d883a 	mov	r6,r2
 40211fc:	180f883a 	mov	r7,r3
 4021200:	402316c0 	call	402316c <__subdf3>
 4021204:	900d883a 	mov	r6,r18
 4021208:	880f883a 	mov	r7,r17
 402120c:	1009883a 	mov	r4,r2
 4021210:	180b883a 	mov	r5,r3
 4021214:	402316c0 	call	402316c <__subdf3>
 4021218:	100d883a 	mov	r6,r2
 402121c:	180f883a 	mov	r7,r3
 4021220:	b809883a 	mov	r4,r23
 4021224:	b00b883a 	mov	r5,r22
 4021228:	402316c0 	call	402316c <__subdf3>
 402122c:	003ea306 	br	4020cbc <__flash_rwdata_start+0xfffefd94>
 4021230:	a00d883a 	mov	r6,r20
 4021234:	980f883a 	mov	r7,r19
 4021238:	9009883a 	mov	r4,r18
 402123c:	880b883a 	mov	r5,r17
 4021240:	402316c0 	call	402316c <__subdf3>
 4021244:	b00d883a 	mov	r6,r22
 4021248:	a80f883a 	mov	r7,r21
 402124c:	1009883a 	mov	r4,r2
 4021250:	180b883a 	mov	r5,r3
 4021254:	4022a540 	call	4022a54 <__muldf3>
 4021258:	003f3c06 	br	4020f4c <__flash_rwdata_start+0xffff0024>

0402125c <__ieee754_log10>:
 402125c:	defff904 	addi	sp,sp,-28
 4021260:	00c00434 	movhi	r3,16
 4021264:	dc000015 	stw	r16,0(sp)
 4021268:	dfc00615 	stw	ra,24(sp)
 402126c:	dd400515 	stw	r21,20(sp)
 4021270:	dd000415 	stw	r20,16(sp)
 4021274:	dcc00315 	stw	r19,12(sp)
 4021278:	dc800215 	stw	r18,8(sp)
 402127c:	dc400115 	stw	r17,4(sp)
 4021280:	18ffffc4 	addi	r3,r3,-1
 4021284:	280f883a 	mov	r7,r5
 4021288:	2021883a 	mov	r16,r4
 402128c:	19401d16 	blt	r3,r5,4021304 <__ieee754_log10+0xa8>
 4021290:	00a00034 	movhi	r2,32768
 4021294:	10bfffc4 	addi	r2,r2,-1
 4021298:	2884703a 	and	r2,r5,r2
 402129c:	1104b03a 	or	r2,r2,r4
 40212a0:	10005426 	beq	r2,zero,40213f4 <__ieee754_log10+0x198>
 40212a4:	28005916 	blt	r5,zero,402140c <__ieee754_log10+0x1b0>
 40212a8:	01d0d434 	movhi	r7,17232
 40212ac:	000d883a 	mov	r6,zero
 40212b0:	4022a540 	call	4022a54 <__muldf3>
 40212b4:	011ffc34 	movhi	r4,32752
 40212b8:	1021883a 	mov	r16,r2
 40212bc:	213fffc4 	addi	r4,r4,-1
 40212c0:	1805883a 	mov	r2,r3
 40212c4:	180f883a 	mov	r7,r3
 40212c8:	00fff284 	movi	r3,-54
 40212cc:	2080120e 	bge	r4,r2,4021318 <__ieee754_log10+0xbc>
 40212d0:	800d883a 	mov	r6,r16
 40212d4:	8009883a 	mov	r4,r16
 40212d8:	380b883a 	mov	r5,r7
 40212dc:	40216680 	call	4021668 <__adddf3>
 40212e0:	dfc00617 	ldw	ra,24(sp)
 40212e4:	dd400517 	ldw	r21,20(sp)
 40212e8:	dd000417 	ldw	r20,16(sp)
 40212ec:	dcc00317 	ldw	r19,12(sp)
 40212f0:	dc800217 	ldw	r18,8(sp)
 40212f4:	dc400117 	ldw	r17,4(sp)
 40212f8:	dc000017 	ldw	r16,0(sp)
 40212fc:	dec00704 	addi	sp,sp,28
 4021300:	f800283a 	ret
 4021304:	011ffc34 	movhi	r4,32752
 4021308:	2805883a 	mov	r2,r5
 402130c:	213fffc4 	addi	r4,r4,-1
 4021310:	0007883a 	mov	r3,zero
 4021314:	20bfee16 	blt	r4,r2,40212d0 <__flash_rwdata_start+0xffff03a8>
 4021318:	1009d53a 	srai	r4,r2,20
 402131c:	04400434 	movhi	r17,16
 4021320:	8c7fffc4 	addi	r17,r17,-1
 4021324:	213f0044 	addi	r4,r4,-1023
 4021328:	20c9883a 	add	r4,r4,r3
 402132c:	2028d7fa 	srli	r20,r4,31
 4021330:	1462703a 	and	r17,r2,r17
 4021334:	2509883a 	add	r4,r4,r20
 4021338:	4023ae80 	call	4023ae8 <__floatsidf>
 402133c:	1027883a 	mov	r19,r2
 4021340:	0080ffc4 	movi	r2,1023
 4021344:	1505c83a 	sub	r2,r2,r20
 4021348:	100a953a 	slli	r5,r2,20
 402134c:	8009883a 	mov	r4,r16
 4021350:	1825883a 	mov	r18,r3
 4021354:	2c4ab03a 	or	r5,r5,r17
 4021358:	4020b400 	call	4020b40 <__ieee754_log>
 402135c:	01847c74 	movhi	r6,4593
 4021360:	01cf56b4 	movhi	r7,15706
 4021364:	9809883a 	mov	r4,r19
 4021368:	900b883a 	mov	r5,r18
 402136c:	318acd84 	addi	r6,r6,11062
 4021370:	39ffbcc4 	addi	r7,r7,-269
 4021374:	102b883a 	mov	r21,r2
 4021378:	1829883a 	mov	r20,r3
 402137c:	4022a540 	call	4022a54 <__muldf3>
 4021380:	018549f4 	movhi	r6,5415
 4021384:	01cff734 	movhi	r7,16348
 4021388:	a809883a 	mov	r4,r21
 402138c:	a00b883a 	mov	r5,r20
 4021390:	31b94384 	addi	r6,r6,-6898
 4021394:	39f2dec4 	addi	r7,r7,-13445
 4021398:	1023883a 	mov	r17,r2
 402139c:	1821883a 	mov	r16,r3
 40213a0:	4022a540 	call	4022a54 <__muldf3>
 40213a4:	8809883a 	mov	r4,r17
 40213a8:	800b883a 	mov	r5,r16
 40213ac:	100d883a 	mov	r6,r2
 40213b0:	180f883a 	mov	r7,r3
 40213b4:	40216680 	call	4021668 <__adddf3>
 40213b8:	019427f4 	movhi	r6,20639
 40213bc:	01cff4f4 	movhi	r7,16339
 40213c0:	9809883a 	mov	r4,r19
 40213c4:	900b883a 	mov	r5,r18
 40213c8:	31980004 	addi	r6,r6,24576
 40213cc:	39d104c4 	addi	r7,r7,17427
 40213d0:	1023883a 	mov	r17,r2
 40213d4:	1821883a 	mov	r16,r3
 40213d8:	4022a540 	call	4022a54 <__muldf3>
 40213dc:	100d883a 	mov	r6,r2
 40213e0:	180f883a 	mov	r7,r3
 40213e4:	8809883a 	mov	r4,r17
 40213e8:	800b883a 	mov	r5,r16
 40213ec:	40216680 	call	4021668 <__adddf3>
 40213f0:	003fbb06 	br	40212e0 <__flash_rwdata_start+0xffff03b8>
 40213f4:	000d883a 	mov	r6,zero
 40213f8:	000f883a 	mov	r7,zero
 40213fc:	0009883a 	mov	r4,zero
 4021400:	0170d434 	movhi	r5,50000
 4021404:	4021f140 	call	4021f14 <__divdf3>
 4021408:	003fb506 	br	40212e0 <__flash_rwdata_start+0xffff03b8>
 402140c:	200d883a 	mov	r6,r4
 4021410:	402316c0 	call	402316c <__subdf3>
 4021414:	000d883a 	mov	r6,zero
 4021418:	000f883a 	mov	r7,zero
 402141c:	1009883a 	mov	r4,r2
 4021420:	180b883a 	mov	r5,r3
 4021424:	4021f140 	call	4021f14 <__divdf3>
 4021428:	003fad06 	br	40212e0 <__flash_rwdata_start+0xffff03b8>

0402142c <__fpclassifyd>:
 402142c:	00a00034 	movhi	r2,32768
 4021430:	10bfffc4 	addi	r2,r2,-1
 4021434:	2884703a 	and	r2,r5,r2
 4021438:	10000726 	beq	r2,zero,4021458 <__fpclassifyd+0x2c>
 402143c:	00fffc34 	movhi	r3,65520
 4021440:	019ff834 	movhi	r6,32736
 4021444:	28c7883a 	add	r3,r5,r3
 4021448:	31bfffc4 	addi	r6,r6,-1
 402144c:	30c00536 	bltu	r6,r3,4021464 <__fpclassifyd+0x38>
 4021450:	00800104 	movi	r2,4
 4021454:	f800283a 	ret
 4021458:	2000021e 	bne	r4,zero,4021464 <__fpclassifyd+0x38>
 402145c:	00800084 	movi	r2,2
 4021460:	f800283a 	ret
 4021464:	00dffc34 	movhi	r3,32752
 4021468:	019ff834 	movhi	r6,32736
 402146c:	28cb883a 	add	r5,r5,r3
 4021470:	31bfffc4 	addi	r6,r6,-1
 4021474:	317ff62e 	bgeu	r6,r5,4021450 <__flash_rwdata_start+0xffff0528>
 4021478:	01400434 	movhi	r5,16
 402147c:	297fffc4 	addi	r5,r5,-1
 4021480:	28800236 	bltu	r5,r2,402148c <__fpclassifyd+0x60>
 4021484:	008000c4 	movi	r2,3
 4021488:	f800283a 	ret
 402148c:	10c00226 	beq	r2,r3,4021498 <__fpclassifyd+0x6c>
 4021490:	0005883a 	mov	r2,zero
 4021494:	f800283a 	ret
 4021498:	2005003a 	cmpeq	r2,r4,zero
 402149c:	f800283a 	ret

040214a0 <matherr>:
 40214a0:	0005883a 	mov	r2,zero
 40214a4:	f800283a 	ret

040214a8 <nan>:
 40214a8:	0005883a 	mov	r2,zero
 40214ac:	00dffe34 	movhi	r3,32760
 40214b0:	f800283a 	ret

040214b4 <__divsi3>:
 40214b4:	20001b16 	blt	r4,zero,4021524 <__divsi3+0x70>
 40214b8:	000f883a 	mov	r7,zero
 40214bc:	28001616 	blt	r5,zero,4021518 <__divsi3+0x64>
 40214c0:	200d883a 	mov	r6,r4
 40214c4:	29001a2e 	bgeu	r5,r4,4021530 <__divsi3+0x7c>
 40214c8:	00800804 	movi	r2,32
 40214cc:	00c00044 	movi	r3,1
 40214d0:	00000106 	br	40214d8 <__divsi3+0x24>
 40214d4:	10000d26 	beq	r2,zero,402150c <__divsi3+0x58>
 40214d8:	294b883a 	add	r5,r5,r5
 40214dc:	10bfffc4 	addi	r2,r2,-1
 40214e0:	18c7883a 	add	r3,r3,r3
 40214e4:	293ffb36 	bltu	r5,r4,40214d4 <__flash_rwdata_start+0xffff05ac>
 40214e8:	0005883a 	mov	r2,zero
 40214ec:	18000726 	beq	r3,zero,402150c <__divsi3+0x58>
 40214f0:	0005883a 	mov	r2,zero
 40214f4:	31400236 	bltu	r6,r5,4021500 <__divsi3+0x4c>
 40214f8:	314dc83a 	sub	r6,r6,r5
 40214fc:	10c4b03a 	or	r2,r2,r3
 4021500:	1806d07a 	srli	r3,r3,1
 4021504:	280ad07a 	srli	r5,r5,1
 4021508:	183ffa1e 	bne	r3,zero,40214f4 <__flash_rwdata_start+0xffff05cc>
 402150c:	38000126 	beq	r7,zero,4021514 <__divsi3+0x60>
 4021510:	0085c83a 	sub	r2,zero,r2
 4021514:	f800283a 	ret
 4021518:	014bc83a 	sub	r5,zero,r5
 402151c:	39c0005c 	xori	r7,r7,1
 4021520:	003fe706 	br	40214c0 <__flash_rwdata_start+0xffff0598>
 4021524:	0109c83a 	sub	r4,zero,r4
 4021528:	01c00044 	movi	r7,1
 402152c:	003fe306 	br	40214bc <__flash_rwdata_start+0xffff0594>
 4021530:	00c00044 	movi	r3,1
 4021534:	003fee06 	br	40214f0 <__flash_rwdata_start+0xffff05c8>

04021538 <__modsi3>:
 4021538:	20001716 	blt	r4,zero,4021598 <__modsi3+0x60>
 402153c:	000f883a 	mov	r7,zero
 4021540:	2005883a 	mov	r2,r4
 4021544:	28001216 	blt	r5,zero,4021590 <__modsi3+0x58>
 4021548:	2900162e 	bgeu	r5,r4,40215a4 <__modsi3+0x6c>
 402154c:	01800804 	movi	r6,32
 4021550:	00c00044 	movi	r3,1
 4021554:	00000106 	br	402155c <__modsi3+0x24>
 4021558:	30000a26 	beq	r6,zero,4021584 <__modsi3+0x4c>
 402155c:	294b883a 	add	r5,r5,r5
 4021560:	31bfffc4 	addi	r6,r6,-1
 4021564:	18c7883a 	add	r3,r3,r3
 4021568:	293ffb36 	bltu	r5,r4,4021558 <__flash_rwdata_start+0xffff0630>
 402156c:	18000526 	beq	r3,zero,4021584 <__modsi3+0x4c>
 4021570:	1806d07a 	srli	r3,r3,1
 4021574:	11400136 	bltu	r2,r5,402157c <__modsi3+0x44>
 4021578:	1145c83a 	sub	r2,r2,r5
 402157c:	280ad07a 	srli	r5,r5,1
 4021580:	183ffb1e 	bne	r3,zero,4021570 <__flash_rwdata_start+0xffff0648>
 4021584:	38000126 	beq	r7,zero,402158c <__modsi3+0x54>
 4021588:	0085c83a 	sub	r2,zero,r2
 402158c:	f800283a 	ret
 4021590:	014bc83a 	sub	r5,zero,r5
 4021594:	003fec06 	br	4021548 <__flash_rwdata_start+0xffff0620>
 4021598:	0109c83a 	sub	r4,zero,r4
 402159c:	01c00044 	movi	r7,1
 40215a0:	003fe706 	br	4021540 <__flash_rwdata_start+0xffff0618>
 40215a4:	00c00044 	movi	r3,1
 40215a8:	003ff106 	br	4021570 <__flash_rwdata_start+0xffff0648>

040215ac <__udivsi3>:
 40215ac:	200d883a 	mov	r6,r4
 40215b0:	2900152e 	bgeu	r5,r4,4021608 <__udivsi3+0x5c>
 40215b4:	28001416 	blt	r5,zero,4021608 <__udivsi3+0x5c>
 40215b8:	00800804 	movi	r2,32
 40215bc:	00c00044 	movi	r3,1
 40215c0:	00000206 	br	40215cc <__udivsi3+0x20>
 40215c4:	10000e26 	beq	r2,zero,4021600 <__udivsi3+0x54>
 40215c8:	28000516 	blt	r5,zero,40215e0 <__udivsi3+0x34>
 40215cc:	294b883a 	add	r5,r5,r5
 40215d0:	10bfffc4 	addi	r2,r2,-1
 40215d4:	18c7883a 	add	r3,r3,r3
 40215d8:	293ffa36 	bltu	r5,r4,40215c4 <__flash_rwdata_start+0xffff069c>
 40215dc:	18000826 	beq	r3,zero,4021600 <__udivsi3+0x54>
 40215e0:	0005883a 	mov	r2,zero
 40215e4:	31400236 	bltu	r6,r5,40215f0 <__udivsi3+0x44>
 40215e8:	314dc83a 	sub	r6,r6,r5
 40215ec:	10c4b03a 	or	r2,r2,r3
 40215f0:	1806d07a 	srli	r3,r3,1
 40215f4:	280ad07a 	srli	r5,r5,1
 40215f8:	183ffa1e 	bne	r3,zero,40215e4 <__flash_rwdata_start+0xffff06bc>
 40215fc:	f800283a 	ret
 4021600:	0005883a 	mov	r2,zero
 4021604:	f800283a 	ret
 4021608:	00c00044 	movi	r3,1
 402160c:	003ff406 	br	40215e0 <__flash_rwdata_start+0xffff06b8>

04021610 <__umodsi3>:
 4021610:	2005883a 	mov	r2,r4
 4021614:	2900122e 	bgeu	r5,r4,4021660 <__umodsi3+0x50>
 4021618:	28001116 	blt	r5,zero,4021660 <__umodsi3+0x50>
 402161c:	01800804 	movi	r6,32
 4021620:	00c00044 	movi	r3,1
 4021624:	00000206 	br	4021630 <__umodsi3+0x20>
 4021628:	30000c26 	beq	r6,zero,402165c <__umodsi3+0x4c>
 402162c:	28000516 	blt	r5,zero,4021644 <__umodsi3+0x34>
 4021630:	294b883a 	add	r5,r5,r5
 4021634:	31bfffc4 	addi	r6,r6,-1
 4021638:	18c7883a 	add	r3,r3,r3
 402163c:	293ffa36 	bltu	r5,r4,4021628 <__flash_rwdata_start+0xffff0700>
 4021640:	18000626 	beq	r3,zero,402165c <__umodsi3+0x4c>
 4021644:	1806d07a 	srli	r3,r3,1
 4021648:	11400136 	bltu	r2,r5,4021650 <__umodsi3+0x40>
 402164c:	1145c83a 	sub	r2,r2,r5
 4021650:	280ad07a 	srli	r5,r5,1
 4021654:	183ffb1e 	bne	r3,zero,4021644 <__flash_rwdata_start+0xffff071c>
 4021658:	f800283a 	ret
 402165c:	f800283a 	ret
 4021660:	00c00044 	movi	r3,1
 4021664:	003ff706 	br	4021644 <__flash_rwdata_start+0xffff071c>

04021668 <__adddf3>:
 4021668:	02c00434 	movhi	r11,16
 402166c:	5affffc4 	addi	r11,r11,-1
 4021670:	2806d7fa 	srli	r3,r5,31
 4021674:	2ad4703a 	and	r10,r5,r11
 4021678:	3ad2703a 	and	r9,r7,r11
 402167c:	3804d53a 	srli	r2,r7,20
 4021680:	3018d77a 	srli	r12,r6,29
 4021684:	280ad53a 	srli	r5,r5,20
 4021688:	501490fa 	slli	r10,r10,3
 402168c:	2010d77a 	srli	r8,r4,29
 4021690:	481290fa 	slli	r9,r9,3
 4021694:	380ed7fa 	srli	r7,r7,31
 4021698:	defffb04 	addi	sp,sp,-20
 402169c:	dc800215 	stw	r18,8(sp)
 40216a0:	dc400115 	stw	r17,4(sp)
 40216a4:	dc000015 	stw	r16,0(sp)
 40216a8:	dfc00415 	stw	ra,16(sp)
 40216ac:	dcc00315 	stw	r19,12(sp)
 40216b0:	1c803fcc 	andi	r18,r3,255
 40216b4:	2c01ffcc 	andi	r16,r5,2047
 40216b8:	5210b03a 	or	r8,r10,r8
 40216bc:	202290fa 	slli	r17,r4,3
 40216c0:	1081ffcc 	andi	r2,r2,2047
 40216c4:	4b12b03a 	or	r9,r9,r12
 40216c8:	300c90fa 	slli	r6,r6,3
 40216cc:	91c07526 	beq	r18,r7,40218a4 <__adddf3+0x23c>
 40216d0:	8087c83a 	sub	r3,r16,r2
 40216d4:	00c0ab0e 	bge	zero,r3,4021984 <__adddf3+0x31c>
 40216d8:	10002a1e 	bne	r2,zero,4021784 <__adddf3+0x11c>
 40216dc:	4984b03a 	or	r2,r9,r6
 40216e0:	1000961e 	bne	r2,zero,402193c <__adddf3+0x2d4>
 40216e4:	888001cc 	andi	r2,r17,7
 40216e8:	10000726 	beq	r2,zero,4021708 <__adddf3+0xa0>
 40216ec:	888003cc 	andi	r2,r17,15
 40216f0:	00c00104 	movi	r3,4
 40216f4:	10c00426 	beq	r2,r3,4021708 <__adddf3+0xa0>
 40216f8:	88c7883a 	add	r3,r17,r3
 40216fc:	1c63803a 	cmpltu	r17,r3,r17
 4021700:	4451883a 	add	r8,r8,r17
 4021704:	1823883a 	mov	r17,r3
 4021708:	4080202c 	andhi	r2,r8,128
 402170c:	10005926 	beq	r2,zero,4021874 <__adddf3+0x20c>
 4021710:	84000044 	addi	r16,r16,1
 4021714:	0081ffc4 	movi	r2,2047
 4021718:	8080ba26 	beq	r16,r2,4021a04 <__adddf3+0x39c>
 402171c:	00bfe034 	movhi	r2,65408
 4021720:	10bfffc4 	addi	r2,r2,-1
 4021724:	4090703a 	and	r8,r8,r2
 4021728:	4004977a 	slli	r2,r8,29
 402172c:	4010927a 	slli	r8,r8,9
 4021730:	8822d0fa 	srli	r17,r17,3
 4021734:	8401ffcc 	andi	r16,r16,2047
 4021738:	4010d33a 	srli	r8,r8,12
 402173c:	9007883a 	mov	r3,r18
 4021740:	1444b03a 	or	r2,r2,r17
 4021744:	8401ffcc 	andi	r16,r16,2047
 4021748:	8020953a 	slli	r16,r16,20
 402174c:	18c03fcc 	andi	r3,r3,255
 4021750:	01000434 	movhi	r4,16
 4021754:	213fffc4 	addi	r4,r4,-1
 4021758:	180697fa 	slli	r3,r3,31
 402175c:	4110703a 	and	r8,r8,r4
 4021760:	4410b03a 	or	r8,r8,r16
 4021764:	40c6b03a 	or	r3,r8,r3
 4021768:	dfc00417 	ldw	ra,16(sp)
 402176c:	dcc00317 	ldw	r19,12(sp)
 4021770:	dc800217 	ldw	r18,8(sp)
 4021774:	dc400117 	ldw	r17,4(sp)
 4021778:	dc000017 	ldw	r16,0(sp)
 402177c:	dec00504 	addi	sp,sp,20
 4021780:	f800283a 	ret
 4021784:	0081ffc4 	movi	r2,2047
 4021788:	80bfd626 	beq	r16,r2,40216e4 <__flash_rwdata_start+0xffff07bc>
 402178c:	4a402034 	orhi	r9,r9,128
 4021790:	00800e04 	movi	r2,56
 4021794:	10c09f16 	blt	r2,r3,4021a14 <__adddf3+0x3ac>
 4021798:	008007c4 	movi	r2,31
 402179c:	10c0c216 	blt	r2,r3,4021aa8 <__adddf3+0x440>
 40217a0:	00800804 	movi	r2,32
 40217a4:	10c5c83a 	sub	r2,r2,r3
 40217a8:	488a983a 	sll	r5,r9,r2
 40217ac:	30c8d83a 	srl	r4,r6,r3
 40217b0:	3084983a 	sll	r2,r6,r2
 40217b4:	48c6d83a 	srl	r3,r9,r3
 40217b8:	290cb03a 	or	r6,r5,r4
 40217bc:	1004c03a 	cmpne	r2,r2,zero
 40217c0:	308cb03a 	or	r6,r6,r2
 40217c4:	898dc83a 	sub	r6,r17,r6
 40217c8:	89a3803a 	cmpltu	r17,r17,r6
 40217cc:	40d1c83a 	sub	r8,r8,r3
 40217d0:	4451c83a 	sub	r8,r8,r17
 40217d4:	3023883a 	mov	r17,r6
 40217d8:	4080202c 	andhi	r2,r8,128
 40217dc:	10002326 	beq	r2,zero,402186c <__adddf3+0x204>
 40217e0:	04c02034 	movhi	r19,128
 40217e4:	9cffffc4 	addi	r19,r19,-1
 40217e8:	44e6703a 	and	r19,r8,r19
 40217ec:	98007626 	beq	r19,zero,40219c8 <__adddf3+0x360>
 40217f0:	9809883a 	mov	r4,r19
 40217f4:	4023bc40 	call	4023bc4 <__clzsi2>
 40217f8:	10fffe04 	addi	r3,r2,-8
 40217fc:	010007c4 	movi	r4,31
 4021800:	20c07716 	blt	r4,r3,40219e0 <__adddf3+0x378>
 4021804:	00800804 	movi	r2,32
 4021808:	10c5c83a 	sub	r2,r2,r3
 402180c:	8884d83a 	srl	r2,r17,r2
 4021810:	98d0983a 	sll	r8,r19,r3
 4021814:	88e2983a 	sll	r17,r17,r3
 4021818:	1204b03a 	or	r2,r2,r8
 402181c:	1c007416 	blt	r3,r16,40219f0 <__adddf3+0x388>
 4021820:	1c21c83a 	sub	r16,r3,r16
 4021824:	82000044 	addi	r8,r16,1
 4021828:	00c007c4 	movi	r3,31
 402182c:	1a009116 	blt	r3,r8,4021a74 <__adddf3+0x40c>
 4021830:	00c00804 	movi	r3,32
 4021834:	1a07c83a 	sub	r3,r3,r8
 4021838:	8a08d83a 	srl	r4,r17,r8
 402183c:	88e2983a 	sll	r17,r17,r3
 4021840:	10c6983a 	sll	r3,r2,r3
 4021844:	1210d83a 	srl	r8,r2,r8
 4021848:	8804c03a 	cmpne	r2,r17,zero
 402184c:	1906b03a 	or	r3,r3,r4
 4021850:	18a2b03a 	or	r17,r3,r2
 4021854:	0021883a 	mov	r16,zero
 4021858:	003fa206 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 402185c:	1890b03a 	or	r8,r3,r2
 4021860:	40017d26 	beq	r8,zero,4021e58 <__adddf3+0x7f0>
 4021864:	1011883a 	mov	r8,r2
 4021868:	1823883a 	mov	r17,r3
 402186c:	888001cc 	andi	r2,r17,7
 4021870:	103f9e1e 	bne	r2,zero,40216ec <__flash_rwdata_start+0xffff07c4>
 4021874:	4004977a 	slli	r2,r8,29
 4021878:	8822d0fa 	srli	r17,r17,3
 402187c:	4010d0fa 	srli	r8,r8,3
 4021880:	9007883a 	mov	r3,r18
 4021884:	1444b03a 	or	r2,r2,r17
 4021888:	0101ffc4 	movi	r4,2047
 402188c:	81002426 	beq	r16,r4,4021920 <__adddf3+0x2b8>
 4021890:	8120703a 	and	r16,r16,r4
 4021894:	01000434 	movhi	r4,16
 4021898:	213fffc4 	addi	r4,r4,-1
 402189c:	4110703a 	and	r8,r8,r4
 40218a0:	003fa806 	br	4021744 <__flash_rwdata_start+0xffff081c>
 40218a4:	8089c83a 	sub	r4,r16,r2
 40218a8:	01005e0e 	bge	zero,r4,4021a24 <__adddf3+0x3bc>
 40218ac:	10002b26 	beq	r2,zero,402195c <__adddf3+0x2f4>
 40218b0:	0081ffc4 	movi	r2,2047
 40218b4:	80bf8b26 	beq	r16,r2,40216e4 <__flash_rwdata_start+0xffff07bc>
 40218b8:	4a402034 	orhi	r9,r9,128
 40218bc:	00800e04 	movi	r2,56
 40218c0:	1100a40e 	bge	r2,r4,4021b54 <__adddf3+0x4ec>
 40218c4:	498cb03a 	or	r6,r9,r6
 40218c8:	300ac03a 	cmpne	r5,r6,zero
 40218cc:	0013883a 	mov	r9,zero
 40218d0:	2c4b883a 	add	r5,r5,r17
 40218d4:	2c63803a 	cmpltu	r17,r5,r17
 40218d8:	4a11883a 	add	r8,r9,r8
 40218dc:	8a11883a 	add	r8,r17,r8
 40218e0:	2823883a 	mov	r17,r5
 40218e4:	4080202c 	andhi	r2,r8,128
 40218e8:	103fe026 	beq	r2,zero,402186c <__flash_rwdata_start+0xffff0944>
 40218ec:	84000044 	addi	r16,r16,1
 40218f0:	0081ffc4 	movi	r2,2047
 40218f4:	8080d226 	beq	r16,r2,4021c40 <__adddf3+0x5d8>
 40218f8:	00bfe034 	movhi	r2,65408
 40218fc:	10bfffc4 	addi	r2,r2,-1
 4021900:	4090703a 	and	r8,r8,r2
 4021904:	880ad07a 	srli	r5,r17,1
 4021908:	400897fa 	slli	r4,r8,31
 402190c:	88c0004c 	andi	r3,r17,1
 4021910:	28e2b03a 	or	r17,r5,r3
 4021914:	4010d07a 	srli	r8,r8,1
 4021918:	2462b03a 	or	r17,r4,r17
 402191c:	003f7106 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021920:	4088b03a 	or	r4,r8,r2
 4021924:	20014526 	beq	r4,zero,4021e3c <__adddf3+0x7d4>
 4021928:	01000434 	movhi	r4,16
 402192c:	42000234 	orhi	r8,r8,8
 4021930:	213fffc4 	addi	r4,r4,-1
 4021934:	4110703a 	and	r8,r8,r4
 4021938:	003f8206 	br	4021744 <__flash_rwdata_start+0xffff081c>
 402193c:	18ffffc4 	addi	r3,r3,-1
 4021940:	1800491e 	bne	r3,zero,4021a68 <__adddf3+0x400>
 4021944:	898bc83a 	sub	r5,r17,r6
 4021948:	8963803a 	cmpltu	r17,r17,r5
 402194c:	4251c83a 	sub	r8,r8,r9
 4021950:	4451c83a 	sub	r8,r8,r17
 4021954:	2823883a 	mov	r17,r5
 4021958:	003f9f06 	br	40217d8 <__flash_rwdata_start+0xffff08b0>
 402195c:	4984b03a 	or	r2,r9,r6
 4021960:	103f6026 	beq	r2,zero,40216e4 <__flash_rwdata_start+0xffff07bc>
 4021964:	213fffc4 	addi	r4,r4,-1
 4021968:	2000931e 	bne	r4,zero,4021bb8 <__adddf3+0x550>
 402196c:	898d883a 	add	r6,r17,r6
 4021970:	3463803a 	cmpltu	r17,r6,r17
 4021974:	4251883a 	add	r8,r8,r9
 4021978:	8a11883a 	add	r8,r17,r8
 402197c:	3023883a 	mov	r17,r6
 4021980:	003fd806 	br	40218e4 <__flash_rwdata_start+0xffff09bc>
 4021984:	1800541e 	bne	r3,zero,4021ad8 <__adddf3+0x470>
 4021988:	80800044 	addi	r2,r16,1
 402198c:	1081ffcc 	andi	r2,r2,2047
 4021990:	00c00044 	movi	r3,1
 4021994:	1880a00e 	bge	r3,r2,4021c18 <__adddf3+0x5b0>
 4021998:	8989c83a 	sub	r4,r17,r6
 402199c:	8905803a 	cmpltu	r2,r17,r4
 40219a0:	4267c83a 	sub	r19,r8,r9
 40219a4:	98a7c83a 	sub	r19,r19,r2
 40219a8:	9880202c 	andhi	r2,r19,128
 40219ac:	10006326 	beq	r2,zero,4021b3c <__adddf3+0x4d4>
 40219b0:	3463c83a 	sub	r17,r6,r17
 40219b4:	4a07c83a 	sub	r3,r9,r8
 40219b8:	344d803a 	cmpltu	r6,r6,r17
 40219bc:	19a7c83a 	sub	r19,r3,r6
 40219c0:	3825883a 	mov	r18,r7
 40219c4:	983f8a1e 	bne	r19,zero,40217f0 <__flash_rwdata_start+0xffff08c8>
 40219c8:	8809883a 	mov	r4,r17
 40219cc:	4023bc40 	call	4023bc4 <__clzsi2>
 40219d0:	10800804 	addi	r2,r2,32
 40219d4:	10fffe04 	addi	r3,r2,-8
 40219d8:	010007c4 	movi	r4,31
 40219dc:	20ff890e 	bge	r4,r3,4021804 <__flash_rwdata_start+0xffff08dc>
 40219e0:	10bff604 	addi	r2,r2,-40
 40219e4:	8884983a 	sll	r2,r17,r2
 40219e8:	0023883a 	mov	r17,zero
 40219ec:	1c3f8c0e 	bge	r3,r16,4021820 <__flash_rwdata_start+0xffff08f8>
 40219f0:	023fe034 	movhi	r8,65408
 40219f4:	423fffc4 	addi	r8,r8,-1
 40219f8:	80e1c83a 	sub	r16,r16,r3
 40219fc:	1210703a 	and	r8,r2,r8
 4021a00:	003f3806 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021a04:	9007883a 	mov	r3,r18
 4021a08:	0011883a 	mov	r8,zero
 4021a0c:	0005883a 	mov	r2,zero
 4021a10:	003f4c06 	br	4021744 <__flash_rwdata_start+0xffff081c>
 4021a14:	498cb03a 	or	r6,r9,r6
 4021a18:	300cc03a 	cmpne	r6,r6,zero
 4021a1c:	0007883a 	mov	r3,zero
 4021a20:	003f6806 	br	40217c4 <__flash_rwdata_start+0xffff089c>
 4021a24:	20009c1e 	bne	r4,zero,4021c98 <__adddf3+0x630>
 4021a28:	80800044 	addi	r2,r16,1
 4021a2c:	1141ffcc 	andi	r5,r2,2047
 4021a30:	01000044 	movi	r4,1
 4021a34:	2140670e 	bge	r4,r5,4021bd4 <__adddf3+0x56c>
 4021a38:	0101ffc4 	movi	r4,2047
 4021a3c:	11007f26 	beq	r2,r4,4021c3c <__adddf3+0x5d4>
 4021a40:	898d883a 	add	r6,r17,r6
 4021a44:	4247883a 	add	r3,r8,r9
 4021a48:	3451803a 	cmpltu	r8,r6,r17
 4021a4c:	40d1883a 	add	r8,r8,r3
 4021a50:	402297fa 	slli	r17,r8,31
 4021a54:	300cd07a 	srli	r6,r6,1
 4021a58:	4010d07a 	srli	r8,r8,1
 4021a5c:	1021883a 	mov	r16,r2
 4021a60:	89a2b03a 	or	r17,r17,r6
 4021a64:	003f1f06 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021a68:	0081ffc4 	movi	r2,2047
 4021a6c:	80bf481e 	bne	r16,r2,4021790 <__flash_rwdata_start+0xffff0868>
 4021a70:	003f1c06 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021a74:	843ff844 	addi	r16,r16,-31
 4021a78:	01000804 	movi	r4,32
 4021a7c:	1406d83a 	srl	r3,r2,r16
 4021a80:	41005026 	beq	r8,r4,4021bc4 <__adddf3+0x55c>
 4021a84:	01001004 	movi	r4,64
 4021a88:	2211c83a 	sub	r8,r4,r8
 4021a8c:	1204983a 	sll	r2,r2,r8
 4021a90:	88a2b03a 	or	r17,r17,r2
 4021a94:	8822c03a 	cmpne	r17,r17,zero
 4021a98:	1c62b03a 	or	r17,r3,r17
 4021a9c:	0011883a 	mov	r8,zero
 4021aa0:	0021883a 	mov	r16,zero
 4021aa4:	003f7106 	br	402186c <__flash_rwdata_start+0xffff0944>
 4021aa8:	193ff804 	addi	r4,r3,-32
 4021aac:	00800804 	movi	r2,32
 4021ab0:	4908d83a 	srl	r4,r9,r4
 4021ab4:	18804526 	beq	r3,r2,4021bcc <__adddf3+0x564>
 4021ab8:	00801004 	movi	r2,64
 4021abc:	10c5c83a 	sub	r2,r2,r3
 4021ac0:	4886983a 	sll	r3,r9,r2
 4021ac4:	198cb03a 	or	r6,r3,r6
 4021ac8:	300cc03a 	cmpne	r6,r6,zero
 4021acc:	218cb03a 	or	r6,r4,r6
 4021ad0:	0007883a 	mov	r3,zero
 4021ad4:	003f3b06 	br	40217c4 <__flash_rwdata_start+0xffff089c>
 4021ad8:	80002a26 	beq	r16,zero,4021b84 <__adddf3+0x51c>
 4021adc:	0101ffc4 	movi	r4,2047
 4021ae0:	11006826 	beq	r2,r4,4021c84 <__adddf3+0x61c>
 4021ae4:	00c7c83a 	sub	r3,zero,r3
 4021ae8:	42002034 	orhi	r8,r8,128
 4021aec:	01000e04 	movi	r4,56
 4021af0:	20c07c16 	blt	r4,r3,4021ce4 <__adddf3+0x67c>
 4021af4:	010007c4 	movi	r4,31
 4021af8:	20c0da16 	blt	r4,r3,4021e64 <__adddf3+0x7fc>
 4021afc:	01000804 	movi	r4,32
 4021b00:	20c9c83a 	sub	r4,r4,r3
 4021b04:	4114983a 	sll	r10,r8,r4
 4021b08:	88cad83a 	srl	r5,r17,r3
 4021b0c:	8908983a 	sll	r4,r17,r4
 4021b10:	40c6d83a 	srl	r3,r8,r3
 4021b14:	5162b03a 	or	r17,r10,r5
 4021b18:	2008c03a 	cmpne	r4,r4,zero
 4021b1c:	8922b03a 	or	r17,r17,r4
 4021b20:	3463c83a 	sub	r17,r6,r17
 4021b24:	48c7c83a 	sub	r3,r9,r3
 4021b28:	344d803a 	cmpltu	r6,r6,r17
 4021b2c:	1991c83a 	sub	r8,r3,r6
 4021b30:	1021883a 	mov	r16,r2
 4021b34:	3825883a 	mov	r18,r7
 4021b38:	003f2706 	br	40217d8 <__flash_rwdata_start+0xffff08b0>
 4021b3c:	24d0b03a 	or	r8,r4,r19
 4021b40:	40001b1e 	bne	r8,zero,4021bb0 <__adddf3+0x548>
 4021b44:	0005883a 	mov	r2,zero
 4021b48:	0007883a 	mov	r3,zero
 4021b4c:	0021883a 	mov	r16,zero
 4021b50:	003f4d06 	br	4021888 <__flash_rwdata_start+0xffff0960>
 4021b54:	008007c4 	movi	r2,31
 4021b58:	11003c16 	blt	r2,r4,4021c4c <__adddf3+0x5e4>
 4021b5c:	00800804 	movi	r2,32
 4021b60:	1105c83a 	sub	r2,r2,r4
 4021b64:	488e983a 	sll	r7,r9,r2
 4021b68:	310ad83a 	srl	r5,r6,r4
 4021b6c:	3084983a 	sll	r2,r6,r2
 4021b70:	4912d83a 	srl	r9,r9,r4
 4021b74:	394ab03a 	or	r5,r7,r5
 4021b78:	1004c03a 	cmpne	r2,r2,zero
 4021b7c:	288ab03a 	or	r5,r5,r2
 4021b80:	003f5306 	br	40218d0 <__flash_rwdata_start+0xffff09a8>
 4021b84:	4448b03a 	or	r4,r8,r17
 4021b88:	20003e26 	beq	r4,zero,4021c84 <__adddf3+0x61c>
 4021b8c:	00c6303a 	nor	r3,zero,r3
 4021b90:	18003a1e 	bne	r3,zero,4021c7c <__adddf3+0x614>
 4021b94:	3463c83a 	sub	r17,r6,r17
 4021b98:	4a07c83a 	sub	r3,r9,r8
 4021b9c:	344d803a 	cmpltu	r6,r6,r17
 4021ba0:	1991c83a 	sub	r8,r3,r6
 4021ba4:	1021883a 	mov	r16,r2
 4021ba8:	3825883a 	mov	r18,r7
 4021bac:	003f0a06 	br	40217d8 <__flash_rwdata_start+0xffff08b0>
 4021bb0:	2023883a 	mov	r17,r4
 4021bb4:	003f0d06 	br	40217ec <__flash_rwdata_start+0xffff08c4>
 4021bb8:	0081ffc4 	movi	r2,2047
 4021bbc:	80bf3f1e 	bne	r16,r2,40218bc <__flash_rwdata_start+0xffff0994>
 4021bc0:	003ec806 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021bc4:	0005883a 	mov	r2,zero
 4021bc8:	003fb106 	br	4021a90 <__flash_rwdata_start+0xffff0b68>
 4021bcc:	0007883a 	mov	r3,zero
 4021bd0:	003fbc06 	br	4021ac4 <__flash_rwdata_start+0xffff0b9c>
 4021bd4:	4444b03a 	or	r2,r8,r17
 4021bd8:	8000871e 	bne	r16,zero,4021df8 <__adddf3+0x790>
 4021bdc:	1000ba26 	beq	r2,zero,4021ec8 <__adddf3+0x860>
 4021be0:	4984b03a 	or	r2,r9,r6
 4021be4:	103ebf26 	beq	r2,zero,40216e4 <__flash_rwdata_start+0xffff07bc>
 4021be8:	8985883a 	add	r2,r17,r6
 4021bec:	4247883a 	add	r3,r8,r9
 4021bf0:	1451803a 	cmpltu	r8,r2,r17
 4021bf4:	40d1883a 	add	r8,r8,r3
 4021bf8:	40c0202c 	andhi	r3,r8,128
 4021bfc:	1023883a 	mov	r17,r2
 4021c00:	183f1a26 	beq	r3,zero,402186c <__flash_rwdata_start+0xffff0944>
 4021c04:	00bfe034 	movhi	r2,65408
 4021c08:	10bfffc4 	addi	r2,r2,-1
 4021c0c:	2021883a 	mov	r16,r4
 4021c10:	4090703a 	and	r8,r8,r2
 4021c14:	003eb306 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021c18:	4444b03a 	or	r2,r8,r17
 4021c1c:	8000291e 	bne	r16,zero,4021cc4 <__adddf3+0x65c>
 4021c20:	10004b1e 	bne	r2,zero,4021d50 <__adddf3+0x6e8>
 4021c24:	4990b03a 	or	r8,r9,r6
 4021c28:	40008b26 	beq	r8,zero,4021e58 <__adddf3+0x7f0>
 4021c2c:	4811883a 	mov	r8,r9
 4021c30:	3023883a 	mov	r17,r6
 4021c34:	3825883a 	mov	r18,r7
 4021c38:	003eaa06 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021c3c:	1021883a 	mov	r16,r2
 4021c40:	0011883a 	mov	r8,zero
 4021c44:	0005883a 	mov	r2,zero
 4021c48:	003f0f06 	br	4021888 <__flash_rwdata_start+0xffff0960>
 4021c4c:	217ff804 	addi	r5,r4,-32
 4021c50:	00800804 	movi	r2,32
 4021c54:	494ad83a 	srl	r5,r9,r5
 4021c58:	20807d26 	beq	r4,r2,4021e50 <__adddf3+0x7e8>
 4021c5c:	00801004 	movi	r2,64
 4021c60:	1109c83a 	sub	r4,r2,r4
 4021c64:	4912983a 	sll	r9,r9,r4
 4021c68:	498cb03a 	or	r6,r9,r6
 4021c6c:	300cc03a 	cmpne	r6,r6,zero
 4021c70:	298ab03a 	or	r5,r5,r6
 4021c74:	0013883a 	mov	r9,zero
 4021c78:	003f1506 	br	40218d0 <__flash_rwdata_start+0xffff09a8>
 4021c7c:	0101ffc4 	movi	r4,2047
 4021c80:	113f9a1e 	bne	r2,r4,4021aec <__flash_rwdata_start+0xffff0bc4>
 4021c84:	4811883a 	mov	r8,r9
 4021c88:	3023883a 	mov	r17,r6
 4021c8c:	1021883a 	mov	r16,r2
 4021c90:	3825883a 	mov	r18,r7
 4021c94:	003e9306 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021c98:	8000161e 	bne	r16,zero,4021cf4 <__adddf3+0x68c>
 4021c9c:	444ab03a 	or	r5,r8,r17
 4021ca0:	28005126 	beq	r5,zero,4021de8 <__adddf3+0x780>
 4021ca4:	0108303a 	nor	r4,zero,r4
 4021ca8:	20004d1e 	bne	r4,zero,4021de0 <__adddf3+0x778>
 4021cac:	89a3883a 	add	r17,r17,r6
 4021cb0:	4253883a 	add	r9,r8,r9
 4021cb4:	898d803a 	cmpltu	r6,r17,r6
 4021cb8:	3251883a 	add	r8,r6,r9
 4021cbc:	1021883a 	mov	r16,r2
 4021cc0:	003f0806 	br	40218e4 <__flash_rwdata_start+0xffff09bc>
 4021cc4:	1000301e 	bne	r2,zero,4021d88 <__adddf3+0x720>
 4021cc8:	4984b03a 	or	r2,r9,r6
 4021ccc:	10007126 	beq	r2,zero,4021e94 <__adddf3+0x82c>
 4021cd0:	4811883a 	mov	r8,r9
 4021cd4:	3023883a 	mov	r17,r6
 4021cd8:	3825883a 	mov	r18,r7
 4021cdc:	0401ffc4 	movi	r16,2047
 4021ce0:	003e8006 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021ce4:	4462b03a 	or	r17,r8,r17
 4021ce8:	8822c03a 	cmpne	r17,r17,zero
 4021cec:	0007883a 	mov	r3,zero
 4021cf0:	003f8b06 	br	4021b20 <__flash_rwdata_start+0xffff0bf8>
 4021cf4:	0141ffc4 	movi	r5,2047
 4021cf8:	11403b26 	beq	r2,r5,4021de8 <__adddf3+0x780>
 4021cfc:	0109c83a 	sub	r4,zero,r4
 4021d00:	42002034 	orhi	r8,r8,128
 4021d04:	01400e04 	movi	r5,56
 4021d08:	29006716 	blt	r5,r4,4021ea8 <__adddf3+0x840>
 4021d0c:	014007c4 	movi	r5,31
 4021d10:	29007016 	blt	r5,r4,4021ed4 <__adddf3+0x86c>
 4021d14:	01400804 	movi	r5,32
 4021d18:	290bc83a 	sub	r5,r5,r4
 4021d1c:	4154983a 	sll	r10,r8,r5
 4021d20:	890ed83a 	srl	r7,r17,r4
 4021d24:	894a983a 	sll	r5,r17,r5
 4021d28:	4108d83a 	srl	r4,r8,r4
 4021d2c:	51e2b03a 	or	r17,r10,r7
 4021d30:	280ac03a 	cmpne	r5,r5,zero
 4021d34:	8962b03a 	or	r17,r17,r5
 4021d38:	89a3883a 	add	r17,r17,r6
 4021d3c:	2253883a 	add	r9,r4,r9
 4021d40:	898d803a 	cmpltu	r6,r17,r6
 4021d44:	3251883a 	add	r8,r6,r9
 4021d48:	1021883a 	mov	r16,r2
 4021d4c:	003ee506 	br	40218e4 <__flash_rwdata_start+0xffff09bc>
 4021d50:	4984b03a 	or	r2,r9,r6
 4021d54:	103e6326 	beq	r2,zero,40216e4 <__flash_rwdata_start+0xffff07bc>
 4021d58:	8987c83a 	sub	r3,r17,r6
 4021d5c:	88c9803a 	cmpltu	r4,r17,r3
 4021d60:	4245c83a 	sub	r2,r8,r9
 4021d64:	1105c83a 	sub	r2,r2,r4
 4021d68:	1100202c 	andhi	r4,r2,128
 4021d6c:	203ebb26 	beq	r4,zero,402185c <__flash_rwdata_start+0xffff0934>
 4021d70:	3463c83a 	sub	r17,r6,r17
 4021d74:	4a07c83a 	sub	r3,r9,r8
 4021d78:	344d803a 	cmpltu	r6,r6,r17
 4021d7c:	1991c83a 	sub	r8,r3,r6
 4021d80:	3825883a 	mov	r18,r7
 4021d84:	003e5706 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021d88:	4984b03a 	or	r2,r9,r6
 4021d8c:	10002e26 	beq	r2,zero,4021e48 <__adddf3+0x7e0>
 4021d90:	4004d0fa 	srli	r2,r8,3
 4021d94:	8822d0fa 	srli	r17,r17,3
 4021d98:	4010977a 	slli	r8,r8,29
 4021d9c:	10c0022c 	andhi	r3,r2,8
 4021da0:	4462b03a 	or	r17,r8,r17
 4021da4:	18000826 	beq	r3,zero,4021dc8 <__adddf3+0x760>
 4021da8:	4808d0fa 	srli	r4,r9,3
 4021dac:	20c0022c 	andhi	r3,r4,8
 4021db0:	1800051e 	bne	r3,zero,4021dc8 <__adddf3+0x760>
 4021db4:	300cd0fa 	srli	r6,r6,3
 4021db8:	4806977a 	slli	r3,r9,29
 4021dbc:	2005883a 	mov	r2,r4
 4021dc0:	3825883a 	mov	r18,r7
 4021dc4:	19a2b03a 	or	r17,r3,r6
 4021dc8:	8810d77a 	srli	r8,r17,29
 4021dcc:	100490fa 	slli	r2,r2,3
 4021dd0:	882290fa 	slli	r17,r17,3
 4021dd4:	0401ffc4 	movi	r16,2047
 4021dd8:	4090b03a 	or	r8,r8,r2
 4021ddc:	003e4106 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021de0:	0141ffc4 	movi	r5,2047
 4021de4:	117fc71e 	bne	r2,r5,4021d04 <__flash_rwdata_start+0xffff0ddc>
 4021de8:	4811883a 	mov	r8,r9
 4021dec:	3023883a 	mov	r17,r6
 4021df0:	1021883a 	mov	r16,r2
 4021df4:	003e3b06 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021df8:	10002f26 	beq	r2,zero,4021eb8 <__adddf3+0x850>
 4021dfc:	4984b03a 	or	r2,r9,r6
 4021e00:	10001126 	beq	r2,zero,4021e48 <__adddf3+0x7e0>
 4021e04:	4004d0fa 	srli	r2,r8,3
 4021e08:	8822d0fa 	srli	r17,r17,3
 4021e0c:	4010977a 	slli	r8,r8,29
 4021e10:	10c0022c 	andhi	r3,r2,8
 4021e14:	4462b03a 	or	r17,r8,r17
 4021e18:	183feb26 	beq	r3,zero,4021dc8 <__flash_rwdata_start+0xffff0ea0>
 4021e1c:	4808d0fa 	srli	r4,r9,3
 4021e20:	20c0022c 	andhi	r3,r4,8
 4021e24:	183fe81e 	bne	r3,zero,4021dc8 <__flash_rwdata_start+0xffff0ea0>
 4021e28:	300cd0fa 	srli	r6,r6,3
 4021e2c:	4806977a 	slli	r3,r9,29
 4021e30:	2005883a 	mov	r2,r4
 4021e34:	19a2b03a 	or	r17,r3,r6
 4021e38:	003fe306 	br	4021dc8 <__flash_rwdata_start+0xffff0ea0>
 4021e3c:	0011883a 	mov	r8,zero
 4021e40:	0005883a 	mov	r2,zero
 4021e44:	003e3f06 	br	4021744 <__flash_rwdata_start+0xffff081c>
 4021e48:	0401ffc4 	movi	r16,2047
 4021e4c:	003e2506 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021e50:	0013883a 	mov	r9,zero
 4021e54:	003f8406 	br	4021c68 <__flash_rwdata_start+0xffff0d40>
 4021e58:	0005883a 	mov	r2,zero
 4021e5c:	0007883a 	mov	r3,zero
 4021e60:	003e8906 	br	4021888 <__flash_rwdata_start+0xffff0960>
 4021e64:	197ff804 	addi	r5,r3,-32
 4021e68:	01000804 	movi	r4,32
 4021e6c:	414ad83a 	srl	r5,r8,r5
 4021e70:	19002426 	beq	r3,r4,4021f04 <__adddf3+0x89c>
 4021e74:	01001004 	movi	r4,64
 4021e78:	20c7c83a 	sub	r3,r4,r3
 4021e7c:	40c6983a 	sll	r3,r8,r3
 4021e80:	1c46b03a 	or	r3,r3,r17
 4021e84:	1806c03a 	cmpne	r3,r3,zero
 4021e88:	28e2b03a 	or	r17,r5,r3
 4021e8c:	0007883a 	mov	r3,zero
 4021e90:	003f2306 	br	4021b20 <__flash_rwdata_start+0xffff0bf8>
 4021e94:	0007883a 	mov	r3,zero
 4021e98:	5811883a 	mov	r8,r11
 4021e9c:	00bfffc4 	movi	r2,-1
 4021ea0:	0401ffc4 	movi	r16,2047
 4021ea4:	003e7806 	br	4021888 <__flash_rwdata_start+0xffff0960>
 4021ea8:	4462b03a 	or	r17,r8,r17
 4021eac:	8822c03a 	cmpne	r17,r17,zero
 4021eb0:	0009883a 	mov	r4,zero
 4021eb4:	003fa006 	br	4021d38 <__flash_rwdata_start+0xffff0e10>
 4021eb8:	4811883a 	mov	r8,r9
 4021ebc:	3023883a 	mov	r17,r6
 4021ec0:	0401ffc4 	movi	r16,2047
 4021ec4:	003e0706 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021ec8:	4811883a 	mov	r8,r9
 4021ecc:	3023883a 	mov	r17,r6
 4021ed0:	003e0406 	br	40216e4 <__flash_rwdata_start+0xffff07bc>
 4021ed4:	21fff804 	addi	r7,r4,-32
 4021ed8:	01400804 	movi	r5,32
 4021edc:	41ced83a 	srl	r7,r8,r7
 4021ee0:	21400a26 	beq	r4,r5,4021f0c <__adddf3+0x8a4>
 4021ee4:	01401004 	movi	r5,64
 4021ee8:	2909c83a 	sub	r4,r5,r4
 4021eec:	4108983a 	sll	r4,r8,r4
 4021ef0:	2448b03a 	or	r4,r4,r17
 4021ef4:	2008c03a 	cmpne	r4,r4,zero
 4021ef8:	3922b03a 	or	r17,r7,r4
 4021efc:	0009883a 	mov	r4,zero
 4021f00:	003f8d06 	br	4021d38 <__flash_rwdata_start+0xffff0e10>
 4021f04:	0007883a 	mov	r3,zero
 4021f08:	003fdd06 	br	4021e80 <__flash_rwdata_start+0xffff0f58>
 4021f0c:	0009883a 	mov	r4,zero
 4021f10:	003ff706 	br	4021ef0 <__flash_rwdata_start+0xffff0fc8>

04021f14 <__divdf3>:
 4021f14:	defff204 	addi	sp,sp,-56
 4021f18:	dd400915 	stw	r21,36(sp)
 4021f1c:	282ad53a 	srli	r21,r5,20
 4021f20:	dd000815 	stw	r20,32(sp)
 4021f24:	2828d7fa 	srli	r20,r5,31
 4021f28:	dc000415 	stw	r16,16(sp)
 4021f2c:	04000434 	movhi	r16,16
 4021f30:	df000c15 	stw	fp,48(sp)
 4021f34:	843fffc4 	addi	r16,r16,-1
 4021f38:	dfc00d15 	stw	ra,52(sp)
 4021f3c:	ddc00b15 	stw	r23,44(sp)
 4021f40:	dd800a15 	stw	r22,40(sp)
 4021f44:	dcc00715 	stw	r19,28(sp)
 4021f48:	dc800615 	stw	r18,24(sp)
 4021f4c:	dc400515 	stw	r17,20(sp)
 4021f50:	ad41ffcc 	andi	r21,r21,2047
 4021f54:	2c20703a 	and	r16,r5,r16
 4021f58:	a7003fcc 	andi	fp,r20,255
 4021f5c:	a8006126 	beq	r21,zero,40220e4 <__divdf3+0x1d0>
 4021f60:	0081ffc4 	movi	r2,2047
 4021f64:	2025883a 	mov	r18,r4
 4021f68:	a8803726 	beq	r21,r2,4022048 <__divdf3+0x134>
 4021f6c:	80800434 	orhi	r2,r16,16
 4021f70:	100490fa 	slli	r2,r2,3
 4021f74:	2020d77a 	srli	r16,r4,29
 4021f78:	202490fa 	slli	r18,r4,3
 4021f7c:	ad7f0044 	addi	r21,r21,-1023
 4021f80:	80a0b03a 	or	r16,r16,r2
 4021f84:	0027883a 	mov	r19,zero
 4021f88:	0013883a 	mov	r9,zero
 4021f8c:	3804d53a 	srli	r2,r7,20
 4021f90:	382cd7fa 	srli	r22,r7,31
 4021f94:	04400434 	movhi	r17,16
 4021f98:	8c7fffc4 	addi	r17,r17,-1
 4021f9c:	1081ffcc 	andi	r2,r2,2047
 4021fa0:	3011883a 	mov	r8,r6
 4021fa4:	3c62703a 	and	r17,r7,r17
 4021fa8:	b5c03fcc 	andi	r23,r22,255
 4021fac:	10006c26 	beq	r2,zero,4022160 <__divdf3+0x24c>
 4021fb0:	00c1ffc4 	movi	r3,2047
 4021fb4:	10c06426 	beq	r2,r3,4022148 <__divdf3+0x234>
 4021fb8:	88c00434 	orhi	r3,r17,16
 4021fbc:	180690fa 	slli	r3,r3,3
 4021fc0:	3022d77a 	srli	r17,r6,29
 4021fc4:	301090fa 	slli	r8,r6,3
 4021fc8:	10bf0044 	addi	r2,r2,-1023
 4021fcc:	88e2b03a 	or	r17,r17,r3
 4021fd0:	000f883a 	mov	r7,zero
 4021fd4:	a58cf03a 	xor	r6,r20,r22
 4021fd8:	3cc8b03a 	or	r4,r7,r19
 4021fdc:	a8abc83a 	sub	r21,r21,r2
 4021fe0:	008003c4 	movi	r2,15
 4021fe4:	3007883a 	mov	r3,r6
 4021fe8:	34c03fcc 	andi	r19,r6,255
 4021fec:	11009036 	bltu	r2,r4,4022230 <__divdf3+0x31c>
 4021ff0:	200890ba 	slli	r4,r4,2
 4021ff4:	008100b4 	movhi	r2,1026
 4021ff8:	10880204 	addi	r2,r2,8200
 4021ffc:	2089883a 	add	r4,r4,r2
 4022000:	20800017 	ldw	r2,0(r4)
 4022004:	1000683a 	jmp	r2
 4022008:	04022230 	cmpltui	r16,zero,2184
 402200c:	04022080 	call	402208 <_gp+0x3f83d4>
 4022010:	04022220 	cmpeqi	r16,zero,2184
 4022014:	04022074 	movhi	r16,2177
 4022018:	04022220 	cmpeqi	r16,zero,2184
 402201c:	040221f4 	movhi	r16,2183
 4022020:	04022220 	cmpeqi	r16,zero,2184
 4022024:	04022074 	movhi	r16,2177
 4022028:	04022080 	call	402208 <_gp+0x3f83d4>
 402202c:	04022080 	call	402208 <_gp+0x3f83d4>
 4022030:	040221f4 	movhi	r16,2183
 4022034:	04022074 	movhi	r16,2177
 4022038:	04022064 	muli	r16,zero,2177
 402203c:	04022064 	muli	r16,zero,2177
 4022040:	04022064 	muli	r16,zero,2177
 4022044:	04022514 	movui	r16,2196
 4022048:	2404b03a 	or	r2,r4,r16
 402204c:	1000661e 	bne	r2,zero,40221e8 <__divdf3+0x2d4>
 4022050:	04c00204 	movi	r19,8
 4022054:	0021883a 	mov	r16,zero
 4022058:	0025883a 	mov	r18,zero
 402205c:	02400084 	movi	r9,2
 4022060:	003fca06 	br	4021f8c <__flash_rwdata_start+0xffff1064>
 4022064:	8023883a 	mov	r17,r16
 4022068:	9011883a 	mov	r8,r18
 402206c:	e02f883a 	mov	r23,fp
 4022070:	480f883a 	mov	r7,r9
 4022074:	00800084 	movi	r2,2
 4022078:	3881311e 	bne	r7,r2,4022540 <__divdf3+0x62c>
 402207c:	b827883a 	mov	r19,r23
 4022080:	98c0004c 	andi	r3,r19,1
 4022084:	0081ffc4 	movi	r2,2047
 4022088:	000b883a 	mov	r5,zero
 402208c:	0025883a 	mov	r18,zero
 4022090:	1004953a 	slli	r2,r2,20
 4022094:	18c03fcc 	andi	r3,r3,255
 4022098:	04400434 	movhi	r17,16
 402209c:	8c7fffc4 	addi	r17,r17,-1
 40220a0:	180697fa 	slli	r3,r3,31
 40220a4:	2c4a703a 	and	r5,r5,r17
 40220a8:	288ab03a 	or	r5,r5,r2
 40220ac:	28c6b03a 	or	r3,r5,r3
 40220b0:	9005883a 	mov	r2,r18
 40220b4:	dfc00d17 	ldw	ra,52(sp)
 40220b8:	df000c17 	ldw	fp,48(sp)
 40220bc:	ddc00b17 	ldw	r23,44(sp)
 40220c0:	dd800a17 	ldw	r22,40(sp)
 40220c4:	dd400917 	ldw	r21,36(sp)
 40220c8:	dd000817 	ldw	r20,32(sp)
 40220cc:	dcc00717 	ldw	r19,28(sp)
 40220d0:	dc800617 	ldw	r18,24(sp)
 40220d4:	dc400517 	ldw	r17,20(sp)
 40220d8:	dc000417 	ldw	r16,16(sp)
 40220dc:	dec00e04 	addi	sp,sp,56
 40220e0:	f800283a 	ret
 40220e4:	2404b03a 	or	r2,r4,r16
 40220e8:	2027883a 	mov	r19,r4
 40220ec:	10003926 	beq	r2,zero,40221d4 <__divdf3+0x2c0>
 40220f0:	80012e26 	beq	r16,zero,40225ac <__divdf3+0x698>
 40220f4:	8009883a 	mov	r4,r16
 40220f8:	d9800315 	stw	r6,12(sp)
 40220fc:	d9c00215 	stw	r7,8(sp)
 4022100:	4023bc40 	call	4023bc4 <__clzsi2>
 4022104:	d9800317 	ldw	r6,12(sp)
 4022108:	d9c00217 	ldw	r7,8(sp)
 402210c:	113ffd44 	addi	r4,r2,-11
 4022110:	00c00704 	movi	r3,28
 4022114:	19012116 	blt	r3,r4,402259c <__divdf3+0x688>
 4022118:	00c00744 	movi	r3,29
 402211c:	147ffe04 	addi	r17,r2,-8
 4022120:	1907c83a 	sub	r3,r3,r4
 4022124:	8460983a 	sll	r16,r16,r17
 4022128:	98c6d83a 	srl	r3,r19,r3
 402212c:	9c64983a 	sll	r18,r19,r17
 4022130:	1c20b03a 	or	r16,r3,r16
 4022134:	1080fcc4 	addi	r2,r2,1011
 4022138:	00abc83a 	sub	r21,zero,r2
 402213c:	0027883a 	mov	r19,zero
 4022140:	0013883a 	mov	r9,zero
 4022144:	003f9106 	br	4021f8c <__flash_rwdata_start+0xffff1064>
 4022148:	3446b03a 	or	r3,r6,r17
 402214c:	18001f1e 	bne	r3,zero,40221cc <__divdf3+0x2b8>
 4022150:	0023883a 	mov	r17,zero
 4022154:	0011883a 	mov	r8,zero
 4022158:	01c00084 	movi	r7,2
 402215c:	003f9d06 	br	4021fd4 <__flash_rwdata_start+0xffff10ac>
 4022160:	3446b03a 	or	r3,r6,r17
 4022164:	18001526 	beq	r3,zero,40221bc <__divdf3+0x2a8>
 4022168:	88011b26 	beq	r17,zero,40225d8 <__divdf3+0x6c4>
 402216c:	8809883a 	mov	r4,r17
 4022170:	d9800315 	stw	r6,12(sp)
 4022174:	da400115 	stw	r9,4(sp)
 4022178:	4023bc40 	call	4023bc4 <__clzsi2>
 402217c:	d9800317 	ldw	r6,12(sp)
 4022180:	da400117 	ldw	r9,4(sp)
 4022184:	113ffd44 	addi	r4,r2,-11
 4022188:	00c00704 	movi	r3,28
 402218c:	19010e16 	blt	r3,r4,40225c8 <__divdf3+0x6b4>
 4022190:	00c00744 	movi	r3,29
 4022194:	123ffe04 	addi	r8,r2,-8
 4022198:	1907c83a 	sub	r3,r3,r4
 402219c:	8a22983a 	sll	r17,r17,r8
 40221a0:	30c6d83a 	srl	r3,r6,r3
 40221a4:	3210983a 	sll	r8,r6,r8
 40221a8:	1c62b03a 	or	r17,r3,r17
 40221ac:	1080fcc4 	addi	r2,r2,1011
 40221b0:	0085c83a 	sub	r2,zero,r2
 40221b4:	000f883a 	mov	r7,zero
 40221b8:	003f8606 	br	4021fd4 <__flash_rwdata_start+0xffff10ac>
 40221bc:	0023883a 	mov	r17,zero
 40221c0:	0011883a 	mov	r8,zero
 40221c4:	01c00044 	movi	r7,1
 40221c8:	003f8206 	br	4021fd4 <__flash_rwdata_start+0xffff10ac>
 40221cc:	01c000c4 	movi	r7,3
 40221d0:	003f8006 	br	4021fd4 <__flash_rwdata_start+0xffff10ac>
 40221d4:	04c00104 	movi	r19,4
 40221d8:	0021883a 	mov	r16,zero
 40221dc:	0025883a 	mov	r18,zero
 40221e0:	02400044 	movi	r9,1
 40221e4:	003f6906 	br	4021f8c <__flash_rwdata_start+0xffff1064>
 40221e8:	04c00304 	movi	r19,12
 40221ec:	024000c4 	movi	r9,3
 40221f0:	003f6606 	br	4021f8c <__flash_rwdata_start+0xffff1064>
 40221f4:	01400434 	movhi	r5,16
 40221f8:	0007883a 	mov	r3,zero
 40221fc:	297fffc4 	addi	r5,r5,-1
 4022200:	04bfffc4 	movi	r18,-1
 4022204:	0081ffc4 	movi	r2,2047
 4022208:	003fa106 	br	4022090 <__flash_rwdata_start+0xffff1168>
 402220c:	00c00044 	movi	r3,1
 4022210:	1887c83a 	sub	r3,r3,r2
 4022214:	01000e04 	movi	r4,56
 4022218:	20c1210e 	bge	r4,r3,40226a0 <__divdf3+0x78c>
 402221c:	98c0004c 	andi	r3,r19,1
 4022220:	0005883a 	mov	r2,zero
 4022224:	000b883a 	mov	r5,zero
 4022228:	0025883a 	mov	r18,zero
 402222c:	003f9806 	br	4022090 <__flash_rwdata_start+0xffff1168>
 4022230:	8c00fd36 	bltu	r17,r16,4022628 <__divdf3+0x714>
 4022234:	8440fb26 	beq	r16,r17,4022624 <__divdf3+0x710>
 4022238:	8007883a 	mov	r3,r16
 402223c:	ad7fffc4 	addi	r21,r21,-1
 4022240:	0021883a 	mov	r16,zero
 4022244:	4004d63a 	srli	r2,r8,24
 4022248:	8822923a 	slli	r17,r17,8
 402224c:	1809883a 	mov	r4,r3
 4022250:	402c923a 	slli	r22,r8,8
 4022254:	88b8b03a 	or	fp,r17,r2
 4022258:	e028d43a 	srli	r20,fp,16
 402225c:	d8c00015 	stw	r3,0(sp)
 4022260:	e5ffffcc 	andi	r23,fp,65535
 4022264:	a00b883a 	mov	r5,r20
 4022268:	40215ac0 	call	40215ac <__udivsi3>
 402226c:	d8c00017 	ldw	r3,0(sp)
 4022270:	a00b883a 	mov	r5,r20
 4022274:	d8800315 	stw	r2,12(sp)
 4022278:	1809883a 	mov	r4,r3
 402227c:	40216100 	call	4021610 <__umodsi3>
 4022280:	d9800317 	ldw	r6,12(sp)
 4022284:	1006943a 	slli	r3,r2,16
 4022288:	9004d43a 	srli	r2,r18,16
 402228c:	b9a3383a 	mul	r17,r23,r6
 4022290:	10c4b03a 	or	r2,r2,r3
 4022294:	1440062e 	bgeu	r2,r17,40222b0 <__divdf3+0x39c>
 4022298:	1705883a 	add	r2,r2,fp
 402229c:	30ffffc4 	addi	r3,r6,-1
 40222a0:	1700ee36 	bltu	r2,fp,402265c <__divdf3+0x748>
 40222a4:	1440ed2e 	bgeu	r2,r17,402265c <__divdf3+0x748>
 40222a8:	31bfff84 	addi	r6,r6,-2
 40222ac:	1705883a 	add	r2,r2,fp
 40222b0:	1463c83a 	sub	r17,r2,r17
 40222b4:	a00b883a 	mov	r5,r20
 40222b8:	8809883a 	mov	r4,r17
 40222bc:	d9800315 	stw	r6,12(sp)
 40222c0:	40215ac0 	call	40215ac <__udivsi3>
 40222c4:	a00b883a 	mov	r5,r20
 40222c8:	8809883a 	mov	r4,r17
 40222cc:	d8800215 	stw	r2,8(sp)
 40222d0:	40216100 	call	4021610 <__umodsi3>
 40222d4:	d9c00217 	ldw	r7,8(sp)
 40222d8:	1004943a 	slli	r2,r2,16
 40222dc:	94bfffcc 	andi	r18,r18,65535
 40222e0:	b9d1383a 	mul	r8,r23,r7
 40222e4:	90a4b03a 	or	r18,r18,r2
 40222e8:	d9800317 	ldw	r6,12(sp)
 40222ec:	9200062e 	bgeu	r18,r8,4022308 <__divdf3+0x3f4>
 40222f0:	9725883a 	add	r18,r18,fp
 40222f4:	38bfffc4 	addi	r2,r7,-1
 40222f8:	9700d636 	bltu	r18,fp,4022654 <__divdf3+0x740>
 40222fc:	9200d52e 	bgeu	r18,r8,4022654 <__divdf3+0x740>
 4022300:	39ffff84 	addi	r7,r7,-2
 4022304:	9725883a 	add	r18,r18,fp
 4022308:	3004943a 	slli	r2,r6,16
 402230c:	b012d43a 	srli	r9,r22,16
 4022310:	b1bfffcc 	andi	r6,r22,65535
 4022314:	11e2b03a 	or	r17,r2,r7
 4022318:	8806d43a 	srli	r3,r17,16
 402231c:	893fffcc 	andi	r4,r17,65535
 4022320:	218b383a 	mul	r5,r4,r6
 4022324:	30c5383a 	mul	r2,r6,r3
 4022328:	2249383a 	mul	r4,r4,r9
 402232c:	280ed43a 	srli	r7,r5,16
 4022330:	9225c83a 	sub	r18,r18,r8
 4022334:	2089883a 	add	r4,r4,r2
 4022338:	3909883a 	add	r4,r7,r4
 402233c:	1a47383a 	mul	r3,r3,r9
 4022340:	2080022e 	bgeu	r4,r2,402234c <__divdf3+0x438>
 4022344:	00800074 	movhi	r2,1
 4022348:	1887883a 	add	r3,r3,r2
 402234c:	2004d43a 	srli	r2,r4,16
 4022350:	2008943a 	slli	r4,r4,16
 4022354:	297fffcc 	andi	r5,r5,65535
 4022358:	10c7883a 	add	r3,r2,r3
 402235c:	2149883a 	add	r4,r4,r5
 4022360:	90c0a536 	bltu	r18,r3,40225f8 <__divdf3+0x6e4>
 4022364:	90c0bf26 	beq	r18,r3,4022664 <__divdf3+0x750>
 4022368:	90c7c83a 	sub	r3,r18,r3
 402236c:	810fc83a 	sub	r7,r16,r4
 4022370:	81e5803a 	cmpltu	r18,r16,r7
 4022374:	1ca5c83a 	sub	r18,r3,r18
 4022378:	e480c126 	beq	fp,r18,4022680 <__divdf3+0x76c>
 402237c:	a00b883a 	mov	r5,r20
 4022380:	9009883a 	mov	r4,r18
 4022384:	d9800315 	stw	r6,12(sp)
 4022388:	d9c00215 	stw	r7,8(sp)
 402238c:	da400115 	stw	r9,4(sp)
 4022390:	40215ac0 	call	40215ac <__udivsi3>
 4022394:	a00b883a 	mov	r5,r20
 4022398:	9009883a 	mov	r4,r18
 402239c:	d8800015 	stw	r2,0(sp)
 40223a0:	40216100 	call	4021610 <__umodsi3>
 40223a4:	d9c00217 	ldw	r7,8(sp)
 40223a8:	da000017 	ldw	r8,0(sp)
 40223ac:	1006943a 	slli	r3,r2,16
 40223b0:	3804d43a 	srli	r2,r7,16
 40223b4:	ba21383a 	mul	r16,r23,r8
 40223b8:	d9800317 	ldw	r6,12(sp)
 40223bc:	10c4b03a 	or	r2,r2,r3
 40223c0:	da400117 	ldw	r9,4(sp)
 40223c4:	1400062e 	bgeu	r2,r16,40223e0 <__divdf3+0x4cc>
 40223c8:	1705883a 	add	r2,r2,fp
 40223cc:	40ffffc4 	addi	r3,r8,-1
 40223d0:	1700ad36 	bltu	r2,fp,4022688 <__divdf3+0x774>
 40223d4:	1400ac2e 	bgeu	r2,r16,4022688 <__divdf3+0x774>
 40223d8:	423fff84 	addi	r8,r8,-2
 40223dc:	1705883a 	add	r2,r2,fp
 40223e0:	1421c83a 	sub	r16,r2,r16
 40223e4:	a00b883a 	mov	r5,r20
 40223e8:	8009883a 	mov	r4,r16
 40223ec:	d9800315 	stw	r6,12(sp)
 40223f0:	d9c00215 	stw	r7,8(sp)
 40223f4:	da000015 	stw	r8,0(sp)
 40223f8:	da400115 	stw	r9,4(sp)
 40223fc:	40215ac0 	call	40215ac <__udivsi3>
 4022400:	8009883a 	mov	r4,r16
 4022404:	a00b883a 	mov	r5,r20
 4022408:	1025883a 	mov	r18,r2
 402240c:	40216100 	call	4021610 <__umodsi3>
 4022410:	d9c00217 	ldw	r7,8(sp)
 4022414:	1004943a 	slli	r2,r2,16
 4022418:	bcaf383a 	mul	r23,r23,r18
 402241c:	393fffcc 	andi	r4,r7,65535
 4022420:	2088b03a 	or	r4,r4,r2
 4022424:	d9800317 	ldw	r6,12(sp)
 4022428:	da000017 	ldw	r8,0(sp)
 402242c:	da400117 	ldw	r9,4(sp)
 4022430:	25c0062e 	bgeu	r4,r23,402244c <__divdf3+0x538>
 4022434:	2709883a 	add	r4,r4,fp
 4022438:	90bfffc4 	addi	r2,r18,-1
 402243c:	27009436 	bltu	r4,fp,4022690 <__divdf3+0x77c>
 4022440:	25c0932e 	bgeu	r4,r23,4022690 <__divdf3+0x77c>
 4022444:	94bfff84 	addi	r18,r18,-2
 4022448:	2709883a 	add	r4,r4,fp
 402244c:	4004943a 	slli	r2,r8,16
 4022450:	25efc83a 	sub	r23,r4,r23
 4022454:	1490b03a 	or	r8,r2,r18
 4022458:	4008d43a 	srli	r4,r8,16
 402245c:	40ffffcc 	andi	r3,r8,65535
 4022460:	30c5383a 	mul	r2,r6,r3
 4022464:	1a47383a 	mul	r3,r3,r9
 4022468:	310d383a 	mul	r6,r6,r4
 402246c:	100ad43a 	srli	r5,r2,16
 4022470:	4913383a 	mul	r9,r9,r4
 4022474:	1987883a 	add	r3,r3,r6
 4022478:	28c7883a 	add	r3,r5,r3
 402247c:	1980022e 	bgeu	r3,r6,4022488 <__divdf3+0x574>
 4022480:	01000074 	movhi	r4,1
 4022484:	4913883a 	add	r9,r9,r4
 4022488:	1808d43a 	srli	r4,r3,16
 402248c:	1806943a 	slli	r3,r3,16
 4022490:	10bfffcc 	andi	r2,r2,65535
 4022494:	2253883a 	add	r9,r4,r9
 4022498:	1887883a 	add	r3,r3,r2
 402249c:	ba403836 	bltu	r23,r9,4022580 <__divdf3+0x66c>
 40224a0:	ba403626 	beq	r23,r9,402257c <__divdf3+0x668>
 40224a4:	42000054 	ori	r8,r8,1
 40224a8:	a880ffc4 	addi	r2,r21,1023
 40224ac:	00bf570e 	bge	zero,r2,402220c <__flash_rwdata_start+0xffff12e4>
 40224b0:	40c001cc 	andi	r3,r8,7
 40224b4:	18000726 	beq	r3,zero,40224d4 <__divdf3+0x5c0>
 40224b8:	40c003cc 	andi	r3,r8,15
 40224bc:	01000104 	movi	r4,4
 40224c0:	19000426 	beq	r3,r4,40224d4 <__divdf3+0x5c0>
 40224c4:	4107883a 	add	r3,r8,r4
 40224c8:	1a11803a 	cmpltu	r8,r3,r8
 40224cc:	8a23883a 	add	r17,r17,r8
 40224d0:	1811883a 	mov	r8,r3
 40224d4:	88c0402c 	andhi	r3,r17,256
 40224d8:	18000426 	beq	r3,zero,40224ec <__divdf3+0x5d8>
 40224dc:	00ffc034 	movhi	r3,65280
 40224e0:	18ffffc4 	addi	r3,r3,-1
 40224e4:	a8810004 	addi	r2,r21,1024
 40224e8:	88e2703a 	and	r17,r17,r3
 40224ec:	00c1ff84 	movi	r3,2046
 40224f0:	18bee316 	blt	r3,r2,4022080 <__flash_rwdata_start+0xffff1158>
 40224f4:	8824977a 	slli	r18,r17,29
 40224f8:	4010d0fa 	srli	r8,r8,3
 40224fc:	8822927a 	slli	r17,r17,9
 4022500:	1081ffcc 	andi	r2,r2,2047
 4022504:	9224b03a 	or	r18,r18,r8
 4022508:	880ad33a 	srli	r5,r17,12
 402250c:	98c0004c 	andi	r3,r19,1
 4022510:	003edf06 	br	4022090 <__flash_rwdata_start+0xffff1168>
 4022514:	8080022c 	andhi	r2,r16,8
 4022518:	10001226 	beq	r2,zero,4022564 <__divdf3+0x650>
 402251c:	8880022c 	andhi	r2,r17,8
 4022520:	1000101e 	bne	r2,zero,4022564 <__divdf3+0x650>
 4022524:	00800434 	movhi	r2,16
 4022528:	89400234 	orhi	r5,r17,8
 402252c:	10bfffc4 	addi	r2,r2,-1
 4022530:	b007883a 	mov	r3,r22
 4022534:	288a703a 	and	r5,r5,r2
 4022538:	4025883a 	mov	r18,r8
 402253c:	003f3106 	br	4022204 <__flash_rwdata_start+0xffff12dc>
 4022540:	008000c4 	movi	r2,3
 4022544:	3880a626 	beq	r7,r2,40227e0 <__divdf3+0x8cc>
 4022548:	00800044 	movi	r2,1
 402254c:	3880521e 	bne	r7,r2,4022698 <__divdf3+0x784>
 4022550:	b807883a 	mov	r3,r23
 4022554:	0005883a 	mov	r2,zero
 4022558:	000b883a 	mov	r5,zero
 402255c:	0025883a 	mov	r18,zero
 4022560:	003ecb06 	br	4022090 <__flash_rwdata_start+0xffff1168>
 4022564:	00800434 	movhi	r2,16
 4022568:	81400234 	orhi	r5,r16,8
 402256c:	10bfffc4 	addi	r2,r2,-1
 4022570:	a007883a 	mov	r3,r20
 4022574:	288a703a 	and	r5,r5,r2
 4022578:	003f2206 	br	4022204 <__flash_rwdata_start+0xffff12dc>
 402257c:	183fca26 	beq	r3,zero,40224a8 <__flash_rwdata_start+0xffff1580>
 4022580:	e5ef883a 	add	r23,fp,r23
 4022584:	40bfffc4 	addi	r2,r8,-1
 4022588:	bf00392e 	bgeu	r23,fp,4022670 <__divdf3+0x75c>
 402258c:	1011883a 	mov	r8,r2
 4022590:	ba7fc41e 	bne	r23,r9,40224a4 <__flash_rwdata_start+0xffff157c>
 4022594:	b0ffc31e 	bne	r22,r3,40224a4 <__flash_rwdata_start+0xffff157c>
 4022598:	003fc306 	br	40224a8 <__flash_rwdata_start+0xffff1580>
 402259c:	143ff604 	addi	r16,r2,-40
 40225a0:	9c20983a 	sll	r16,r19,r16
 40225a4:	0025883a 	mov	r18,zero
 40225a8:	003ee206 	br	4022134 <__flash_rwdata_start+0xffff120c>
 40225ac:	d9800315 	stw	r6,12(sp)
 40225b0:	d9c00215 	stw	r7,8(sp)
 40225b4:	4023bc40 	call	4023bc4 <__clzsi2>
 40225b8:	10800804 	addi	r2,r2,32
 40225bc:	d9c00217 	ldw	r7,8(sp)
 40225c0:	d9800317 	ldw	r6,12(sp)
 40225c4:	003ed106 	br	402210c <__flash_rwdata_start+0xffff11e4>
 40225c8:	147ff604 	addi	r17,r2,-40
 40225cc:	3462983a 	sll	r17,r6,r17
 40225d0:	0011883a 	mov	r8,zero
 40225d4:	003ef506 	br	40221ac <__flash_rwdata_start+0xffff1284>
 40225d8:	3009883a 	mov	r4,r6
 40225dc:	d9800315 	stw	r6,12(sp)
 40225e0:	da400115 	stw	r9,4(sp)
 40225e4:	4023bc40 	call	4023bc4 <__clzsi2>
 40225e8:	10800804 	addi	r2,r2,32
 40225ec:	da400117 	ldw	r9,4(sp)
 40225f0:	d9800317 	ldw	r6,12(sp)
 40225f4:	003ee306 	br	4022184 <__flash_rwdata_start+0xffff125c>
 40225f8:	85a1883a 	add	r16,r16,r22
 40225fc:	8585803a 	cmpltu	r2,r16,r22
 4022600:	1705883a 	add	r2,r2,fp
 4022604:	14a5883a 	add	r18,r2,r18
 4022608:	88bfffc4 	addi	r2,r17,-1
 402260c:	e4800c2e 	bgeu	fp,r18,4022640 <__divdf3+0x72c>
 4022610:	90c03e36 	bltu	r18,r3,402270c <__divdf3+0x7f8>
 4022614:	1c806926 	beq	r3,r18,40227bc <__divdf3+0x8a8>
 4022618:	90c7c83a 	sub	r3,r18,r3
 402261c:	1023883a 	mov	r17,r2
 4022620:	003f5206 	br	402236c <__flash_rwdata_start+0xffff1444>
 4022624:	923f0436 	bltu	r18,r8,4022238 <__flash_rwdata_start+0xffff1310>
 4022628:	800897fa 	slli	r4,r16,31
 402262c:	9004d07a 	srli	r2,r18,1
 4022630:	8006d07a 	srli	r3,r16,1
 4022634:	902097fa 	slli	r16,r18,31
 4022638:	20a4b03a 	or	r18,r4,r2
 402263c:	003f0106 	br	4022244 <__flash_rwdata_start+0xffff131c>
 4022640:	e4bff51e 	bne	fp,r18,4022618 <__flash_rwdata_start+0xffff16f0>
 4022644:	85bff22e 	bgeu	r16,r22,4022610 <__flash_rwdata_start+0xffff16e8>
 4022648:	e0c7c83a 	sub	r3,fp,r3
 402264c:	1023883a 	mov	r17,r2
 4022650:	003f4606 	br	402236c <__flash_rwdata_start+0xffff1444>
 4022654:	100f883a 	mov	r7,r2
 4022658:	003f2b06 	br	4022308 <__flash_rwdata_start+0xffff13e0>
 402265c:	180d883a 	mov	r6,r3
 4022660:	003f1306 	br	40222b0 <__flash_rwdata_start+0xffff1388>
 4022664:	813fe436 	bltu	r16,r4,40225f8 <__flash_rwdata_start+0xffff16d0>
 4022668:	0007883a 	mov	r3,zero
 402266c:	003f3f06 	br	402236c <__flash_rwdata_start+0xffff1444>
 4022670:	ba402c36 	bltu	r23,r9,4022724 <__divdf3+0x810>
 4022674:	4dc05426 	beq	r9,r23,40227c8 <__divdf3+0x8b4>
 4022678:	1011883a 	mov	r8,r2
 402267c:	003f8906 	br	40224a4 <__flash_rwdata_start+0xffff157c>
 4022680:	023fffc4 	movi	r8,-1
 4022684:	003f8806 	br	40224a8 <__flash_rwdata_start+0xffff1580>
 4022688:	1811883a 	mov	r8,r3
 402268c:	003f5406 	br	40223e0 <__flash_rwdata_start+0xffff14b8>
 4022690:	1025883a 	mov	r18,r2
 4022694:	003f6d06 	br	402244c <__flash_rwdata_start+0xffff1524>
 4022698:	b827883a 	mov	r19,r23
 402269c:	003f8206 	br	40224a8 <__flash_rwdata_start+0xffff1580>
 40226a0:	010007c4 	movi	r4,31
 40226a4:	20c02616 	blt	r4,r3,4022740 <__divdf3+0x82c>
 40226a8:	00800804 	movi	r2,32
 40226ac:	10c5c83a 	sub	r2,r2,r3
 40226b0:	888a983a 	sll	r5,r17,r2
 40226b4:	40c8d83a 	srl	r4,r8,r3
 40226b8:	4084983a 	sll	r2,r8,r2
 40226bc:	88e2d83a 	srl	r17,r17,r3
 40226c0:	2906b03a 	or	r3,r5,r4
 40226c4:	1004c03a 	cmpne	r2,r2,zero
 40226c8:	1886b03a 	or	r3,r3,r2
 40226cc:	188001cc 	andi	r2,r3,7
 40226d0:	10000726 	beq	r2,zero,40226f0 <__divdf3+0x7dc>
 40226d4:	188003cc 	andi	r2,r3,15
 40226d8:	01000104 	movi	r4,4
 40226dc:	11000426 	beq	r2,r4,40226f0 <__divdf3+0x7dc>
 40226e0:	1805883a 	mov	r2,r3
 40226e4:	10c00104 	addi	r3,r2,4
 40226e8:	1885803a 	cmpltu	r2,r3,r2
 40226ec:	88a3883a 	add	r17,r17,r2
 40226f0:	8880202c 	andhi	r2,r17,128
 40226f4:	10002726 	beq	r2,zero,4022794 <__divdf3+0x880>
 40226f8:	98c0004c 	andi	r3,r19,1
 40226fc:	00800044 	movi	r2,1
 4022700:	000b883a 	mov	r5,zero
 4022704:	0025883a 	mov	r18,zero
 4022708:	003e6106 	br	4022090 <__flash_rwdata_start+0xffff1168>
 402270c:	85a1883a 	add	r16,r16,r22
 4022710:	8585803a 	cmpltu	r2,r16,r22
 4022714:	1705883a 	add	r2,r2,fp
 4022718:	14a5883a 	add	r18,r2,r18
 402271c:	8c7fff84 	addi	r17,r17,-2
 4022720:	003f1106 	br	4022368 <__flash_rwdata_start+0xffff1440>
 4022724:	b589883a 	add	r4,r22,r22
 4022728:	25ad803a 	cmpltu	r22,r4,r22
 402272c:	b739883a 	add	fp,r22,fp
 4022730:	40bfff84 	addi	r2,r8,-2
 4022734:	bf2f883a 	add	r23,r23,fp
 4022738:	202d883a 	mov	r22,r4
 402273c:	003f9306 	br	402258c <__flash_rwdata_start+0xffff1664>
 4022740:	013ff844 	movi	r4,-31
 4022744:	2085c83a 	sub	r2,r4,r2
 4022748:	8888d83a 	srl	r4,r17,r2
 402274c:	00800804 	movi	r2,32
 4022750:	18802126 	beq	r3,r2,40227d8 <__divdf3+0x8c4>
 4022754:	00801004 	movi	r2,64
 4022758:	10c5c83a 	sub	r2,r2,r3
 402275c:	8884983a 	sll	r2,r17,r2
 4022760:	1204b03a 	or	r2,r2,r8
 4022764:	1004c03a 	cmpne	r2,r2,zero
 4022768:	2084b03a 	or	r2,r4,r2
 402276c:	144001cc 	andi	r17,r2,7
 4022770:	88000d1e 	bne	r17,zero,40227a8 <__divdf3+0x894>
 4022774:	000b883a 	mov	r5,zero
 4022778:	1024d0fa 	srli	r18,r2,3
 402277c:	98c0004c 	andi	r3,r19,1
 4022780:	0005883a 	mov	r2,zero
 4022784:	9464b03a 	or	r18,r18,r17
 4022788:	003e4106 	br	4022090 <__flash_rwdata_start+0xffff1168>
 402278c:	1007883a 	mov	r3,r2
 4022790:	0023883a 	mov	r17,zero
 4022794:	880a927a 	slli	r5,r17,9
 4022798:	1805883a 	mov	r2,r3
 402279c:	8822977a 	slli	r17,r17,29
 40227a0:	280ad33a 	srli	r5,r5,12
 40227a4:	003ff406 	br	4022778 <__flash_rwdata_start+0xffff1850>
 40227a8:	10c003cc 	andi	r3,r2,15
 40227ac:	01000104 	movi	r4,4
 40227b0:	193ff626 	beq	r3,r4,402278c <__flash_rwdata_start+0xffff1864>
 40227b4:	0023883a 	mov	r17,zero
 40227b8:	003fca06 	br	40226e4 <__flash_rwdata_start+0xffff17bc>
 40227bc:	813fd336 	bltu	r16,r4,402270c <__flash_rwdata_start+0xffff17e4>
 40227c0:	1023883a 	mov	r17,r2
 40227c4:	003fa806 	br	4022668 <__flash_rwdata_start+0xffff1740>
 40227c8:	b0ffd636 	bltu	r22,r3,4022724 <__flash_rwdata_start+0xffff17fc>
 40227cc:	1011883a 	mov	r8,r2
 40227d0:	b0ff341e 	bne	r22,r3,40224a4 <__flash_rwdata_start+0xffff157c>
 40227d4:	003f3406 	br	40224a8 <__flash_rwdata_start+0xffff1580>
 40227d8:	0005883a 	mov	r2,zero
 40227dc:	003fe006 	br	4022760 <__flash_rwdata_start+0xffff1838>
 40227e0:	00800434 	movhi	r2,16
 40227e4:	89400234 	orhi	r5,r17,8
 40227e8:	10bfffc4 	addi	r2,r2,-1
 40227ec:	b807883a 	mov	r3,r23
 40227f0:	288a703a 	and	r5,r5,r2
 40227f4:	4025883a 	mov	r18,r8
 40227f8:	003e8206 	br	4022204 <__flash_rwdata_start+0xffff12dc>

040227fc <__eqdf2>:
 40227fc:	2804d53a 	srli	r2,r5,20
 4022800:	3806d53a 	srli	r3,r7,20
 4022804:	02000434 	movhi	r8,16
 4022808:	423fffc4 	addi	r8,r8,-1
 402280c:	1081ffcc 	andi	r2,r2,2047
 4022810:	0281ffc4 	movi	r10,2047
 4022814:	2a12703a 	and	r9,r5,r8
 4022818:	18c1ffcc 	andi	r3,r3,2047
 402281c:	3a10703a 	and	r8,r7,r8
 4022820:	280ad7fa 	srli	r5,r5,31
 4022824:	380ed7fa 	srli	r7,r7,31
 4022828:	12801026 	beq	r2,r10,402286c <__eqdf2+0x70>
 402282c:	0281ffc4 	movi	r10,2047
 4022830:	1a800a26 	beq	r3,r10,402285c <__eqdf2+0x60>
 4022834:	10c00226 	beq	r2,r3,4022840 <__eqdf2+0x44>
 4022838:	00800044 	movi	r2,1
 402283c:	f800283a 	ret
 4022840:	4a3ffd1e 	bne	r9,r8,4022838 <__flash_rwdata_start+0xffff1910>
 4022844:	21bffc1e 	bne	r4,r6,4022838 <__flash_rwdata_start+0xffff1910>
 4022848:	29c00c26 	beq	r5,r7,402287c <__eqdf2+0x80>
 402284c:	103ffa1e 	bne	r2,zero,4022838 <__flash_rwdata_start+0xffff1910>
 4022850:	2244b03a 	or	r2,r4,r9
 4022854:	1004c03a 	cmpne	r2,r2,zero
 4022858:	f800283a 	ret
 402285c:	3214b03a 	or	r10,r6,r8
 4022860:	503ff426 	beq	r10,zero,4022834 <__flash_rwdata_start+0xffff190c>
 4022864:	00800044 	movi	r2,1
 4022868:	f800283a 	ret
 402286c:	2254b03a 	or	r10,r4,r9
 4022870:	503fee26 	beq	r10,zero,402282c <__flash_rwdata_start+0xffff1904>
 4022874:	00800044 	movi	r2,1
 4022878:	f800283a 	ret
 402287c:	0005883a 	mov	r2,zero
 4022880:	f800283a 	ret

04022884 <__gedf2>:
 4022884:	2804d53a 	srli	r2,r5,20
 4022888:	3806d53a 	srli	r3,r7,20
 402288c:	02000434 	movhi	r8,16
 4022890:	423fffc4 	addi	r8,r8,-1
 4022894:	1081ffcc 	andi	r2,r2,2047
 4022898:	0241ffc4 	movi	r9,2047
 402289c:	2a14703a 	and	r10,r5,r8
 40228a0:	18c1ffcc 	andi	r3,r3,2047
 40228a4:	3a10703a 	and	r8,r7,r8
 40228a8:	280ad7fa 	srli	r5,r5,31
 40228ac:	380ed7fa 	srli	r7,r7,31
 40228b0:	12401d26 	beq	r2,r9,4022928 <__gedf2+0xa4>
 40228b4:	0241ffc4 	movi	r9,2047
 40228b8:	1a401226 	beq	r3,r9,4022904 <__gedf2+0x80>
 40228bc:	1000081e 	bne	r2,zero,40228e0 <__gedf2+0x5c>
 40228c0:	2296b03a 	or	r11,r4,r10
 40228c4:	5813003a 	cmpeq	r9,r11,zero
 40228c8:	1800091e 	bne	r3,zero,40228f0 <__gedf2+0x6c>
 40228cc:	3218b03a 	or	r12,r6,r8
 40228d0:	6000071e 	bne	r12,zero,40228f0 <__gedf2+0x6c>
 40228d4:	0005883a 	mov	r2,zero
 40228d8:	5800101e 	bne	r11,zero,402291c <__gedf2+0x98>
 40228dc:	f800283a 	ret
 40228e0:	18000c1e 	bne	r3,zero,4022914 <__gedf2+0x90>
 40228e4:	3212b03a 	or	r9,r6,r8
 40228e8:	48000c26 	beq	r9,zero,402291c <__gedf2+0x98>
 40228ec:	0013883a 	mov	r9,zero
 40228f0:	39c03fcc 	andi	r7,r7,255
 40228f4:	48000826 	beq	r9,zero,4022918 <__gedf2+0x94>
 40228f8:	38000926 	beq	r7,zero,4022920 <__gedf2+0x9c>
 40228fc:	00800044 	movi	r2,1
 4022900:	f800283a 	ret
 4022904:	3212b03a 	or	r9,r6,r8
 4022908:	483fec26 	beq	r9,zero,40228bc <__flash_rwdata_start+0xffff1994>
 402290c:	00bfff84 	movi	r2,-2
 4022910:	f800283a 	ret
 4022914:	39c03fcc 	andi	r7,r7,255
 4022918:	29c00626 	beq	r5,r7,4022934 <__gedf2+0xb0>
 402291c:	283ff726 	beq	r5,zero,40228fc <__flash_rwdata_start+0xffff19d4>
 4022920:	00bfffc4 	movi	r2,-1
 4022924:	f800283a 	ret
 4022928:	2292b03a 	or	r9,r4,r10
 402292c:	483fe126 	beq	r9,zero,40228b4 <__flash_rwdata_start+0xffff198c>
 4022930:	003ff606 	br	402290c <__flash_rwdata_start+0xffff19e4>
 4022934:	18bff916 	blt	r3,r2,402291c <__flash_rwdata_start+0xffff19f4>
 4022938:	10c00316 	blt	r2,r3,4022948 <__gedf2+0xc4>
 402293c:	42bff736 	bltu	r8,r10,402291c <__flash_rwdata_start+0xffff19f4>
 4022940:	52000326 	beq	r10,r8,4022950 <__gedf2+0xcc>
 4022944:	5200042e 	bgeu	r10,r8,4022958 <__gedf2+0xd4>
 4022948:	283fec1e 	bne	r5,zero,40228fc <__flash_rwdata_start+0xffff19d4>
 402294c:	003ff406 	br	4022920 <__flash_rwdata_start+0xffff19f8>
 4022950:	313ff236 	bltu	r6,r4,402291c <__flash_rwdata_start+0xffff19f4>
 4022954:	21bffc36 	bltu	r4,r6,4022948 <__flash_rwdata_start+0xffff1a20>
 4022958:	0005883a 	mov	r2,zero
 402295c:	f800283a 	ret

04022960 <__ledf2>:
 4022960:	2804d53a 	srli	r2,r5,20
 4022964:	3810d53a 	srli	r8,r7,20
 4022968:	00c00434 	movhi	r3,16
 402296c:	18ffffc4 	addi	r3,r3,-1
 4022970:	1081ffcc 	andi	r2,r2,2047
 4022974:	0241ffc4 	movi	r9,2047
 4022978:	28d4703a 	and	r10,r5,r3
 402297c:	4201ffcc 	andi	r8,r8,2047
 4022980:	38c6703a 	and	r3,r7,r3
 4022984:	280ad7fa 	srli	r5,r5,31
 4022988:	380ed7fa 	srli	r7,r7,31
 402298c:	12401f26 	beq	r2,r9,4022a0c <__ledf2+0xac>
 4022990:	0241ffc4 	movi	r9,2047
 4022994:	42401426 	beq	r8,r9,40229e8 <__ledf2+0x88>
 4022998:	1000091e 	bne	r2,zero,40229c0 <__ledf2+0x60>
 402299c:	2296b03a 	or	r11,r4,r10
 40229a0:	5813003a 	cmpeq	r9,r11,zero
 40229a4:	29403fcc 	andi	r5,r5,255
 40229a8:	40000a1e 	bne	r8,zero,40229d4 <__ledf2+0x74>
 40229ac:	30d8b03a 	or	r12,r6,r3
 40229b0:	6000081e 	bne	r12,zero,40229d4 <__ledf2+0x74>
 40229b4:	0005883a 	mov	r2,zero
 40229b8:	5800111e 	bne	r11,zero,4022a00 <__ledf2+0xa0>
 40229bc:	f800283a 	ret
 40229c0:	29403fcc 	andi	r5,r5,255
 40229c4:	40000c1e 	bne	r8,zero,40229f8 <__ledf2+0x98>
 40229c8:	30d2b03a 	or	r9,r6,r3
 40229cc:	48000c26 	beq	r9,zero,4022a00 <__ledf2+0xa0>
 40229d0:	0013883a 	mov	r9,zero
 40229d4:	39c03fcc 	andi	r7,r7,255
 40229d8:	48000826 	beq	r9,zero,40229fc <__ledf2+0x9c>
 40229dc:	38001126 	beq	r7,zero,4022a24 <__ledf2+0xc4>
 40229e0:	00800044 	movi	r2,1
 40229e4:	f800283a 	ret
 40229e8:	30d2b03a 	or	r9,r6,r3
 40229ec:	483fea26 	beq	r9,zero,4022998 <__flash_rwdata_start+0xffff1a70>
 40229f0:	00800084 	movi	r2,2
 40229f4:	f800283a 	ret
 40229f8:	39c03fcc 	andi	r7,r7,255
 40229fc:	39400726 	beq	r7,r5,4022a1c <__ledf2+0xbc>
 4022a00:	2800081e 	bne	r5,zero,4022a24 <__ledf2+0xc4>
 4022a04:	00800044 	movi	r2,1
 4022a08:	f800283a 	ret
 4022a0c:	2292b03a 	or	r9,r4,r10
 4022a10:	483fdf26 	beq	r9,zero,4022990 <__flash_rwdata_start+0xffff1a68>
 4022a14:	00800084 	movi	r2,2
 4022a18:	f800283a 	ret
 4022a1c:	4080030e 	bge	r8,r2,4022a2c <__ledf2+0xcc>
 4022a20:	383fef26 	beq	r7,zero,40229e0 <__flash_rwdata_start+0xffff1ab8>
 4022a24:	00bfffc4 	movi	r2,-1
 4022a28:	f800283a 	ret
 4022a2c:	123feb16 	blt	r2,r8,40229dc <__flash_rwdata_start+0xffff1ab4>
 4022a30:	1abff336 	bltu	r3,r10,4022a00 <__flash_rwdata_start+0xffff1ad8>
 4022a34:	50c00326 	beq	r10,r3,4022a44 <__ledf2+0xe4>
 4022a38:	50c0042e 	bgeu	r10,r3,4022a4c <__ledf2+0xec>
 4022a3c:	283fe81e 	bne	r5,zero,40229e0 <__flash_rwdata_start+0xffff1ab8>
 4022a40:	003ff806 	br	4022a24 <__flash_rwdata_start+0xffff1afc>
 4022a44:	313fee36 	bltu	r6,r4,4022a00 <__flash_rwdata_start+0xffff1ad8>
 4022a48:	21bffc36 	bltu	r4,r6,4022a3c <__flash_rwdata_start+0xffff1b14>
 4022a4c:	0005883a 	mov	r2,zero
 4022a50:	f800283a 	ret

04022a54 <__muldf3>:
 4022a54:	defff304 	addi	sp,sp,-52
 4022a58:	2804d53a 	srli	r2,r5,20
 4022a5c:	dd800915 	stw	r22,36(sp)
 4022a60:	282cd7fa 	srli	r22,r5,31
 4022a64:	dc000315 	stw	r16,12(sp)
 4022a68:	04000434 	movhi	r16,16
 4022a6c:	dd400815 	stw	r21,32(sp)
 4022a70:	dc800515 	stw	r18,20(sp)
 4022a74:	843fffc4 	addi	r16,r16,-1
 4022a78:	dfc00c15 	stw	ra,48(sp)
 4022a7c:	df000b15 	stw	fp,44(sp)
 4022a80:	ddc00a15 	stw	r23,40(sp)
 4022a84:	dd000715 	stw	r20,28(sp)
 4022a88:	dcc00615 	stw	r19,24(sp)
 4022a8c:	dc400415 	stw	r17,16(sp)
 4022a90:	1481ffcc 	andi	r18,r2,2047
 4022a94:	2c20703a 	and	r16,r5,r16
 4022a98:	b02b883a 	mov	r21,r22
 4022a9c:	b2403fcc 	andi	r9,r22,255
 4022aa0:	90006026 	beq	r18,zero,4022c24 <__muldf3+0x1d0>
 4022aa4:	0081ffc4 	movi	r2,2047
 4022aa8:	2029883a 	mov	r20,r4
 4022aac:	90803626 	beq	r18,r2,4022b88 <__muldf3+0x134>
 4022ab0:	80800434 	orhi	r2,r16,16
 4022ab4:	100490fa 	slli	r2,r2,3
 4022ab8:	2020d77a 	srli	r16,r4,29
 4022abc:	202890fa 	slli	r20,r4,3
 4022ac0:	94bf0044 	addi	r18,r18,-1023
 4022ac4:	80a0b03a 	or	r16,r16,r2
 4022ac8:	0027883a 	mov	r19,zero
 4022acc:	0039883a 	mov	fp,zero
 4022ad0:	3804d53a 	srli	r2,r7,20
 4022ad4:	382ed7fa 	srli	r23,r7,31
 4022ad8:	04400434 	movhi	r17,16
 4022adc:	8c7fffc4 	addi	r17,r17,-1
 4022ae0:	1081ffcc 	andi	r2,r2,2047
 4022ae4:	3011883a 	mov	r8,r6
 4022ae8:	3c62703a 	and	r17,r7,r17
 4022aec:	ba803fcc 	andi	r10,r23,255
 4022af0:	10006d26 	beq	r2,zero,4022ca8 <__muldf3+0x254>
 4022af4:	00c1ffc4 	movi	r3,2047
 4022af8:	10c06526 	beq	r2,r3,4022c90 <__muldf3+0x23c>
 4022afc:	88c00434 	orhi	r3,r17,16
 4022b00:	180690fa 	slli	r3,r3,3
 4022b04:	3022d77a 	srli	r17,r6,29
 4022b08:	301090fa 	slli	r8,r6,3
 4022b0c:	10bf0044 	addi	r2,r2,-1023
 4022b10:	88e2b03a 	or	r17,r17,r3
 4022b14:	000b883a 	mov	r5,zero
 4022b18:	9085883a 	add	r2,r18,r2
 4022b1c:	2cc8b03a 	or	r4,r5,r19
 4022b20:	00c003c4 	movi	r3,15
 4022b24:	bdacf03a 	xor	r22,r23,r22
 4022b28:	12c00044 	addi	r11,r2,1
 4022b2c:	19009936 	bltu	r3,r4,4022d94 <__muldf3+0x340>
 4022b30:	200890ba 	slli	r4,r4,2
 4022b34:	00c100b4 	movhi	r3,1026
 4022b38:	18cad204 	addi	r3,r3,11080
 4022b3c:	20c9883a 	add	r4,r4,r3
 4022b40:	20c00017 	ldw	r3,0(r4)
 4022b44:	1800683a 	jmp	r3
 4022b48:	04022d94 	movui	r16,2230
 4022b4c:	04022ba8 	cmpgeui	r16,zero,2222
 4022b50:	04022ba8 	cmpgeui	r16,zero,2222
 4022b54:	04022ba4 	muli	r16,zero,2222
 4022b58:	04022d70 	cmpltui	r16,zero,2229
 4022b5c:	04022d70 	cmpltui	r16,zero,2229
 4022b60:	04022d58 	cmpnei	r16,zero,2229
 4022b64:	04022ba4 	muli	r16,zero,2222
 4022b68:	04022d70 	cmpltui	r16,zero,2229
 4022b6c:	04022d58 	cmpnei	r16,zero,2229
 4022b70:	04022d70 	cmpltui	r16,zero,2229
 4022b74:	04022ba4 	muli	r16,zero,2222
 4022b78:	04022d80 	call	4022d8 <_gp+0x3f84a4>
 4022b7c:	04022d80 	call	4022d8 <_gp+0x3f84a4>
 4022b80:	04022d80 	call	4022d8 <_gp+0x3f84a4>
 4022b84:	04022f9c 	xori	r16,zero,2238
 4022b88:	2404b03a 	or	r2,r4,r16
 4022b8c:	10006f1e 	bne	r2,zero,4022d4c <__muldf3+0x2f8>
 4022b90:	04c00204 	movi	r19,8
 4022b94:	0021883a 	mov	r16,zero
 4022b98:	0029883a 	mov	r20,zero
 4022b9c:	07000084 	movi	fp,2
 4022ba0:	003fcb06 	br	4022ad0 <__flash_rwdata_start+0xffff1ba8>
 4022ba4:	502d883a 	mov	r22,r10
 4022ba8:	00800084 	movi	r2,2
 4022bac:	28805726 	beq	r5,r2,4022d0c <__muldf3+0x2b8>
 4022bb0:	008000c4 	movi	r2,3
 4022bb4:	28816626 	beq	r5,r2,4023150 <__muldf3+0x6fc>
 4022bb8:	00800044 	movi	r2,1
 4022bbc:	2881411e 	bne	r5,r2,40230c4 <__muldf3+0x670>
 4022bc0:	b02b883a 	mov	r21,r22
 4022bc4:	0005883a 	mov	r2,zero
 4022bc8:	000b883a 	mov	r5,zero
 4022bcc:	0029883a 	mov	r20,zero
 4022bd0:	1004953a 	slli	r2,r2,20
 4022bd4:	a8c03fcc 	andi	r3,r21,255
 4022bd8:	04400434 	movhi	r17,16
 4022bdc:	8c7fffc4 	addi	r17,r17,-1
 4022be0:	180697fa 	slli	r3,r3,31
 4022be4:	2c4a703a 	and	r5,r5,r17
 4022be8:	288ab03a 	or	r5,r5,r2
 4022bec:	28c6b03a 	or	r3,r5,r3
 4022bf0:	a005883a 	mov	r2,r20
 4022bf4:	dfc00c17 	ldw	ra,48(sp)
 4022bf8:	df000b17 	ldw	fp,44(sp)
 4022bfc:	ddc00a17 	ldw	r23,40(sp)
 4022c00:	dd800917 	ldw	r22,36(sp)
 4022c04:	dd400817 	ldw	r21,32(sp)
 4022c08:	dd000717 	ldw	r20,28(sp)
 4022c0c:	dcc00617 	ldw	r19,24(sp)
 4022c10:	dc800517 	ldw	r18,20(sp)
 4022c14:	dc400417 	ldw	r17,16(sp)
 4022c18:	dc000317 	ldw	r16,12(sp)
 4022c1c:	dec00d04 	addi	sp,sp,52
 4022c20:	f800283a 	ret
 4022c24:	2404b03a 	or	r2,r4,r16
 4022c28:	2027883a 	mov	r19,r4
 4022c2c:	10004226 	beq	r2,zero,4022d38 <__muldf3+0x2e4>
 4022c30:	8000fc26 	beq	r16,zero,4023024 <__muldf3+0x5d0>
 4022c34:	8009883a 	mov	r4,r16
 4022c38:	d9800215 	stw	r6,8(sp)
 4022c3c:	d9c00015 	stw	r7,0(sp)
 4022c40:	da400115 	stw	r9,4(sp)
 4022c44:	4023bc40 	call	4023bc4 <__clzsi2>
 4022c48:	d9800217 	ldw	r6,8(sp)
 4022c4c:	d9c00017 	ldw	r7,0(sp)
 4022c50:	da400117 	ldw	r9,4(sp)
 4022c54:	113ffd44 	addi	r4,r2,-11
 4022c58:	00c00704 	movi	r3,28
 4022c5c:	1900ed16 	blt	r3,r4,4023014 <__muldf3+0x5c0>
 4022c60:	00c00744 	movi	r3,29
 4022c64:	147ffe04 	addi	r17,r2,-8
 4022c68:	1907c83a 	sub	r3,r3,r4
 4022c6c:	8460983a 	sll	r16,r16,r17
 4022c70:	98c6d83a 	srl	r3,r19,r3
 4022c74:	9c68983a 	sll	r20,r19,r17
 4022c78:	1c20b03a 	or	r16,r3,r16
 4022c7c:	1080fcc4 	addi	r2,r2,1011
 4022c80:	00a5c83a 	sub	r18,zero,r2
 4022c84:	0027883a 	mov	r19,zero
 4022c88:	0039883a 	mov	fp,zero
 4022c8c:	003f9006 	br	4022ad0 <__flash_rwdata_start+0xffff1ba8>
 4022c90:	3446b03a 	or	r3,r6,r17
 4022c94:	1800261e 	bne	r3,zero,4022d30 <__muldf3+0x2dc>
 4022c98:	0023883a 	mov	r17,zero
 4022c9c:	0011883a 	mov	r8,zero
 4022ca0:	01400084 	movi	r5,2
 4022ca4:	003f9c06 	br	4022b18 <__flash_rwdata_start+0xffff1bf0>
 4022ca8:	3446b03a 	or	r3,r6,r17
 4022cac:	18001c26 	beq	r3,zero,4022d20 <__muldf3+0x2cc>
 4022cb0:	8800ce26 	beq	r17,zero,4022fec <__muldf3+0x598>
 4022cb4:	8809883a 	mov	r4,r17
 4022cb8:	d9800215 	stw	r6,8(sp)
 4022cbc:	da400115 	stw	r9,4(sp)
 4022cc0:	da800015 	stw	r10,0(sp)
 4022cc4:	4023bc40 	call	4023bc4 <__clzsi2>
 4022cc8:	d9800217 	ldw	r6,8(sp)
 4022ccc:	da400117 	ldw	r9,4(sp)
 4022cd0:	da800017 	ldw	r10,0(sp)
 4022cd4:	113ffd44 	addi	r4,r2,-11
 4022cd8:	00c00704 	movi	r3,28
 4022cdc:	1900bf16 	blt	r3,r4,4022fdc <__muldf3+0x588>
 4022ce0:	00c00744 	movi	r3,29
 4022ce4:	123ffe04 	addi	r8,r2,-8
 4022ce8:	1907c83a 	sub	r3,r3,r4
 4022cec:	8a22983a 	sll	r17,r17,r8
 4022cf0:	30c6d83a 	srl	r3,r6,r3
 4022cf4:	3210983a 	sll	r8,r6,r8
 4022cf8:	1c62b03a 	or	r17,r3,r17
 4022cfc:	1080fcc4 	addi	r2,r2,1011
 4022d00:	0085c83a 	sub	r2,zero,r2
 4022d04:	000b883a 	mov	r5,zero
 4022d08:	003f8306 	br	4022b18 <__flash_rwdata_start+0xffff1bf0>
 4022d0c:	b02b883a 	mov	r21,r22
 4022d10:	0081ffc4 	movi	r2,2047
 4022d14:	000b883a 	mov	r5,zero
 4022d18:	0029883a 	mov	r20,zero
 4022d1c:	003fac06 	br	4022bd0 <__flash_rwdata_start+0xffff1ca8>
 4022d20:	0023883a 	mov	r17,zero
 4022d24:	0011883a 	mov	r8,zero
 4022d28:	01400044 	movi	r5,1
 4022d2c:	003f7a06 	br	4022b18 <__flash_rwdata_start+0xffff1bf0>
 4022d30:	014000c4 	movi	r5,3
 4022d34:	003f7806 	br	4022b18 <__flash_rwdata_start+0xffff1bf0>
 4022d38:	04c00104 	movi	r19,4
 4022d3c:	0021883a 	mov	r16,zero
 4022d40:	0029883a 	mov	r20,zero
 4022d44:	07000044 	movi	fp,1
 4022d48:	003f6106 	br	4022ad0 <__flash_rwdata_start+0xffff1ba8>
 4022d4c:	04c00304 	movi	r19,12
 4022d50:	070000c4 	movi	fp,3
 4022d54:	003f5e06 	br	4022ad0 <__flash_rwdata_start+0xffff1ba8>
 4022d58:	01400434 	movhi	r5,16
 4022d5c:	002b883a 	mov	r21,zero
 4022d60:	297fffc4 	addi	r5,r5,-1
 4022d64:	053fffc4 	movi	r20,-1
 4022d68:	0081ffc4 	movi	r2,2047
 4022d6c:	003f9806 	br	4022bd0 <__flash_rwdata_start+0xffff1ca8>
 4022d70:	8023883a 	mov	r17,r16
 4022d74:	a011883a 	mov	r8,r20
 4022d78:	e00b883a 	mov	r5,fp
 4022d7c:	003f8a06 	br	4022ba8 <__flash_rwdata_start+0xffff1c80>
 4022d80:	8023883a 	mov	r17,r16
 4022d84:	a011883a 	mov	r8,r20
 4022d88:	482d883a 	mov	r22,r9
 4022d8c:	e00b883a 	mov	r5,fp
 4022d90:	003f8506 	br	4022ba8 <__flash_rwdata_start+0xffff1c80>
 4022d94:	a00ad43a 	srli	r5,r20,16
 4022d98:	401ad43a 	srli	r13,r8,16
 4022d9c:	a53fffcc 	andi	r20,r20,65535
 4022da0:	423fffcc 	andi	r8,r8,65535
 4022da4:	4519383a 	mul	r12,r8,r20
 4022da8:	4147383a 	mul	r3,r8,r5
 4022dac:	6d09383a 	mul	r4,r13,r20
 4022db0:	600cd43a 	srli	r6,r12,16
 4022db4:	2b5d383a 	mul	r14,r5,r13
 4022db8:	20c9883a 	add	r4,r4,r3
 4022dbc:	310d883a 	add	r6,r6,r4
 4022dc0:	30c0022e 	bgeu	r6,r3,4022dcc <__muldf3+0x378>
 4022dc4:	00c00074 	movhi	r3,1
 4022dc8:	70dd883a 	add	r14,r14,r3
 4022dcc:	8826d43a 	srli	r19,r17,16
 4022dd0:	8bffffcc 	andi	r15,r17,65535
 4022dd4:	7d23383a 	mul	r17,r15,r20
 4022dd8:	7949383a 	mul	r4,r15,r5
 4022ddc:	9d29383a 	mul	r20,r19,r20
 4022de0:	8814d43a 	srli	r10,r17,16
 4022de4:	3012943a 	slli	r9,r6,16
 4022de8:	a129883a 	add	r20,r20,r4
 4022dec:	633fffcc 	andi	r12,r12,65535
 4022df0:	5515883a 	add	r10,r10,r20
 4022df4:	3006d43a 	srli	r3,r6,16
 4022df8:	4b13883a 	add	r9,r9,r12
 4022dfc:	2ccb383a 	mul	r5,r5,r19
 4022e00:	5100022e 	bgeu	r10,r4,4022e0c <__muldf3+0x3b8>
 4022e04:	01000074 	movhi	r4,1
 4022e08:	290b883a 	add	r5,r5,r4
 4022e0c:	802ad43a 	srli	r21,r16,16
 4022e10:	843fffcc 	andi	r16,r16,65535
 4022e14:	440d383a 	mul	r6,r8,r16
 4022e18:	4565383a 	mul	r18,r8,r21
 4022e1c:	8349383a 	mul	r4,r16,r13
 4022e20:	500e943a 	slli	r7,r10,16
 4022e24:	3010d43a 	srli	r8,r6,16
 4022e28:	5028d43a 	srli	r20,r10,16
 4022e2c:	2489883a 	add	r4,r4,r18
 4022e30:	8abfffcc 	andi	r10,r17,65535
 4022e34:	3a95883a 	add	r10,r7,r10
 4022e38:	4119883a 	add	r12,r8,r4
 4022e3c:	a169883a 	add	r20,r20,r5
 4022e40:	1a87883a 	add	r3,r3,r10
 4022e44:	6d5b383a 	mul	r13,r13,r21
 4022e48:	6480022e 	bgeu	r12,r18,4022e54 <__muldf3+0x400>
 4022e4c:	01000074 	movhi	r4,1
 4022e50:	691b883a 	add	r13,r13,r4
 4022e54:	7c25383a 	mul	r18,r15,r16
 4022e58:	7d4b383a 	mul	r5,r15,r21
 4022e5c:	84cf383a 	mul	r7,r16,r19
 4022e60:	901ed43a 	srli	r15,r18,16
 4022e64:	6008d43a 	srli	r4,r12,16
 4022e68:	6010943a 	slli	r8,r12,16
 4022e6c:	394f883a 	add	r7,r7,r5
 4022e70:	333fffcc 	andi	r12,r6,65535
 4022e74:	79df883a 	add	r15,r15,r7
 4022e78:	235b883a 	add	r13,r4,r13
 4022e7c:	9d63383a 	mul	r17,r19,r21
 4022e80:	4309883a 	add	r4,r8,r12
 4022e84:	7940022e 	bgeu	r15,r5,4022e90 <__muldf3+0x43c>
 4022e88:	01400074 	movhi	r5,1
 4022e8c:	8963883a 	add	r17,r17,r5
 4022e90:	780a943a 	slli	r5,r15,16
 4022e94:	91bfffcc 	andi	r6,r18,65535
 4022e98:	70c7883a 	add	r3,r14,r3
 4022e9c:	298d883a 	add	r6,r5,r6
 4022ea0:	1a8f803a 	cmpltu	r7,r3,r10
 4022ea4:	350b883a 	add	r5,r6,r20
 4022ea8:	20c7883a 	add	r3,r4,r3
 4022eac:	3955883a 	add	r10,r7,r5
 4022eb0:	1909803a 	cmpltu	r4,r3,r4
 4022eb4:	6a91883a 	add	r8,r13,r10
 4022eb8:	780cd43a 	srli	r6,r15,16
 4022ebc:	2219883a 	add	r12,r4,r8
 4022ec0:	2d0b803a 	cmpltu	r5,r5,r20
 4022ec4:	51cf803a 	cmpltu	r7,r10,r7
 4022ec8:	29ceb03a 	or	r7,r5,r7
 4022ecc:	4351803a 	cmpltu	r8,r8,r13
 4022ed0:	610b803a 	cmpltu	r5,r12,r4
 4022ed4:	4148b03a 	or	r4,r8,r5
 4022ed8:	398f883a 	add	r7,r7,r6
 4022edc:	3909883a 	add	r4,r7,r4
 4022ee0:	1810927a 	slli	r8,r3,9
 4022ee4:	2449883a 	add	r4,r4,r17
 4022ee8:	2008927a 	slli	r4,r4,9
 4022eec:	6022d5fa 	srli	r17,r12,23
 4022ef0:	1806d5fa 	srli	r3,r3,23
 4022ef4:	4252b03a 	or	r9,r8,r9
 4022ef8:	600a927a 	slli	r5,r12,9
 4022efc:	4810c03a 	cmpne	r8,r9,zero
 4022f00:	2462b03a 	or	r17,r4,r17
 4022f04:	40c6b03a 	or	r3,r8,r3
 4022f08:	8900402c 	andhi	r4,r17,256
 4022f0c:	1950b03a 	or	r8,r3,r5
 4022f10:	20000726 	beq	r4,zero,4022f30 <__muldf3+0x4dc>
 4022f14:	4006d07a 	srli	r3,r8,1
 4022f18:	880497fa 	slli	r2,r17,31
 4022f1c:	4200004c 	andi	r8,r8,1
 4022f20:	8822d07a 	srli	r17,r17,1
 4022f24:	1a10b03a 	or	r8,r3,r8
 4022f28:	1210b03a 	or	r8,r2,r8
 4022f2c:	5805883a 	mov	r2,r11
 4022f30:	1140ffc4 	addi	r5,r2,1023
 4022f34:	0140440e 	bge	zero,r5,4023048 <__muldf3+0x5f4>
 4022f38:	40c001cc 	andi	r3,r8,7
 4022f3c:	18000726 	beq	r3,zero,4022f5c <__muldf3+0x508>
 4022f40:	40c003cc 	andi	r3,r8,15
 4022f44:	01000104 	movi	r4,4
 4022f48:	19000426 	beq	r3,r4,4022f5c <__muldf3+0x508>
 4022f4c:	4107883a 	add	r3,r8,r4
 4022f50:	1a11803a 	cmpltu	r8,r3,r8
 4022f54:	8a23883a 	add	r17,r17,r8
 4022f58:	1811883a 	mov	r8,r3
 4022f5c:	88c0402c 	andhi	r3,r17,256
 4022f60:	18000426 	beq	r3,zero,4022f74 <__muldf3+0x520>
 4022f64:	11410004 	addi	r5,r2,1024
 4022f68:	00bfc034 	movhi	r2,65280
 4022f6c:	10bfffc4 	addi	r2,r2,-1
 4022f70:	88a2703a 	and	r17,r17,r2
 4022f74:	0081ff84 	movi	r2,2046
 4022f78:	117f6416 	blt	r2,r5,4022d0c <__flash_rwdata_start+0xffff1de4>
 4022f7c:	8828977a 	slli	r20,r17,29
 4022f80:	4010d0fa 	srli	r8,r8,3
 4022f84:	8822927a 	slli	r17,r17,9
 4022f88:	2881ffcc 	andi	r2,r5,2047
 4022f8c:	a228b03a 	or	r20,r20,r8
 4022f90:	880ad33a 	srli	r5,r17,12
 4022f94:	b02b883a 	mov	r21,r22
 4022f98:	003f0d06 	br	4022bd0 <__flash_rwdata_start+0xffff1ca8>
 4022f9c:	8080022c 	andhi	r2,r16,8
 4022fa0:	10000926 	beq	r2,zero,4022fc8 <__muldf3+0x574>
 4022fa4:	8880022c 	andhi	r2,r17,8
 4022fa8:	1000071e 	bne	r2,zero,4022fc8 <__muldf3+0x574>
 4022fac:	00800434 	movhi	r2,16
 4022fb0:	89400234 	orhi	r5,r17,8
 4022fb4:	10bfffc4 	addi	r2,r2,-1
 4022fb8:	b82b883a 	mov	r21,r23
 4022fbc:	288a703a 	and	r5,r5,r2
 4022fc0:	4029883a 	mov	r20,r8
 4022fc4:	003f6806 	br	4022d68 <__flash_rwdata_start+0xffff1e40>
 4022fc8:	00800434 	movhi	r2,16
 4022fcc:	81400234 	orhi	r5,r16,8
 4022fd0:	10bfffc4 	addi	r2,r2,-1
 4022fd4:	288a703a 	and	r5,r5,r2
 4022fd8:	003f6306 	br	4022d68 <__flash_rwdata_start+0xffff1e40>
 4022fdc:	147ff604 	addi	r17,r2,-40
 4022fe0:	3462983a 	sll	r17,r6,r17
 4022fe4:	0011883a 	mov	r8,zero
 4022fe8:	003f4406 	br	4022cfc <__flash_rwdata_start+0xffff1dd4>
 4022fec:	3009883a 	mov	r4,r6
 4022ff0:	d9800215 	stw	r6,8(sp)
 4022ff4:	da400115 	stw	r9,4(sp)
 4022ff8:	da800015 	stw	r10,0(sp)
 4022ffc:	4023bc40 	call	4023bc4 <__clzsi2>
 4023000:	10800804 	addi	r2,r2,32
 4023004:	da800017 	ldw	r10,0(sp)
 4023008:	da400117 	ldw	r9,4(sp)
 402300c:	d9800217 	ldw	r6,8(sp)
 4023010:	003f3006 	br	4022cd4 <__flash_rwdata_start+0xffff1dac>
 4023014:	143ff604 	addi	r16,r2,-40
 4023018:	9c20983a 	sll	r16,r19,r16
 402301c:	0029883a 	mov	r20,zero
 4023020:	003f1606 	br	4022c7c <__flash_rwdata_start+0xffff1d54>
 4023024:	d9800215 	stw	r6,8(sp)
 4023028:	d9c00015 	stw	r7,0(sp)
 402302c:	da400115 	stw	r9,4(sp)
 4023030:	4023bc40 	call	4023bc4 <__clzsi2>
 4023034:	10800804 	addi	r2,r2,32
 4023038:	da400117 	ldw	r9,4(sp)
 402303c:	d9c00017 	ldw	r7,0(sp)
 4023040:	d9800217 	ldw	r6,8(sp)
 4023044:	003f0306 	br	4022c54 <__flash_rwdata_start+0xffff1d2c>
 4023048:	00c00044 	movi	r3,1
 402304c:	1947c83a 	sub	r3,r3,r5
 4023050:	00800e04 	movi	r2,56
 4023054:	10feda16 	blt	r2,r3,4022bc0 <__flash_rwdata_start+0xffff1c98>
 4023058:	008007c4 	movi	r2,31
 402305c:	10c01b16 	blt	r2,r3,40230cc <__muldf3+0x678>
 4023060:	00800804 	movi	r2,32
 4023064:	10c5c83a 	sub	r2,r2,r3
 4023068:	888a983a 	sll	r5,r17,r2
 402306c:	40c8d83a 	srl	r4,r8,r3
 4023070:	4084983a 	sll	r2,r8,r2
 4023074:	88e2d83a 	srl	r17,r17,r3
 4023078:	2906b03a 	or	r3,r5,r4
 402307c:	1004c03a 	cmpne	r2,r2,zero
 4023080:	1886b03a 	or	r3,r3,r2
 4023084:	188001cc 	andi	r2,r3,7
 4023088:	10000726 	beq	r2,zero,40230a8 <__muldf3+0x654>
 402308c:	188003cc 	andi	r2,r3,15
 4023090:	01000104 	movi	r4,4
 4023094:	11000426 	beq	r2,r4,40230a8 <__muldf3+0x654>
 4023098:	1805883a 	mov	r2,r3
 402309c:	10c00104 	addi	r3,r2,4
 40230a0:	1885803a 	cmpltu	r2,r3,r2
 40230a4:	88a3883a 	add	r17,r17,r2
 40230a8:	8880202c 	andhi	r2,r17,128
 40230ac:	10001c26 	beq	r2,zero,4023120 <__muldf3+0x6cc>
 40230b0:	b02b883a 	mov	r21,r22
 40230b4:	00800044 	movi	r2,1
 40230b8:	000b883a 	mov	r5,zero
 40230bc:	0029883a 	mov	r20,zero
 40230c0:	003ec306 	br	4022bd0 <__flash_rwdata_start+0xffff1ca8>
 40230c4:	5805883a 	mov	r2,r11
 40230c8:	003f9906 	br	4022f30 <__flash_rwdata_start+0xffff2008>
 40230cc:	00bff844 	movi	r2,-31
 40230d0:	1145c83a 	sub	r2,r2,r5
 40230d4:	8888d83a 	srl	r4,r17,r2
 40230d8:	00800804 	movi	r2,32
 40230dc:	18801a26 	beq	r3,r2,4023148 <__muldf3+0x6f4>
 40230e0:	00801004 	movi	r2,64
 40230e4:	10c5c83a 	sub	r2,r2,r3
 40230e8:	8884983a 	sll	r2,r17,r2
 40230ec:	1204b03a 	or	r2,r2,r8
 40230f0:	1004c03a 	cmpne	r2,r2,zero
 40230f4:	2084b03a 	or	r2,r4,r2
 40230f8:	144001cc 	andi	r17,r2,7
 40230fc:	88000d1e 	bne	r17,zero,4023134 <__muldf3+0x6e0>
 4023100:	000b883a 	mov	r5,zero
 4023104:	1028d0fa 	srli	r20,r2,3
 4023108:	b02b883a 	mov	r21,r22
 402310c:	0005883a 	mov	r2,zero
 4023110:	a468b03a 	or	r20,r20,r17
 4023114:	003eae06 	br	4022bd0 <__flash_rwdata_start+0xffff1ca8>
 4023118:	1007883a 	mov	r3,r2
 402311c:	0023883a 	mov	r17,zero
 4023120:	880a927a 	slli	r5,r17,9
 4023124:	1805883a 	mov	r2,r3
 4023128:	8822977a 	slli	r17,r17,29
 402312c:	280ad33a 	srli	r5,r5,12
 4023130:	003ff406 	br	4023104 <__flash_rwdata_start+0xffff21dc>
 4023134:	10c003cc 	andi	r3,r2,15
 4023138:	01000104 	movi	r4,4
 402313c:	193ff626 	beq	r3,r4,4023118 <__flash_rwdata_start+0xffff21f0>
 4023140:	0023883a 	mov	r17,zero
 4023144:	003fd506 	br	402309c <__flash_rwdata_start+0xffff2174>
 4023148:	0005883a 	mov	r2,zero
 402314c:	003fe706 	br	40230ec <__flash_rwdata_start+0xffff21c4>
 4023150:	00800434 	movhi	r2,16
 4023154:	89400234 	orhi	r5,r17,8
 4023158:	10bfffc4 	addi	r2,r2,-1
 402315c:	b02b883a 	mov	r21,r22
 4023160:	288a703a 	and	r5,r5,r2
 4023164:	4029883a 	mov	r20,r8
 4023168:	003eff06 	br	4022d68 <__flash_rwdata_start+0xffff1e40>

0402316c <__subdf3>:
 402316c:	02000434 	movhi	r8,16
 4023170:	423fffc4 	addi	r8,r8,-1
 4023174:	defffb04 	addi	sp,sp,-20
 4023178:	2a14703a 	and	r10,r5,r8
 402317c:	3812d53a 	srli	r9,r7,20
 4023180:	3a10703a 	and	r8,r7,r8
 4023184:	2006d77a 	srli	r3,r4,29
 4023188:	3004d77a 	srli	r2,r6,29
 402318c:	dc000015 	stw	r16,0(sp)
 4023190:	501490fa 	slli	r10,r10,3
 4023194:	2820d53a 	srli	r16,r5,20
 4023198:	401090fa 	slli	r8,r8,3
 402319c:	dc800215 	stw	r18,8(sp)
 40231a0:	dc400115 	stw	r17,4(sp)
 40231a4:	dfc00415 	stw	ra,16(sp)
 40231a8:	202290fa 	slli	r17,r4,3
 40231ac:	dcc00315 	stw	r19,12(sp)
 40231b0:	4a41ffcc 	andi	r9,r9,2047
 40231b4:	0101ffc4 	movi	r4,2047
 40231b8:	2824d7fa 	srli	r18,r5,31
 40231bc:	8401ffcc 	andi	r16,r16,2047
 40231c0:	50c6b03a 	or	r3,r10,r3
 40231c4:	380ed7fa 	srli	r7,r7,31
 40231c8:	408ab03a 	or	r5,r8,r2
 40231cc:	300c90fa 	slli	r6,r6,3
 40231d0:	49009626 	beq	r9,r4,402342c <__subdf3+0x2c0>
 40231d4:	39c0005c 	xori	r7,r7,1
 40231d8:	8245c83a 	sub	r2,r16,r9
 40231dc:	3c807426 	beq	r7,r18,40233b0 <__subdf3+0x244>
 40231e0:	0080af0e 	bge	zero,r2,40234a0 <__subdf3+0x334>
 40231e4:	48002a1e 	bne	r9,zero,4023290 <__subdf3+0x124>
 40231e8:	2988b03a 	or	r4,r5,r6
 40231ec:	20009a1e 	bne	r4,zero,4023458 <__subdf3+0x2ec>
 40231f0:	888001cc 	andi	r2,r17,7
 40231f4:	10000726 	beq	r2,zero,4023214 <__subdf3+0xa8>
 40231f8:	888003cc 	andi	r2,r17,15
 40231fc:	01000104 	movi	r4,4
 4023200:	11000426 	beq	r2,r4,4023214 <__subdf3+0xa8>
 4023204:	890b883a 	add	r5,r17,r4
 4023208:	2c63803a 	cmpltu	r17,r5,r17
 402320c:	1c47883a 	add	r3,r3,r17
 4023210:	2823883a 	mov	r17,r5
 4023214:	1880202c 	andhi	r2,r3,128
 4023218:	10005926 	beq	r2,zero,4023380 <__subdf3+0x214>
 402321c:	84000044 	addi	r16,r16,1
 4023220:	0081ffc4 	movi	r2,2047
 4023224:	8080be26 	beq	r16,r2,4023520 <__subdf3+0x3b4>
 4023228:	017fe034 	movhi	r5,65408
 402322c:	297fffc4 	addi	r5,r5,-1
 4023230:	1946703a 	and	r3,r3,r5
 4023234:	1804977a 	slli	r2,r3,29
 4023238:	1806927a 	slli	r3,r3,9
 402323c:	8822d0fa 	srli	r17,r17,3
 4023240:	8401ffcc 	andi	r16,r16,2047
 4023244:	180ad33a 	srli	r5,r3,12
 4023248:	9100004c 	andi	r4,r18,1
 402324c:	1444b03a 	or	r2,r2,r17
 4023250:	80c1ffcc 	andi	r3,r16,2047
 4023254:	1820953a 	slli	r16,r3,20
 4023258:	20c03fcc 	andi	r3,r4,255
 402325c:	180897fa 	slli	r4,r3,31
 4023260:	00c00434 	movhi	r3,16
 4023264:	18ffffc4 	addi	r3,r3,-1
 4023268:	28c6703a 	and	r3,r5,r3
 402326c:	1c06b03a 	or	r3,r3,r16
 4023270:	1906b03a 	or	r3,r3,r4
 4023274:	dfc00417 	ldw	ra,16(sp)
 4023278:	dcc00317 	ldw	r19,12(sp)
 402327c:	dc800217 	ldw	r18,8(sp)
 4023280:	dc400117 	ldw	r17,4(sp)
 4023284:	dc000017 	ldw	r16,0(sp)
 4023288:	dec00504 	addi	sp,sp,20
 402328c:	f800283a 	ret
 4023290:	0101ffc4 	movi	r4,2047
 4023294:	813fd626 	beq	r16,r4,40231f0 <__flash_rwdata_start+0xffff22c8>
 4023298:	29402034 	orhi	r5,r5,128
 402329c:	01000e04 	movi	r4,56
 40232a0:	2080a316 	blt	r4,r2,4023530 <__subdf3+0x3c4>
 40232a4:	010007c4 	movi	r4,31
 40232a8:	2080c616 	blt	r4,r2,40235c4 <__subdf3+0x458>
 40232ac:	01000804 	movi	r4,32
 40232b0:	2089c83a 	sub	r4,r4,r2
 40232b4:	2910983a 	sll	r8,r5,r4
 40232b8:	308ed83a 	srl	r7,r6,r2
 40232bc:	3108983a 	sll	r4,r6,r4
 40232c0:	2884d83a 	srl	r2,r5,r2
 40232c4:	41ccb03a 	or	r6,r8,r7
 40232c8:	2008c03a 	cmpne	r4,r4,zero
 40232cc:	310cb03a 	or	r6,r6,r4
 40232d0:	898dc83a 	sub	r6,r17,r6
 40232d4:	89a3803a 	cmpltu	r17,r17,r6
 40232d8:	1887c83a 	sub	r3,r3,r2
 40232dc:	1c47c83a 	sub	r3,r3,r17
 40232e0:	3023883a 	mov	r17,r6
 40232e4:	1880202c 	andhi	r2,r3,128
 40232e8:	10002326 	beq	r2,zero,4023378 <__subdf3+0x20c>
 40232ec:	04c02034 	movhi	r19,128
 40232f0:	9cffffc4 	addi	r19,r19,-1
 40232f4:	1ce6703a 	and	r19,r3,r19
 40232f8:	98007a26 	beq	r19,zero,40234e4 <__subdf3+0x378>
 40232fc:	9809883a 	mov	r4,r19
 4023300:	4023bc40 	call	4023bc4 <__clzsi2>
 4023304:	113ffe04 	addi	r4,r2,-8
 4023308:	00c007c4 	movi	r3,31
 402330c:	19007b16 	blt	r3,r4,40234fc <__subdf3+0x390>
 4023310:	00800804 	movi	r2,32
 4023314:	1105c83a 	sub	r2,r2,r4
 4023318:	8884d83a 	srl	r2,r17,r2
 402331c:	9906983a 	sll	r3,r19,r4
 4023320:	8922983a 	sll	r17,r17,r4
 4023324:	10c4b03a 	or	r2,r2,r3
 4023328:	24007816 	blt	r4,r16,402350c <__subdf3+0x3a0>
 402332c:	2421c83a 	sub	r16,r4,r16
 4023330:	80c00044 	addi	r3,r16,1
 4023334:	010007c4 	movi	r4,31
 4023338:	20c09516 	blt	r4,r3,4023590 <__subdf3+0x424>
 402333c:	01400804 	movi	r5,32
 4023340:	28cbc83a 	sub	r5,r5,r3
 4023344:	88c8d83a 	srl	r4,r17,r3
 4023348:	8962983a 	sll	r17,r17,r5
 402334c:	114a983a 	sll	r5,r2,r5
 4023350:	10c6d83a 	srl	r3,r2,r3
 4023354:	8804c03a 	cmpne	r2,r17,zero
 4023358:	290ab03a 	or	r5,r5,r4
 402335c:	28a2b03a 	or	r17,r5,r2
 4023360:	0021883a 	mov	r16,zero
 4023364:	003fa206 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 4023368:	2090b03a 	or	r8,r4,r2
 402336c:	40018e26 	beq	r8,zero,40239a8 <__subdf3+0x83c>
 4023370:	1007883a 	mov	r3,r2
 4023374:	2023883a 	mov	r17,r4
 4023378:	888001cc 	andi	r2,r17,7
 402337c:	103f9e1e 	bne	r2,zero,40231f8 <__flash_rwdata_start+0xffff22d0>
 4023380:	1804977a 	slli	r2,r3,29
 4023384:	8822d0fa 	srli	r17,r17,3
 4023388:	1810d0fa 	srli	r8,r3,3
 402338c:	9100004c 	andi	r4,r18,1
 4023390:	1444b03a 	or	r2,r2,r17
 4023394:	00c1ffc4 	movi	r3,2047
 4023398:	80c02826 	beq	r16,r3,402343c <__subdf3+0x2d0>
 402339c:	01400434 	movhi	r5,16
 40233a0:	297fffc4 	addi	r5,r5,-1
 40233a4:	80e0703a 	and	r16,r16,r3
 40233a8:	414a703a 	and	r5,r8,r5
 40233ac:	003fa806 	br	4023250 <__flash_rwdata_start+0xffff2328>
 40233b0:	0080630e 	bge	zero,r2,4023540 <__subdf3+0x3d4>
 40233b4:	48003026 	beq	r9,zero,4023478 <__subdf3+0x30c>
 40233b8:	0101ffc4 	movi	r4,2047
 40233bc:	813f8c26 	beq	r16,r4,40231f0 <__flash_rwdata_start+0xffff22c8>
 40233c0:	29402034 	orhi	r5,r5,128
 40233c4:	01000e04 	movi	r4,56
 40233c8:	2080a90e 	bge	r4,r2,4023670 <__subdf3+0x504>
 40233cc:	298cb03a 	or	r6,r5,r6
 40233d0:	3012c03a 	cmpne	r9,r6,zero
 40233d4:	0005883a 	mov	r2,zero
 40233d8:	4c53883a 	add	r9,r9,r17
 40233dc:	4c63803a 	cmpltu	r17,r9,r17
 40233e0:	10c7883a 	add	r3,r2,r3
 40233e4:	88c7883a 	add	r3,r17,r3
 40233e8:	4823883a 	mov	r17,r9
 40233ec:	1880202c 	andhi	r2,r3,128
 40233f0:	1000d026 	beq	r2,zero,4023734 <__subdf3+0x5c8>
 40233f4:	84000044 	addi	r16,r16,1
 40233f8:	0081ffc4 	movi	r2,2047
 40233fc:	8080fe26 	beq	r16,r2,40237f8 <__subdf3+0x68c>
 4023400:	00bfe034 	movhi	r2,65408
 4023404:	10bfffc4 	addi	r2,r2,-1
 4023408:	1886703a 	and	r3,r3,r2
 402340c:	880ad07a 	srli	r5,r17,1
 4023410:	180497fa 	slli	r2,r3,31
 4023414:	8900004c 	andi	r4,r17,1
 4023418:	2922b03a 	or	r17,r5,r4
 402341c:	1806d07a 	srli	r3,r3,1
 4023420:	1462b03a 	or	r17,r2,r17
 4023424:	3825883a 	mov	r18,r7
 4023428:	003f7106 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 402342c:	2984b03a 	or	r2,r5,r6
 4023430:	103f6826 	beq	r2,zero,40231d4 <__flash_rwdata_start+0xffff22ac>
 4023434:	39c03fcc 	andi	r7,r7,255
 4023438:	003f6706 	br	40231d8 <__flash_rwdata_start+0xffff22b0>
 402343c:	4086b03a 	or	r3,r8,r2
 4023440:	18015226 	beq	r3,zero,402398c <__subdf3+0x820>
 4023444:	00c00434 	movhi	r3,16
 4023448:	41400234 	orhi	r5,r8,8
 402344c:	18ffffc4 	addi	r3,r3,-1
 4023450:	28ca703a 	and	r5,r5,r3
 4023454:	003f7e06 	br	4023250 <__flash_rwdata_start+0xffff2328>
 4023458:	10bfffc4 	addi	r2,r2,-1
 402345c:	1000491e 	bne	r2,zero,4023584 <__subdf3+0x418>
 4023460:	898fc83a 	sub	r7,r17,r6
 4023464:	89e3803a 	cmpltu	r17,r17,r7
 4023468:	1947c83a 	sub	r3,r3,r5
 402346c:	1c47c83a 	sub	r3,r3,r17
 4023470:	3823883a 	mov	r17,r7
 4023474:	003f9b06 	br	40232e4 <__flash_rwdata_start+0xffff23bc>
 4023478:	2988b03a 	or	r4,r5,r6
 402347c:	203f5c26 	beq	r4,zero,40231f0 <__flash_rwdata_start+0xffff22c8>
 4023480:	10bfffc4 	addi	r2,r2,-1
 4023484:	1000931e 	bne	r2,zero,40236d4 <__subdf3+0x568>
 4023488:	898d883a 	add	r6,r17,r6
 402348c:	3463803a 	cmpltu	r17,r6,r17
 4023490:	1947883a 	add	r3,r3,r5
 4023494:	88c7883a 	add	r3,r17,r3
 4023498:	3023883a 	mov	r17,r6
 402349c:	003fd306 	br	40233ec <__flash_rwdata_start+0xffff24c4>
 40234a0:	1000541e 	bne	r2,zero,40235f4 <__subdf3+0x488>
 40234a4:	80800044 	addi	r2,r16,1
 40234a8:	1081ffcc 	andi	r2,r2,2047
 40234ac:	01000044 	movi	r4,1
 40234b0:	2080a20e 	bge	r4,r2,402373c <__subdf3+0x5d0>
 40234b4:	8989c83a 	sub	r4,r17,r6
 40234b8:	8905803a 	cmpltu	r2,r17,r4
 40234bc:	1967c83a 	sub	r19,r3,r5
 40234c0:	98a7c83a 	sub	r19,r19,r2
 40234c4:	9880202c 	andhi	r2,r19,128
 40234c8:	10006326 	beq	r2,zero,4023658 <__subdf3+0x4ec>
 40234cc:	3463c83a 	sub	r17,r6,r17
 40234d0:	28c7c83a 	sub	r3,r5,r3
 40234d4:	344d803a 	cmpltu	r6,r6,r17
 40234d8:	19a7c83a 	sub	r19,r3,r6
 40234dc:	3825883a 	mov	r18,r7
 40234e0:	983f861e 	bne	r19,zero,40232fc <__flash_rwdata_start+0xffff23d4>
 40234e4:	8809883a 	mov	r4,r17
 40234e8:	4023bc40 	call	4023bc4 <__clzsi2>
 40234ec:	10800804 	addi	r2,r2,32
 40234f0:	113ffe04 	addi	r4,r2,-8
 40234f4:	00c007c4 	movi	r3,31
 40234f8:	193f850e 	bge	r3,r4,4023310 <__flash_rwdata_start+0xffff23e8>
 40234fc:	10bff604 	addi	r2,r2,-40
 4023500:	8884983a 	sll	r2,r17,r2
 4023504:	0023883a 	mov	r17,zero
 4023508:	243f880e 	bge	r4,r16,402332c <__flash_rwdata_start+0xffff2404>
 402350c:	00ffe034 	movhi	r3,65408
 4023510:	18ffffc4 	addi	r3,r3,-1
 4023514:	8121c83a 	sub	r16,r16,r4
 4023518:	10c6703a 	and	r3,r2,r3
 402351c:	003f3406 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 4023520:	9100004c 	andi	r4,r18,1
 4023524:	000b883a 	mov	r5,zero
 4023528:	0005883a 	mov	r2,zero
 402352c:	003f4806 	br	4023250 <__flash_rwdata_start+0xffff2328>
 4023530:	298cb03a 	or	r6,r5,r6
 4023534:	300cc03a 	cmpne	r6,r6,zero
 4023538:	0005883a 	mov	r2,zero
 402353c:	003f6406 	br	40232d0 <__flash_rwdata_start+0xffff23a8>
 4023540:	10009a1e 	bne	r2,zero,40237ac <__subdf3+0x640>
 4023544:	82400044 	addi	r9,r16,1
 4023548:	4881ffcc 	andi	r2,r9,2047
 402354c:	02800044 	movi	r10,1
 4023550:	5080670e 	bge	r10,r2,40236f0 <__subdf3+0x584>
 4023554:	0081ffc4 	movi	r2,2047
 4023558:	4880af26 	beq	r9,r2,4023818 <__subdf3+0x6ac>
 402355c:	898d883a 	add	r6,r17,r6
 4023560:	1945883a 	add	r2,r3,r5
 4023564:	3447803a 	cmpltu	r3,r6,r17
 4023568:	1887883a 	add	r3,r3,r2
 402356c:	182297fa 	slli	r17,r3,31
 4023570:	300cd07a 	srli	r6,r6,1
 4023574:	1806d07a 	srli	r3,r3,1
 4023578:	4821883a 	mov	r16,r9
 402357c:	89a2b03a 	or	r17,r17,r6
 4023580:	003f1b06 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 4023584:	0101ffc4 	movi	r4,2047
 4023588:	813f441e 	bne	r16,r4,402329c <__flash_rwdata_start+0xffff2374>
 402358c:	003f1806 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 4023590:	843ff844 	addi	r16,r16,-31
 4023594:	01400804 	movi	r5,32
 4023598:	1408d83a 	srl	r4,r2,r16
 402359c:	19405026 	beq	r3,r5,40236e0 <__subdf3+0x574>
 40235a0:	01401004 	movi	r5,64
 40235a4:	28c7c83a 	sub	r3,r5,r3
 40235a8:	10c4983a 	sll	r2,r2,r3
 40235ac:	88a2b03a 	or	r17,r17,r2
 40235b0:	8822c03a 	cmpne	r17,r17,zero
 40235b4:	2462b03a 	or	r17,r4,r17
 40235b8:	0007883a 	mov	r3,zero
 40235bc:	0021883a 	mov	r16,zero
 40235c0:	003f6d06 	br	4023378 <__flash_rwdata_start+0xffff2450>
 40235c4:	11fff804 	addi	r7,r2,-32
 40235c8:	01000804 	movi	r4,32
 40235cc:	29ced83a 	srl	r7,r5,r7
 40235d0:	11004526 	beq	r2,r4,40236e8 <__subdf3+0x57c>
 40235d4:	01001004 	movi	r4,64
 40235d8:	2089c83a 	sub	r4,r4,r2
 40235dc:	2904983a 	sll	r2,r5,r4
 40235e0:	118cb03a 	or	r6,r2,r6
 40235e4:	300cc03a 	cmpne	r6,r6,zero
 40235e8:	398cb03a 	or	r6,r7,r6
 40235ec:	0005883a 	mov	r2,zero
 40235f0:	003f3706 	br	40232d0 <__flash_rwdata_start+0xffff23a8>
 40235f4:	80002a26 	beq	r16,zero,40236a0 <__subdf3+0x534>
 40235f8:	0101ffc4 	movi	r4,2047
 40235fc:	49006626 	beq	r9,r4,4023798 <__subdf3+0x62c>
 4023600:	0085c83a 	sub	r2,zero,r2
 4023604:	18c02034 	orhi	r3,r3,128
 4023608:	01000e04 	movi	r4,56
 402360c:	20807e16 	blt	r4,r2,4023808 <__subdf3+0x69c>
 4023610:	010007c4 	movi	r4,31
 4023614:	2080e716 	blt	r4,r2,40239b4 <__subdf3+0x848>
 4023618:	01000804 	movi	r4,32
 402361c:	2089c83a 	sub	r4,r4,r2
 4023620:	1914983a 	sll	r10,r3,r4
 4023624:	8890d83a 	srl	r8,r17,r2
 4023628:	8908983a 	sll	r4,r17,r4
 402362c:	1884d83a 	srl	r2,r3,r2
 4023630:	5222b03a 	or	r17,r10,r8
 4023634:	2006c03a 	cmpne	r3,r4,zero
 4023638:	88e2b03a 	or	r17,r17,r3
 402363c:	3463c83a 	sub	r17,r6,r17
 4023640:	2885c83a 	sub	r2,r5,r2
 4023644:	344d803a 	cmpltu	r6,r6,r17
 4023648:	1187c83a 	sub	r3,r2,r6
 402364c:	4821883a 	mov	r16,r9
 4023650:	3825883a 	mov	r18,r7
 4023654:	003f2306 	br	40232e4 <__flash_rwdata_start+0xffff23bc>
 4023658:	24d0b03a 	or	r8,r4,r19
 402365c:	40001b1e 	bne	r8,zero,40236cc <__subdf3+0x560>
 4023660:	0005883a 	mov	r2,zero
 4023664:	0009883a 	mov	r4,zero
 4023668:	0021883a 	mov	r16,zero
 402366c:	003f4906 	br	4023394 <__flash_rwdata_start+0xffff246c>
 4023670:	010007c4 	movi	r4,31
 4023674:	20803a16 	blt	r4,r2,4023760 <__subdf3+0x5f4>
 4023678:	01000804 	movi	r4,32
 402367c:	2089c83a 	sub	r4,r4,r2
 4023680:	2912983a 	sll	r9,r5,r4
 4023684:	3090d83a 	srl	r8,r6,r2
 4023688:	3108983a 	sll	r4,r6,r4
 402368c:	2884d83a 	srl	r2,r5,r2
 4023690:	4a12b03a 	or	r9,r9,r8
 4023694:	2008c03a 	cmpne	r4,r4,zero
 4023698:	4912b03a 	or	r9,r9,r4
 402369c:	003f4e06 	br	40233d8 <__flash_rwdata_start+0xffff24b0>
 40236a0:	1c48b03a 	or	r4,r3,r17
 40236a4:	20003c26 	beq	r4,zero,4023798 <__subdf3+0x62c>
 40236a8:	0084303a 	nor	r2,zero,r2
 40236ac:	1000381e 	bne	r2,zero,4023790 <__subdf3+0x624>
 40236b0:	3463c83a 	sub	r17,r6,r17
 40236b4:	28c5c83a 	sub	r2,r5,r3
 40236b8:	344d803a 	cmpltu	r6,r6,r17
 40236bc:	1187c83a 	sub	r3,r2,r6
 40236c0:	4821883a 	mov	r16,r9
 40236c4:	3825883a 	mov	r18,r7
 40236c8:	003f0606 	br	40232e4 <__flash_rwdata_start+0xffff23bc>
 40236cc:	2023883a 	mov	r17,r4
 40236d0:	003f0906 	br	40232f8 <__flash_rwdata_start+0xffff23d0>
 40236d4:	0101ffc4 	movi	r4,2047
 40236d8:	813f3a1e 	bne	r16,r4,40233c4 <__flash_rwdata_start+0xffff249c>
 40236dc:	003ec406 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 40236e0:	0005883a 	mov	r2,zero
 40236e4:	003fb106 	br	40235ac <__flash_rwdata_start+0xffff2684>
 40236e8:	0005883a 	mov	r2,zero
 40236ec:	003fbc06 	br	40235e0 <__flash_rwdata_start+0xffff26b8>
 40236f0:	1c44b03a 	or	r2,r3,r17
 40236f4:	80008e1e 	bne	r16,zero,4023930 <__subdf3+0x7c4>
 40236f8:	1000c826 	beq	r2,zero,4023a1c <__subdf3+0x8b0>
 40236fc:	2984b03a 	or	r2,r5,r6
 4023700:	103ebb26 	beq	r2,zero,40231f0 <__flash_rwdata_start+0xffff22c8>
 4023704:	8989883a 	add	r4,r17,r6
 4023708:	1945883a 	add	r2,r3,r5
 402370c:	2447803a 	cmpltu	r3,r4,r17
 4023710:	1887883a 	add	r3,r3,r2
 4023714:	1880202c 	andhi	r2,r3,128
 4023718:	2023883a 	mov	r17,r4
 402371c:	103f1626 	beq	r2,zero,4023378 <__flash_rwdata_start+0xffff2450>
 4023720:	00bfe034 	movhi	r2,65408
 4023724:	10bfffc4 	addi	r2,r2,-1
 4023728:	5021883a 	mov	r16,r10
 402372c:	1886703a 	and	r3,r3,r2
 4023730:	003eaf06 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 4023734:	3825883a 	mov	r18,r7
 4023738:	003f0f06 	br	4023378 <__flash_rwdata_start+0xffff2450>
 402373c:	1c44b03a 	or	r2,r3,r17
 4023740:	8000251e 	bne	r16,zero,40237d8 <__subdf3+0x66c>
 4023744:	1000661e 	bne	r2,zero,40238e0 <__subdf3+0x774>
 4023748:	2990b03a 	or	r8,r5,r6
 402374c:	40009626 	beq	r8,zero,40239a8 <__subdf3+0x83c>
 4023750:	2807883a 	mov	r3,r5
 4023754:	3023883a 	mov	r17,r6
 4023758:	3825883a 	mov	r18,r7
 402375c:	003ea406 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 4023760:	127ff804 	addi	r9,r2,-32
 4023764:	01000804 	movi	r4,32
 4023768:	2a52d83a 	srl	r9,r5,r9
 402376c:	11008c26 	beq	r2,r4,40239a0 <__subdf3+0x834>
 4023770:	01001004 	movi	r4,64
 4023774:	2085c83a 	sub	r2,r4,r2
 4023778:	2884983a 	sll	r2,r5,r2
 402377c:	118cb03a 	or	r6,r2,r6
 4023780:	300cc03a 	cmpne	r6,r6,zero
 4023784:	4992b03a 	or	r9,r9,r6
 4023788:	0005883a 	mov	r2,zero
 402378c:	003f1206 	br	40233d8 <__flash_rwdata_start+0xffff24b0>
 4023790:	0101ffc4 	movi	r4,2047
 4023794:	493f9c1e 	bne	r9,r4,4023608 <__flash_rwdata_start+0xffff26e0>
 4023798:	2807883a 	mov	r3,r5
 402379c:	3023883a 	mov	r17,r6
 40237a0:	4821883a 	mov	r16,r9
 40237a4:	3825883a 	mov	r18,r7
 40237a8:	003e9106 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 40237ac:	80001f1e 	bne	r16,zero,402382c <__subdf3+0x6c0>
 40237b0:	1c48b03a 	or	r4,r3,r17
 40237b4:	20005a26 	beq	r4,zero,4023920 <__subdf3+0x7b4>
 40237b8:	0084303a 	nor	r2,zero,r2
 40237bc:	1000561e 	bne	r2,zero,4023918 <__subdf3+0x7ac>
 40237c0:	89a3883a 	add	r17,r17,r6
 40237c4:	1945883a 	add	r2,r3,r5
 40237c8:	898d803a 	cmpltu	r6,r17,r6
 40237cc:	3087883a 	add	r3,r6,r2
 40237d0:	4821883a 	mov	r16,r9
 40237d4:	003f0506 	br	40233ec <__flash_rwdata_start+0xffff24c4>
 40237d8:	10002b1e 	bne	r2,zero,4023888 <__subdf3+0x71c>
 40237dc:	2984b03a 	or	r2,r5,r6
 40237e0:	10008026 	beq	r2,zero,40239e4 <__subdf3+0x878>
 40237e4:	2807883a 	mov	r3,r5
 40237e8:	3023883a 	mov	r17,r6
 40237ec:	3825883a 	mov	r18,r7
 40237f0:	0401ffc4 	movi	r16,2047
 40237f4:	003e7e06 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 40237f8:	3809883a 	mov	r4,r7
 40237fc:	0011883a 	mov	r8,zero
 4023800:	0005883a 	mov	r2,zero
 4023804:	003ee306 	br	4023394 <__flash_rwdata_start+0xffff246c>
 4023808:	1c62b03a 	or	r17,r3,r17
 402380c:	8822c03a 	cmpne	r17,r17,zero
 4023810:	0005883a 	mov	r2,zero
 4023814:	003f8906 	br	402363c <__flash_rwdata_start+0xffff2714>
 4023818:	3809883a 	mov	r4,r7
 402381c:	4821883a 	mov	r16,r9
 4023820:	0011883a 	mov	r8,zero
 4023824:	0005883a 	mov	r2,zero
 4023828:	003eda06 	br	4023394 <__flash_rwdata_start+0xffff246c>
 402382c:	0101ffc4 	movi	r4,2047
 4023830:	49003b26 	beq	r9,r4,4023920 <__subdf3+0x7b4>
 4023834:	0085c83a 	sub	r2,zero,r2
 4023838:	18c02034 	orhi	r3,r3,128
 402383c:	01000e04 	movi	r4,56
 4023840:	20806e16 	blt	r4,r2,40239fc <__subdf3+0x890>
 4023844:	010007c4 	movi	r4,31
 4023848:	20807716 	blt	r4,r2,4023a28 <__subdf3+0x8bc>
 402384c:	01000804 	movi	r4,32
 4023850:	2089c83a 	sub	r4,r4,r2
 4023854:	1914983a 	sll	r10,r3,r4
 4023858:	8890d83a 	srl	r8,r17,r2
 402385c:	8908983a 	sll	r4,r17,r4
 4023860:	1884d83a 	srl	r2,r3,r2
 4023864:	5222b03a 	or	r17,r10,r8
 4023868:	2006c03a 	cmpne	r3,r4,zero
 402386c:	88e2b03a 	or	r17,r17,r3
 4023870:	89a3883a 	add	r17,r17,r6
 4023874:	1145883a 	add	r2,r2,r5
 4023878:	898d803a 	cmpltu	r6,r17,r6
 402387c:	3087883a 	add	r3,r6,r2
 4023880:	4821883a 	mov	r16,r9
 4023884:	003ed906 	br	40233ec <__flash_rwdata_start+0xffff24c4>
 4023888:	2984b03a 	or	r2,r5,r6
 402388c:	10004226 	beq	r2,zero,4023998 <__subdf3+0x82c>
 4023890:	1808d0fa 	srli	r4,r3,3
 4023894:	8822d0fa 	srli	r17,r17,3
 4023898:	1806977a 	slli	r3,r3,29
 402389c:	2080022c 	andhi	r2,r4,8
 40238a0:	1c62b03a 	or	r17,r3,r17
 40238a4:	10000826 	beq	r2,zero,40238c8 <__subdf3+0x75c>
 40238a8:	2812d0fa 	srli	r9,r5,3
 40238ac:	4880022c 	andhi	r2,r9,8
 40238b0:	1000051e 	bne	r2,zero,40238c8 <__subdf3+0x75c>
 40238b4:	300cd0fa 	srli	r6,r6,3
 40238b8:	2804977a 	slli	r2,r5,29
 40238bc:	4809883a 	mov	r4,r9
 40238c0:	3825883a 	mov	r18,r7
 40238c4:	11a2b03a 	or	r17,r2,r6
 40238c8:	8806d77a 	srli	r3,r17,29
 40238cc:	200890fa 	slli	r4,r4,3
 40238d0:	882290fa 	slli	r17,r17,3
 40238d4:	0401ffc4 	movi	r16,2047
 40238d8:	1906b03a 	or	r3,r3,r4
 40238dc:	003e4406 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 40238e0:	2984b03a 	or	r2,r5,r6
 40238e4:	103e4226 	beq	r2,zero,40231f0 <__flash_rwdata_start+0xffff22c8>
 40238e8:	8989c83a 	sub	r4,r17,r6
 40238ec:	8911803a 	cmpltu	r8,r17,r4
 40238f0:	1945c83a 	sub	r2,r3,r5
 40238f4:	1205c83a 	sub	r2,r2,r8
 40238f8:	1200202c 	andhi	r8,r2,128
 40238fc:	403e9a26 	beq	r8,zero,4023368 <__flash_rwdata_start+0xffff2440>
 4023900:	3463c83a 	sub	r17,r6,r17
 4023904:	28c5c83a 	sub	r2,r5,r3
 4023908:	344d803a 	cmpltu	r6,r6,r17
 402390c:	1187c83a 	sub	r3,r2,r6
 4023910:	3825883a 	mov	r18,r7
 4023914:	003e3606 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 4023918:	0101ffc4 	movi	r4,2047
 402391c:	493fc71e 	bne	r9,r4,402383c <__flash_rwdata_start+0xffff2914>
 4023920:	2807883a 	mov	r3,r5
 4023924:	3023883a 	mov	r17,r6
 4023928:	4821883a 	mov	r16,r9
 402392c:	003e3006 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 4023930:	10003626 	beq	r2,zero,4023a0c <__subdf3+0x8a0>
 4023934:	2984b03a 	or	r2,r5,r6
 4023938:	10001726 	beq	r2,zero,4023998 <__subdf3+0x82c>
 402393c:	1808d0fa 	srli	r4,r3,3
 4023940:	8822d0fa 	srli	r17,r17,3
 4023944:	1806977a 	slli	r3,r3,29
 4023948:	2080022c 	andhi	r2,r4,8
 402394c:	1c62b03a 	or	r17,r3,r17
 4023950:	10000726 	beq	r2,zero,4023970 <__subdf3+0x804>
 4023954:	2812d0fa 	srli	r9,r5,3
 4023958:	4880022c 	andhi	r2,r9,8
 402395c:	1000041e 	bne	r2,zero,4023970 <__subdf3+0x804>
 4023960:	300cd0fa 	srli	r6,r6,3
 4023964:	2804977a 	slli	r2,r5,29
 4023968:	4809883a 	mov	r4,r9
 402396c:	11a2b03a 	or	r17,r2,r6
 4023970:	8806d77a 	srli	r3,r17,29
 4023974:	200890fa 	slli	r4,r4,3
 4023978:	882290fa 	slli	r17,r17,3
 402397c:	3825883a 	mov	r18,r7
 4023980:	1906b03a 	or	r3,r3,r4
 4023984:	0401ffc4 	movi	r16,2047
 4023988:	003e1906 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 402398c:	000b883a 	mov	r5,zero
 4023990:	0005883a 	mov	r2,zero
 4023994:	003e2e06 	br	4023250 <__flash_rwdata_start+0xffff2328>
 4023998:	0401ffc4 	movi	r16,2047
 402399c:	003e1406 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 40239a0:	0005883a 	mov	r2,zero
 40239a4:	003f7506 	br	402377c <__flash_rwdata_start+0xffff2854>
 40239a8:	0005883a 	mov	r2,zero
 40239ac:	0009883a 	mov	r4,zero
 40239b0:	003e7806 	br	4023394 <__flash_rwdata_start+0xffff246c>
 40239b4:	123ff804 	addi	r8,r2,-32
 40239b8:	01000804 	movi	r4,32
 40239bc:	1a10d83a 	srl	r8,r3,r8
 40239c0:	11002526 	beq	r2,r4,4023a58 <__subdf3+0x8ec>
 40239c4:	01001004 	movi	r4,64
 40239c8:	2085c83a 	sub	r2,r4,r2
 40239cc:	1884983a 	sll	r2,r3,r2
 40239d0:	1444b03a 	or	r2,r2,r17
 40239d4:	1004c03a 	cmpne	r2,r2,zero
 40239d8:	40a2b03a 	or	r17,r8,r2
 40239dc:	0005883a 	mov	r2,zero
 40239e0:	003f1606 	br	402363c <__flash_rwdata_start+0xffff2714>
 40239e4:	02000434 	movhi	r8,16
 40239e8:	0009883a 	mov	r4,zero
 40239ec:	423fffc4 	addi	r8,r8,-1
 40239f0:	00bfffc4 	movi	r2,-1
 40239f4:	0401ffc4 	movi	r16,2047
 40239f8:	003e6606 	br	4023394 <__flash_rwdata_start+0xffff246c>
 40239fc:	1c62b03a 	or	r17,r3,r17
 4023a00:	8822c03a 	cmpne	r17,r17,zero
 4023a04:	0005883a 	mov	r2,zero
 4023a08:	003f9906 	br	4023870 <__flash_rwdata_start+0xffff2948>
 4023a0c:	2807883a 	mov	r3,r5
 4023a10:	3023883a 	mov	r17,r6
 4023a14:	0401ffc4 	movi	r16,2047
 4023a18:	003df506 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 4023a1c:	2807883a 	mov	r3,r5
 4023a20:	3023883a 	mov	r17,r6
 4023a24:	003df206 	br	40231f0 <__flash_rwdata_start+0xffff22c8>
 4023a28:	123ff804 	addi	r8,r2,-32
 4023a2c:	01000804 	movi	r4,32
 4023a30:	1a10d83a 	srl	r8,r3,r8
 4023a34:	11000a26 	beq	r2,r4,4023a60 <__subdf3+0x8f4>
 4023a38:	01001004 	movi	r4,64
 4023a3c:	2085c83a 	sub	r2,r4,r2
 4023a40:	1884983a 	sll	r2,r3,r2
 4023a44:	1444b03a 	or	r2,r2,r17
 4023a48:	1004c03a 	cmpne	r2,r2,zero
 4023a4c:	40a2b03a 	or	r17,r8,r2
 4023a50:	0005883a 	mov	r2,zero
 4023a54:	003f8606 	br	4023870 <__flash_rwdata_start+0xffff2948>
 4023a58:	0005883a 	mov	r2,zero
 4023a5c:	003fdc06 	br	40239d0 <__flash_rwdata_start+0xffff2aa8>
 4023a60:	0005883a 	mov	r2,zero
 4023a64:	003ff706 	br	4023a44 <__flash_rwdata_start+0xffff2b1c>

04023a68 <__fixdfsi>:
 4023a68:	280cd53a 	srli	r6,r5,20
 4023a6c:	00c00434 	movhi	r3,16
 4023a70:	18ffffc4 	addi	r3,r3,-1
 4023a74:	3181ffcc 	andi	r6,r6,2047
 4023a78:	01c0ff84 	movi	r7,1022
 4023a7c:	28c6703a 	and	r3,r5,r3
 4023a80:	280ad7fa 	srli	r5,r5,31
 4023a84:	3980120e 	bge	r7,r6,4023ad0 <__fixdfsi+0x68>
 4023a88:	00810744 	movi	r2,1053
 4023a8c:	11800c16 	blt	r2,r6,4023ac0 <__fixdfsi+0x58>
 4023a90:	00810cc4 	movi	r2,1075
 4023a94:	1185c83a 	sub	r2,r2,r6
 4023a98:	01c007c4 	movi	r7,31
 4023a9c:	18c00434 	orhi	r3,r3,16
 4023aa0:	38800d16 	blt	r7,r2,4023ad8 <__fixdfsi+0x70>
 4023aa4:	31befb44 	addi	r6,r6,-1043
 4023aa8:	2084d83a 	srl	r2,r4,r2
 4023aac:	1986983a 	sll	r3,r3,r6
 4023ab0:	1884b03a 	or	r2,r3,r2
 4023ab4:	28000726 	beq	r5,zero,4023ad4 <__fixdfsi+0x6c>
 4023ab8:	0085c83a 	sub	r2,zero,r2
 4023abc:	f800283a 	ret
 4023ac0:	00a00034 	movhi	r2,32768
 4023ac4:	10bfffc4 	addi	r2,r2,-1
 4023ac8:	2885883a 	add	r2,r5,r2
 4023acc:	f800283a 	ret
 4023ad0:	0005883a 	mov	r2,zero
 4023ad4:	f800283a 	ret
 4023ad8:	008104c4 	movi	r2,1043
 4023adc:	1185c83a 	sub	r2,r2,r6
 4023ae0:	1884d83a 	srl	r2,r3,r2
 4023ae4:	003ff306 	br	4023ab4 <__flash_rwdata_start+0xffff2b8c>

04023ae8 <__floatsidf>:
 4023ae8:	defffd04 	addi	sp,sp,-12
 4023aec:	dfc00215 	stw	ra,8(sp)
 4023af0:	dc400115 	stw	r17,4(sp)
 4023af4:	dc000015 	stw	r16,0(sp)
 4023af8:	20002b26 	beq	r4,zero,4023ba8 <__floatsidf+0xc0>
 4023afc:	2023883a 	mov	r17,r4
 4023b00:	2020d7fa 	srli	r16,r4,31
 4023b04:	20002d16 	blt	r4,zero,4023bbc <__floatsidf+0xd4>
 4023b08:	8809883a 	mov	r4,r17
 4023b0c:	4023bc40 	call	4023bc4 <__clzsi2>
 4023b10:	01410784 	movi	r5,1054
 4023b14:	288bc83a 	sub	r5,r5,r2
 4023b18:	01010cc4 	movi	r4,1075
 4023b1c:	2149c83a 	sub	r4,r4,r5
 4023b20:	00c007c4 	movi	r3,31
 4023b24:	1900160e 	bge	r3,r4,4023b80 <__floatsidf+0x98>
 4023b28:	00c104c4 	movi	r3,1043
 4023b2c:	1947c83a 	sub	r3,r3,r5
 4023b30:	88c6983a 	sll	r3,r17,r3
 4023b34:	00800434 	movhi	r2,16
 4023b38:	10bfffc4 	addi	r2,r2,-1
 4023b3c:	1886703a 	and	r3,r3,r2
 4023b40:	2941ffcc 	andi	r5,r5,2047
 4023b44:	800d883a 	mov	r6,r16
 4023b48:	0005883a 	mov	r2,zero
 4023b4c:	280a953a 	slli	r5,r5,20
 4023b50:	31803fcc 	andi	r6,r6,255
 4023b54:	01000434 	movhi	r4,16
 4023b58:	300c97fa 	slli	r6,r6,31
 4023b5c:	213fffc4 	addi	r4,r4,-1
 4023b60:	1906703a 	and	r3,r3,r4
 4023b64:	1946b03a 	or	r3,r3,r5
 4023b68:	1986b03a 	or	r3,r3,r6
 4023b6c:	dfc00217 	ldw	ra,8(sp)
 4023b70:	dc400117 	ldw	r17,4(sp)
 4023b74:	dc000017 	ldw	r16,0(sp)
 4023b78:	dec00304 	addi	sp,sp,12
 4023b7c:	f800283a 	ret
 4023b80:	00c002c4 	movi	r3,11
 4023b84:	1887c83a 	sub	r3,r3,r2
 4023b88:	88c6d83a 	srl	r3,r17,r3
 4023b8c:	8904983a 	sll	r2,r17,r4
 4023b90:	01000434 	movhi	r4,16
 4023b94:	213fffc4 	addi	r4,r4,-1
 4023b98:	2941ffcc 	andi	r5,r5,2047
 4023b9c:	1906703a 	and	r3,r3,r4
 4023ba0:	800d883a 	mov	r6,r16
 4023ba4:	003fe906 	br	4023b4c <__flash_rwdata_start+0xffff2c24>
 4023ba8:	000d883a 	mov	r6,zero
 4023bac:	000b883a 	mov	r5,zero
 4023bb0:	0007883a 	mov	r3,zero
 4023bb4:	0005883a 	mov	r2,zero
 4023bb8:	003fe406 	br	4023b4c <__flash_rwdata_start+0xffff2c24>
 4023bbc:	0123c83a 	sub	r17,zero,r4
 4023bc0:	003fd106 	br	4023b08 <__flash_rwdata_start+0xffff2be0>

04023bc4 <__clzsi2>:
 4023bc4:	00bfffd4 	movui	r2,65535
 4023bc8:	11000536 	bltu	r2,r4,4023be0 <__clzsi2+0x1c>
 4023bcc:	00803fc4 	movi	r2,255
 4023bd0:	11000f36 	bltu	r2,r4,4023c10 <__clzsi2+0x4c>
 4023bd4:	00800804 	movi	r2,32
 4023bd8:	0007883a 	mov	r3,zero
 4023bdc:	00000506 	br	4023bf4 <__clzsi2+0x30>
 4023be0:	00804034 	movhi	r2,256
 4023be4:	10bfffc4 	addi	r2,r2,-1
 4023be8:	11000c2e 	bgeu	r2,r4,4023c1c <__clzsi2+0x58>
 4023bec:	00800204 	movi	r2,8
 4023bf0:	00c00604 	movi	r3,24
 4023bf4:	20c8d83a 	srl	r4,r4,r3
 4023bf8:	00c00034 	movhi	r3,0
 4023bfc:	18c01a84 	addi	r3,r3,106
 4023c00:	1909883a 	add	r4,r3,r4
 4023c04:	20c00003 	ldbu	r3,0(r4)
 4023c08:	10c5c83a 	sub	r2,r2,r3
 4023c0c:	f800283a 	ret
 4023c10:	00800604 	movi	r2,24
 4023c14:	00c00204 	movi	r3,8
 4023c18:	003ff606 	br	4023bf4 <__flash_rwdata_start+0xffff2ccc>
 4023c1c:	00800404 	movi	r2,16
 4023c20:	1007883a 	mov	r3,r2
 4023c24:	003ff306 	br	4023bf4 <__flash_rwdata_start+0xffff2ccc>

04023c28 <__errno>:
 4023c28:	00800034 	movhi	r2,0
 4023c2c:	10878f04 	addi	r2,r2,7740
 4023c30:	10800017 	ldw	r2,0(r2)
 4023c34:	f800283a 	ret

04023c38 <_printf_r>:
 4023c38:	defffd04 	addi	sp,sp,-12
 4023c3c:	2805883a 	mov	r2,r5
 4023c40:	dfc00015 	stw	ra,0(sp)
 4023c44:	d9800115 	stw	r6,4(sp)
 4023c48:	d9c00215 	stw	r7,8(sp)
 4023c4c:	21400217 	ldw	r5,8(r4)
 4023c50:	d9c00104 	addi	r7,sp,4
 4023c54:	100d883a 	mov	r6,r2
 4023c58:	4023edc0 	call	4023edc <___vfprintf_internal_r>
 4023c5c:	dfc00017 	ldw	ra,0(sp)
 4023c60:	dec00304 	addi	sp,sp,12
 4023c64:	f800283a 	ret

04023c68 <printf>:
 4023c68:	defffc04 	addi	sp,sp,-16
 4023c6c:	dfc00015 	stw	ra,0(sp)
 4023c70:	d9400115 	stw	r5,4(sp)
 4023c74:	d9800215 	stw	r6,8(sp)
 4023c78:	d9c00315 	stw	r7,12(sp)
 4023c7c:	00800034 	movhi	r2,0
 4023c80:	10878f04 	addi	r2,r2,7740
 4023c84:	10800017 	ldw	r2,0(r2)
 4023c88:	200b883a 	mov	r5,r4
 4023c8c:	d9800104 	addi	r6,sp,4
 4023c90:	11000217 	ldw	r4,8(r2)
 4023c94:	40260d40 	call	40260d4 <__vfprintf_internal>
 4023c98:	dfc00017 	ldw	ra,0(sp)
 4023c9c:	dec00404 	addi	sp,sp,16
 4023ca0:	f800283a 	ret

04023ca4 <_puts_r>:
 4023ca4:	defff604 	addi	sp,sp,-40
 4023ca8:	dc000715 	stw	r16,28(sp)
 4023cac:	2021883a 	mov	r16,r4
 4023cb0:	2809883a 	mov	r4,r5
 4023cb4:	dc400815 	stw	r17,32(sp)
 4023cb8:	dfc00915 	stw	ra,36(sp)
 4023cbc:	2823883a 	mov	r17,r5
 4023cc0:	4023df40 	call	4023df4 <strlen>
 4023cc4:	10c00044 	addi	r3,r2,1
 4023cc8:	d8800115 	stw	r2,4(sp)
 4023ccc:	00800034 	movhi	r2,0
 4023cd0:	10805c04 	addi	r2,r2,368
 4023cd4:	d8800215 	stw	r2,8(sp)
 4023cd8:	00800044 	movi	r2,1
 4023cdc:	d8800315 	stw	r2,12(sp)
 4023ce0:	00800084 	movi	r2,2
 4023ce4:	dc400015 	stw	r17,0(sp)
 4023ce8:	d8c00615 	stw	r3,24(sp)
 4023cec:	dec00415 	stw	sp,16(sp)
 4023cf0:	d8800515 	stw	r2,20(sp)
 4023cf4:	80000226 	beq	r16,zero,4023d00 <_puts_r+0x5c>
 4023cf8:	80800e17 	ldw	r2,56(r16)
 4023cfc:	10001426 	beq	r2,zero,4023d50 <_puts_r+0xac>
 4023d00:	81400217 	ldw	r5,8(r16)
 4023d04:	2880030b 	ldhu	r2,12(r5)
 4023d08:	10c8000c 	andi	r3,r2,8192
 4023d0c:	1800061e 	bne	r3,zero,4023d28 <_puts_r+0x84>
 4023d10:	29001917 	ldw	r4,100(r5)
 4023d14:	00f7ffc4 	movi	r3,-8193
 4023d18:	10880014 	ori	r2,r2,8192
 4023d1c:	20c6703a 	and	r3,r4,r3
 4023d20:	2880030d 	sth	r2,12(r5)
 4023d24:	28c01915 	stw	r3,100(r5)
 4023d28:	d9800404 	addi	r6,sp,16
 4023d2c:	8009883a 	mov	r4,r16
 4023d30:	40286040 	call	4028604 <__sfvwrite_r>
 4023d34:	1000091e 	bne	r2,zero,4023d5c <_puts_r+0xb8>
 4023d38:	00800284 	movi	r2,10
 4023d3c:	dfc00917 	ldw	ra,36(sp)
 4023d40:	dc400817 	ldw	r17,32(sp)
 4023d44:	dc000717 	ldw	r16,28(sp)
 4023d48:	dec00a04 	addi	sp,sp,40
 4023d4c:	f800283a 	ret
 4023d50:	8009883a 	mov	r4,r16
 4023d54:	40281800 	call	4028180 <__sinit>
 4023d58:	003fe906 	br	4023d00 <__flash_rwdata_start+0xffff2dd8>
 4023d5c:	00bfffc4 	movi	r2,-1
 4023d60:	003ff606 	br	4023d3c <__flash_rwdata_start+0xffff2e14>

04023d64 <puts>:
 4023d64:	00800034 	movhi	r2,0
 4023d68:	10878f04 	addi	r2,r2,7740
 4023d6c:	200b883a 	mov	r5,r4
 4023d70:	11000017 	ldw	r4,0(r2)
 4023d74:	4023ca41 	jmpi	4023ca4 <_puts_r>

04023d78 <srand>:
 4023d78:	00800034 	movhi	r2,0
 4023d7c:	10878f04 	addi	r2,r2,7740
 4023d80:	10800017 	ldw	r2,0(r2)
 4023d84:	11002915 	stw	r4,164(r2)
 4023d88:	10002a15 	stw	zero,168(r2)
 4023d8c:	f800283a 	ret

04023d90 <rand>:
 4023d90:	00800034 	movhi	r2,0
 4023d94:	defffe04 	addi	sp,sp,-8
 4023d98:	10878f04 	addi	r2,r2,7740
 4023d9c:	dc000015 	stw	r16,0(sp)
 4023da0:	14000017 	ldw	r16,0(r2)
 4023da4:	dfc00115 	stw	ra,4(sp)
 4023da8:	01932574 	movhi	r6,19605
 4023dac:	81002917 	ldw	r4,164(r16)
 4023db0:	81402a17 	ldw	r5,168(r16)
 4023db4:	01d614b4 	movhi	r7,22610
 4023db8:	319fcb44 	addi	r6,r6,32557
 4023dbc:	39fd0b44 	addi	r7,r7,-3027
 4023dc0:	402d3400 	call	402d340 <__muldi3>
 4023dc4:	11000044 	addi	r4,r2,1
 4023dc8:	2085803a 	cmpltu	r2,r4,r2
 4023dcc:	10c7883a 	add	r3,r2,r3
 4023dd0:	00a00034 	movhi	r2,32768
 4023dd4:	10bfffc4 	addi	r2,r2,-1
 4023dd8:	1884703a 	and	r2,r3,r2
 4023ddc:	81002915 	stw	r4,164(r16)
 4023de0:	80c02a15 	stw	r3,168(r16)
 4023de4:	dfc00117 	ldw	ra,4(sp)
 4023de8:	dc000017 	ldw	r16,0(sp)
 4023dec:	dec00204 	addi	sp,sp,8
 4023df0:	f800283a 	ret

04023df4 <strlen>:
 4023df4:	208000cc 	andi	r2,r4,3
 4023df8:	10002026 	beq	r2,zero,4023e7c <strlen+0x88>
 4023dfc:	20800007 	ldb	r2,0(r4)
 4023e00:	10002026 	beq	r2,zero,4023e84 <strlen+0x90>
 4023e04:	2005883a 	mov	r2,r4
 4023e08:	00000206 	br	4023e14 <strlen+0x20>
 4023e0c:	10c00007 	ldb	r3,0(r2)
 4023e10:	18001826 	beq	r3,zero,4023e74 <strlen+0x80>
 4023e14:	10800044 	addi	r2,r2,1
 4023e18:	10c000cc 	andi	r3,r2,3
 4023e1c:	183ffb1e 	bne	r3,zero,4023e0c <__flash_rwdata_start+0xffff2ee4>
 4023e20:	10c00017 	ldw	r3,0(r2)
 4023e24:	01ffbff4 	movhi	r7,65279
 4023e28:	39ffbfc4 	addi	r7,r7,-257
 4023e2c:	00ca303a 	nor	r5,zero,r3
 4023e30:	01a02074 	movhi	r6,32897
 4023e34:	19c7883a 	add	r3,r3,r7
 4023e38:	31a02004 	addi	r6,r6,-32640
 4023e3c:	1946703a 	and	r3,r3,r5
 4023e40:	1986703a 	and	r3,r3,r6
 4023e44:	1800091e 	bne	r3,zero,4023e6c <strlen+0x78>
 4023e48:	10800104 	addi	r2,r2,4
 4023e4c:	10c00017 	ldw	r3,0(r2)
 4023e50:	19cb883a 	add	r5,r3,r7
 4023e54:	00c6303a 	nor	r3,zero,r3
 4023e58:	28c6703a 	and	r3,r5,r3
 4023e5c:	1986703a 	and	r3,r3,r6
 4023e60:	183ff926 	beq	r3,zero,4023e48 <__flash_rwdata_start+0xffff2f20>
 4023e64:	00000106 	br	4023e6c <strlen+0x78>
 4023e68:	10800044 	addi	r2,r2,1
 4023e6c:	10c00007 	ldb	r3,0(r2)
 4023e70:	183ffd1e 	bne	r3,zero,4023e68 <__flash_rwdata_start+0xffff2f40>
 4023e74:	1105c83a 	sub	r2,r2,r4
 4023e78:	f800283a 	ret
 4023e7c:	2005883a 	mov	r2,r4
 4023e80:	003fe706 	br	4023e20 <__flash_rwdata_start+0xffff2ef8>
 4023e84:	0005883a 	mov	r2,zero
 4023e88:	f800283a 	ret

04023e8c <time>:
 4023e8c:	00800034 	movhi	r2,0
 4023e90:	defffc04 	addi	sp,sp,-16
 4023e94:	10878f04 	addi	r2,r2,7740
 4023e98:	dc000215 	stw	r16,8(sp)
 4023e9c:	2021883a 	mov	r16,r4
 4023ea0:	11000017 	ldw	r4,0(r2)
 4023ea4:	000d883a 	mov	r6,zero
 4023ea8:	d80b883a 	mov	r5,sp
 4023eac:	dfc00315 	stw	ra,12(sp)
 4023eb0:	4028c480 	call	4028c48 <_gettimeofday_r>
 4023eb4:	10000716 	blt	r2,zero,4023ed4 <time+0x48>
 4023eb8:	d8800017 	ldw	r2,0(sp)
 4023ebc:	80000126 	beq	r16,zero,4023ec4 <time+0x38>
 4023ec0:	80800015 	stw	r2,0(r16)
 4023ec4:	dfc00317 	ldw	ra,12(sp)
 4023ec8:	dc000217 	ldw	r16,8(sp)
 4023ecc:	dec00404 	addi	sp,sp,16
 4023ed0:	f800283a 	ret
 4023ed4:	00bfffc4 	movi	r2,-1
 4023ed8:	003ffa06 	br	4023ec4 <__flash_rwdata_start+0xffff2f9c>

04023edc <___vfprintf_internal_r>:
 4023edc:	deffb804 	addi	sp,sp,-288
 4023ee0:	dfc04715 	stw	ra,284(sp)
 4023ee4:	ddc04515 	stw	r23,276(sp)
 4023ee8:	dd404315 	stw	r21,268(sp)
 4023eec:	d9002c15 	stw	r4,176(sp)
 4023ef0:	282f883a 	mov	r23,r5
 4023ef4:	302b883a 	mov	r21,r6
 4023ef8:	d9c02d15 	stw	r7,180(sp)
 4023efc:	df004615 	stw	fp,280(sp)
 4023f00:	dd804415 	stw	r22,272(sp)
 4023f04:	dd004215 	stw	r20,264(sp)
 4023f08:	dcc04115 	stw	r19,260(sp)
 4023f0c:	dc804015 	stw	r18,256(sp)
 4023f10:	dc403f15 	stw	r17,252(sp)
 4023f14:	dc003e15 	stw	r16,248(sp)
 4023f18:	4028d500 	call	4028d50 <_localeconv_r>
 4023f1c:	10800017 	ldw	r2,0(r2)
 4023f20:	1009883a 	mov	r4,r2
 4023f24:	d8803415 	stw	r2,208(sp)
 4023f28:	4023df40 	call	4023df4 <strlen>
 4023f2c:	d8803715 	stw	r2,220(sp)
 4023f30:	d8802c17 	ldw	r2,176(sp)
 4023f34:	10000226 	beq	r2,zero,4023f40 <___vfprintf_internal_r+0x64>
 4023f38:	10800e17 	ldw	r2,56(r2)
 4023f3c:	1000f926 	beq	r2,zero,4024324 <___vfprintf_internal_r+0x448>
 4023f40:	b880030b 	ldhu	r2,12(r23)
 4023f44:	10c8000c 	andi	r3,r2,8192
 4023f48:	1800061e 	bne	r3,zero,4023f64 <___vfprintf_internal_r+0x88>
 4023f4c:	b9001917 	ldw	r4,100(r23)
 4023f50:	00f7ffc4 	movi	r3,-8193
 4023f54:	10880014 	ori	r2,r2,8192
 4023f58:	20c6703a 	and	r3,r4,r3
 4023f5c:	b880030d 	sth	r2,12(r23)
 4023f60:	b8c01915 	stw	r3,100(r23)
 4023f64:	10c0020c 	andi	r3,r2,8
 4023f68:	1800c126 	beq	r3,zero,4024270 <___vfprintf_internal_r+0x394>
 4023f6c:	b8c00417 	ldw	r3,16(r23)
 4023f70:	1800bf26 	beq	r3,zero,4024270 <___vfprintf_internal_r+0x394>
 4023f74:	1080068c 	andi	r2,r2,26
 4023f78:	00c00284 	movi	r3,10
 4023f7c:	10c0c426 	beq	r2,r3,4024290 <___vfprintf_internal_r+0x3b4>
 4023f80:	d8c00404 	addi	r3,sp,16
 4023f84:	05000034 	movhi	r20,0
 4023f88:	d9001e04 	addi	r4,sp,120
 4023f8c:	a5006cc4 	addi	r20,r20,435
 4023f90:	d8c01e15 	stw	r3,120(sp)
 4023f94:	d8002015 	stw	zero,128(sp)
 4023f98:	d8001f15 	stw	zero,124(sp)
 4023f9c:	d8003315 	stw	zero,204(sp)
 4023fa0:	d8003615 	stw	zero,216(sp)
 4023fa4:	d8003815 	stw	zero,224(sp)
 4023fa8:	1811883a 	mov	r8,r3
 4023fac:	d8003915 	stw	zero,228(sp)
 4023fb0:	d8003a15 	stw	zero,232(sp)
 4023fb4:	d8002f15 	stw	zero,188(sp)
 4023fb8:	d9002815 	stw	r4,160(sp)
 4023fbc:	a8800007 	ldb	r2,0(r21)
 4023fc0:	10027b26 	beq	r2,zero,40249b0 <___vfprintf_internal_r+0xad4>
 4023fc4:	00c00944 	movi	r3,37
 4023fc8:	a821883a 	mov	r16,r21
 4023fcc:	10c0021e 	bne	r2,r3,4023fd8 <___vfprintf_internal_r+0xfc>
 4023fd0:	00001406 	br	4024024 <___vfprintf_internal_r+0x148>
 4023fd4:	10c00326 	beq	r2,r3,4023fe4 <___vfprintf_internal_r+0x108>
 4023fd8:	84000044 	addi	r16,r16,1
 4023fdc:	80800007 	ldb	r2,0(r16)
 4023fe0:	103ffc1e 	bne	r2,zero,4023fd4 <__flash_rwdata_start+0xffff30ac>
 4023fe4:	8563c83a 	sub	r17,r16,r21
 4023fe8:	88000e26 	beq	r17,zero,4024024 <___vfprintf_internal_r+0x148>
 4023fec:	d8c02017 	ldw	r3,128(sp)
 4023ff0:	d8801f17 	ldw	r2,124(sp)
 4023ff4:	45400015 	stw	r21,0(r8)
 4023ff8:	1c47883a 	add	r3,r3,r17
 4023ffc:	10800044 	addi	r2,r2,1
 4024000:	d8c02015 	stw	r3,128(sp)
 4024004:	44400115 	stw	r17,4(r8)
 4024008:	d8801f15 	stw	r2,124(sp)
 402400c:	00c001c4 	movi	r3,7
 4024010:	1880a716 	blt	r3,r2,40242b0 <___vfprintf_internal_r+0x3d4>
 4024014:	42000204 	addi	r8,r8,8
 4024018:	d9402f17 	ldw	r5,188(sp)
 402401c:	2c4b883a 	add	r5,r5,r17
 4024020:	d9402f15 	stw	r5,188(sp)
 4024024:	80800007 	ldb	r2,0(r16)
 4024028:	1000a826 	beq	r2,zero,40242cc <___vfprintf_internal_r+0x3f0>
 402402c:	84400047 	ldb	r17,1(r16)
 4024030:	00bfffc4 	movi	r2,-1
 4024034:	85400044 	addi	r21,r16,1
 4024038:	d8002785 	stb	zero,158(sp)
 402403c:	0007883a 	mov	r3,zero
 4024040:	000f883a 	mov	r7,zero
 4024044:	d8802915 	stw	r2,164(sp)
 4024048:	d8003115 	stw	zero,196(sp)
 402404c:	0025883a 	mov	r18,zero
 4024050:	01401604 	movi	r5,88
 4024054:	01800244 	movi	r6,9
 4024058:	02800a84 	movi	r10,42
 402405c:	02401b04 	movi	r9,108
 4024060:	ad400044 	addi	r21,r21,1
 4024064:	88bff804 	addi	r2,r17,-32
 4024068:	28830436 	bltu	r5,r2,4024c7c <___vfprintf_internal_r+0xda0>
 402406c:	100490ba 	slli	r2,r2,2
 4024070:	010100b4 	movhi	r4,1026
 4024074:	21102104 	addi	r4,r4,16516
 4024078:	1105883a 	add	r2,r2,r4
 402407c:	10800017 	ldw	r2,0(r2)
 4024080:	1000683a 	jmp	r2
 4024084:	04024b9c 	xori	r16,zero,2350
 4024088:	04024c7c 	xorhi	r16,zero,2353
 402408c:	04024c7c 	xorhi	r16,zero,2353
 4024090:	04024bbc 	xorhi	r16,zero,2350
 4024094:	04024c7c 	xorhi	r16,zero,2353
 4024098:	04024c7c 	xorhi	r16,zero,2353
 402409c:	04024c7c 	xorhi	r16,zero,2353
 40240a0:	04024c7c 	xorhi	r16,zero,2353
 40240a4:	04024c7c 	xorhi	r16,zero,2353
 40240a8:	04024c7c 	xorhi	r16,zero,2353
 40240ac:	04024330 	cmpltui	r16,zero,2316
 40240b0:	04024ad8 	cmpnei	r16,zero,2347
 40240b4:	04024c7c 	xorhi	r16,zero,2353
 40240b8:	040241f8 	rdprs	r16,zero,2311
 40240bc:	04024358 	cmpnei	r16,zero,2317
 40240c0:	04024c7c 	xorhi	r16,zero,2353
 40240c4:	04024398 	cmpnei	r16,zero,2318
 40240c8:	040243a4 	muli	r16,zero,2318
 40240cc:	040243a4 	muli	r16,zero,2318
 40240d0:	040243a4 	muli	r16,zero,2318
 40240d4:	040243a4 	muli	r16,zero,2318
 40240d8:	040243a4 	muli	r16,zero,2318
 40240dc:	040243a4 	muli	r16,zero,2318
 40240e0:	040243a4 	muli	r16,zero,2318
 40240e4:	040243a4 	muli	r16,zero,2318
 40240e8:	040243a4 	muli	r16,zero,2318
 40240ec:	04024c7c 	xorhi	r16,zero,2353
 40240f0:	04024c7c 	xorhi	r16,zero,2353
 40240f4:	04024c7c 	xorhi	r16,zero,2353
 40240f8:	04024c7c 	xorhi	r16,zero,2353
 40240fc:	04024c7c 	xorhi	r16,zero,2353
 4024100:	04024c7c 	xorhi	r16,zero,2353
 4024104:	04024c7c 	xorhi	r16,zero,2353
 4024108:	04024c7c 	xorhi	r16,zero,2353
 402410c:	04024c7c 	xorhi	r16,zero,2353
 4024110:	04024c7c 	xorhi	r16,zero,2353
 4024114:	040243d8 	cmpnei	r16,zero,2319
 4024118:	04024494 	movui	r16,2322
 402411c:	04024c7c 	xorhi	r16,zero,2353
 4024120:	04024494 	movui	r16,2322
 4024124:	04024c7c 	xorhi	r16,zero,2353
 4024128:	04024c7c 	xorhi	r16,zero,2353
 402412c:	04024c7c 	xorhi	r16,zero,2353
 4024130:	04024c7c 	xorhi	r16,zero,2353
 4024134:	04024534 	movhi	r16,2324
 4024138:	04024c7c 	xorhi	r16,zero,2353
 402413c:	04024c7c 	xorhi	r16,zero,2353
 4024140:	04024540 	call	402454 <_gp+0x3f8620>
 4024144:	04024c7c 	xorhi	r16,zero,2353
 4024148:	04024c7c 	xorhi	r16,zero,2353
 402414c:	04024c7c 	xorhi	r16,zero,2353
 4024150:	04024c7c 	xorhi	r16,zero,2353
 4024154:	04024c7c 	xorhi	r16,zero,2353
 4024158:	040249b8 	rdprs	r16,zero,2342
 402415c:	04024c7c 	xorhi	r16,zero,2353
 4024160:	04024c7c 	xorhi	r16,zero,2353
 4024164:	04024a18 	cmpnei	r16,zero,2344
 4024168:	04024c7c 	xorhi	r16,zero,2353
 402416c:	04024c7c 	xorhi	r16,zero,2353
 4024170:	04024c7c 	xorhi	r16,zero,2353
 4024174:	04024c7c 	xorhi	r16,zero,2353
 4024178:	04024c7c 	xorhi	r16,zero,2353
 402417c:	04024c7c 	xorhi	r16,zero,2353
 4024180:	04024c7c 	xorhi	r16,zero,2353
 4024184:	04024c7c 	xorhi	r16,zero,2353
 4024188:	04024c7c 	xorhi	r16,zero,2353
 402418c:	04024c7c 	xorhi	r16,zero,2353
 4024190:	04024c28 	cmpgeui	r16,zero,2352
 4024194:	04024bc8 	cmpgei	r16,zero,2351
 4024198:	04024494 	movui	r16,2322
 402419c:	04024494 	movui	r16,2322
 40241a0:	04024494 	movui	r16,2322
 40241a4:	04024bd8 	cmpnei	r16,zero,2351
 40241a8:	04024bc8 	cmpgei	r16,zero,2351
 40241ac:	04024c7c 	xorhi	r16,zero,2353
 40241b0:	04024c7c 	xorhi	r16,zero,2353
 40241b4:	04024be4 	muli	r16,zero,2351
 40241b8:	04024c7c 	xorhi	r16,zero,2353
 40241bc:	04024bf4 	movhi	r16,2351
 40241c0:	04024ac8 	cmpgei	r16,zero,2347
 40241c4:	04024204 	movi	r16,2312
 40241c8:	04024ae8 	cmpgeui	r16,zero,2347
 40241cc:	04024c7c 	xorhi	r16,zero,2353
 40241d0:	04024af4 	movhi	r16,2347
 40241d4:	04024c7c 	xorhi	r16,zero,2353
 40241d8:	04024b50 	cmplti	r16,zero,2349
 40241dc:	04024c7c 	xorhi	r16,zero,2353
 40241e0:	04024c7c 	xorhi	r16,zero,2353
 40241e4:	04024b60 	cmpeqi	r16,zero,2349
 40241e8:	d9003117 	ldw	r4,196(sp)
 40241ec:	d8802d15 	stw	r2,180(sp)
 40241f0:	0109c83a 	sub	r4,zero,r4
 40241f4:	d9003115 	stw	r4,196(sp)
 40241f8:	94800114 	ori	r18,r18,4
 40241fc:	ac400007 	ldb	r17,0(r21)
 4024200:	003f9706 	br	4024060 <__flash_rwdata_start+0xffff3138>
 4024204:	00800c04 	movi	r2,48
 4024208:	d9002d17 	ldw	r4,180(sp)
 402420c:	d9402917 	ldw	r5,164(sp)
 4024210:	d8802705 	stb	r2,156(sp)
 4024214:	00801e04 	movi	r2,120
 4024218:	d8802745 	stb	r2,157(sp)
 402421c:	d8002785 	stb	zero,158(sp)
 4024220:	20c00104 	addi	r3,r4,4
 4024224:	24c00017 	ldw	r19,0(r4)
 4024228:	002d883a 	mov	r22,zero
 402422c:	90800094 	ori	r2,r18,2
 4024230:	28029a16 	blt	r5,zero,4024c9c <___vfprintf_internal_r+0xdc0>
 4024234:	00bfdfc4 	movi	r2,-129
 4024238:	90a4703a 	and	r18,r18,r2
 402423c:	d8c02d15 	stw	r3,180(sp)
 4024240:	94800094 	ori	r18,r18,2
 4024244:	9802871e 	bne	r19,zero,4024c64 <___vfprintf_internal_r+0xd88>
 4024248:	00800034 	movhi	r2,0
 402424c:	10806604 	addi	r2,r2,408
 4024250:	d8803915 	stw	r2,228(sp)
 4024254:	04401e04 	movi	r17,120
 4024258:	d8802917 	ldw	r2,164(sp)
 402425c:	0039883a 	mov	fp,zero
 4024260:	1001e926 	beq	r2,zero,4024a08 <___vfprintf_internal_r+0xb2c>
 4024264:	0027883a 	mov	r19,zero
 4024268:	002d883a 	mov	r22,zero
 402426c:	00020506 	br	4024a84 <___vfprintf_internal_r+0xba8>
 4024270:	d9002c17 	ldw	r4,176(sp)
 4024274:	b80b883a 	mov	r5,r23
 4024278:	40261ac0 	call	40261ac <__swsetup_r>
 402427c:	1005ac1e 	bne	r2,zero,4025930 <___vfprintf_internal_r+0x1a54>
 4024280:	b880030b 	ldhu	r2,12(r23)
 4024284:	00c00284 	movi	r3,10
 4024288:	1080068c 	andi	r2,r2,26
 402428c:	10ff3c1e 	bne	r2,r3,4023f80 <__flash_rwdata_start+0xffff3058>
 4024290:	b880038f 	ldh	r2,14(r23)
 4024294:	103f3a16 	blt	r2,zero,4023f80 <__flash_rwdata_start+0xffff3058>
 4024298:	d9c02d17 	ldw	r7,180(sp)
 402429c:	d9002c17 	ldw	r4,176(sp)
 40242a0:	a80d883a 	mov	r6,r21
 40242a4:	b80b883a 	mov	r5,r23
 40242a8:	40260f00 	call	40260f0 <__sbprintf>
 40242ac:	00001106 	br	40242f4 <___vfprintf_internal_r+0x418>
 40242b0:	d9002c17 	ldw	r4,176(sp)
 40242b4:	d9801e04 	addi	r6,sp,120
 40242b8:	b80b883a 	mov	r5,r23
 40242bc:	402b4c00 	call	402b4c0 <__sprint_r>
 40242c0:	1000081e 	bne	r2,zero,40242e4 <___vfprintf_internal_r+0x408>
 40242c4:	da000404 	addi	r8,sp,16
 40242c8:	003f5306 	br	4024018 <__flash_rwdata_start+0xffff30f0>
 40242cc:	d8802017 	ldw	r2,128(sp)
 40242d0:	10000426 	beq	r2,zero,40242e4 <___vfprintf_internal_r+0x408>
 40242d4:	d9002c17 	ldw	r4,176(sp)
 40242d8:	d9801e04 	addi	r6,sp,120
 40242dc:	b80b883a 	mov	r5,r23
 40242e0:	402b4c00 	call	402b4c0 <__sprint_r>
 40242e4:	b880030b 	ldhu	r2,12(r23)
 40242e8:	1080100c 	andi	r2,r2,64
 40242ec:	1005901e 	bne	r2,zero,4025930 <___vfprintf_internal_r+0x1a54>
 40242f0:	d8802f17 	ldw	r2,188(sp)
 40242f4:	dfc04717 	ldw	ra,284(sp)
 40242f8:	df004617 	ldw	fp,280(sp)
 40242fc:	ddc04517 	ldw	r23,276(sp)
 4024300:	dd804417 	ldw	r22,272(sp)
 4024304:	dd404317 	ldw	r21,268(sp)
 4024308:	dd004217 	ldw	r20,264(sp)
 402430c:	dcc04117 	ldw	r19,260(sp)
 4024310:	dc804017 	ldw	r18,256(sp)
 4024314:	dc403f17 	ldw	r17,252(sp)
 4024318:	dc003e17 	ldw	r16,248(sp)
 402431c:	dec04804 	addi	sp,sp,288
 4024320:	f800283a 	ret
 4024324:	d9002c17 	ldw	r4,176(sp)
 4024328:	40281800 	call	4028180 <__sinit>
 402432c:	003f0406 	br	4023f40 <__flash_rwdata_start+0xffff3018>
 4024330:	d8802d17 	ldw	r2,180(sp)
 4024334:	d9002d17 	ldw	r4,180(sp)
 4024338:	10800017 	ldw	r2,0(r2)
 402433c:	d8803115 	stw	r2,196(sp)
 4024340:	20800104 	addi	r2,r4,4
 4024344:	d9003117 	ldw	r4,196(sp)
 4024348:	203fa716 	blt	r4,zero,40241e8 <__flash_rwdata_start+0xffff32c0>
 402434c:	d8802d15 	stw	r2,180(sp)
 4024350:	ac400007 	ldb	r17,0(r21)
 4024354:	003f4206 	br	4024060 <__flash_rwdata_start+0xffff3138>
 4024358:	ac400007 	ldb	r17,0(r21)
 402435c:	aac00044 	addi	r11,r21,1
 4024360:	8a872826 	beq	r17,r10,4026004 <___vfprintf_internal_r+0x2128>
 4024364:	88bff404 	addi	r2,r17,-48
 4024368:	0009883a 	mov	r4,zero
 402436c:	30867d36 	bltu	r6,r2,4025d64 <___vfprintf_internal_r+0x1e88>
 4024370:	5c400007 	ldb	r17,0(r11)
 4024374:	210002a4 	muli	r4,r4,10
 4024378:	5d400044 	addi	r21,r11,1
 402437c:	a817883a 	mov	r11,r21
 4024380:	2089883a 	add	r4,r4,r2
 4024384:	88bff404 	addi	r2,r17,-48
 4024388:	30bff92e 	bgeu	r6,r2,4024370 <__flash_rwdata_start+0xffff3448>
 402438c:	2005c916 	blt	r4,zero,4025ab4 <___vfprintf_internal_r+0x1bd8>
 4024390:	d9002915 	stw	r4,164(sp)
 4024394:	003f3306 	br	4024064 <__flash_rwdata_start+0xffff313c>
 4024398:	94802014 	ori	r18,r18,128
 402439c:	ac400007 	ldb	r17,0(r21)
 40243a0:	003f2f06 	br	4024060 <__flash_rwdata_start+0xffff3138>
 40243a4:	a809883a 	mov	r4,r21
 40243a8:	d8003115 	stw	zero,196(sp)
 40243ac:	88bff404 	addi	r2,r17,-48
 40243b0:	0017883a 	mov	r11,zero
 40243b4:	24400007 	ldb	r17,0(r4)
 40243b8:	5ac002a4 	muli	r11,r11,10
 40243bc:	ad400044 	addi	r21,r21,1
 40243c0:	a809883a 	mov	r4,r21
 40243c4:	12d7883a 	add	r11,r2,r11
 40243c8:	88bff404 	addi	r2,r17,-48
 40243cc:	30bff92e 	bgeu	r6,r2,40243b4 <__flash_rwdata_start+0xffff348c>
 40243d0:	dac03115 	stw	r11,196(sp)
 40243d4:	003f2306 	br	4024064 <__flash_rwdata_start+0xffff313c>
 40243d8:	18c03fcc 	andi	r3,r3,255
 40243dc:	18072b1e 	bne	r3,zero,402608c <___vfprintf_internal_r+0x21b0>
 40243e0:	94800414 	ori	r18,r18,16
 40243e4:	9080080c 	andi	r2,r18,32
 40243e8:	10037b26 	beq	r2,zero,40251d8 <___vfprintf_internal_r+0x12fc>
 40243ec:	d9402d17 	ldw	r5,180(sp)
 40243f0:	28800117 	ldw	r2,4(r5)
 40243f4:	2cc00017 	ldw	r19,0(r5)
 40243f8:	29400204 	addi	r5,r5,8
 40243fc:	d9402d15 	stw	r5,180(sp)
 4024400:	102d883a 	mov	r22,r2
 4024404:	10044b16 	blt	r2,zero,4025534 <___vfprintf_internal_r+0x1658>
 4024408:	d9402917 	ldw	r5,164(sp)
 402440c:	df002783 	ldbu	fp,158(sp)
 4024410:	2803bc16 	blt	r5,zero,4025304 <___vfprintf_internal_r+0x1428>
 4024414:	00ffdfc4 	movi	r3,-129
 4024418:	9d84b03a 	or	r2,r19,r22
 402441c:	90e4703a 	and	r18,r18,r3
 4024420:	10017726 	beq	r2,zero,4024a00 <___vfprintf_internal_r+0xb24>
 4024424:	b0038326 	beq	r22,zero,4025234 <___vfprintf_internal_r+0x1358>
 4024428:	dc402a15 	stw	r17,168(sp)
 402442c:	dc001e04 	addi	r16,sp,120
 4024430:	b023883a 	mov	r17,r22
 4024434:	402d883a 	mov	r22,r8
 4024438:	9809883a 	mov	r4,r19
 402443c:	880b883a 	mov	r5,r17
 4024440:	01800284 	movi	r6,10
 4024444:	000f883a 	mov	r7,zero
 4024448:	402d9180 	call	402d918 <__umoddi3>
 402444c:	10800c04 	addi	r2,r2,48
 4024450:	843fffc4 	addi	r16,r16,-1
 4024454:	9809883a 	mov	r4,r19
 4024458:	880b883a 	mov	r5,r17
 402445c:	80800005 	stb	r2,0(r16)
 4024460:	01800284 	movi	r6,10
 4024464:	000f883a 	mov	r7,zero
 4024468:	402d3a00 	call	402d3a0 <__udivdi3>
 402446c:	1027883a 	mov	r19,r2
 4024470:	10c4b03a 	or	r2,r2,r3
 4024474:	1823883a 	mov	r17,r3
 4024478:	103fef1e 	bne	r2,zero,4024438 <__flash_rwdata_start+0xffff3510>
 402447c:	d8c02817 	ldw	r3,160(sp)
 4024480:	dc402a17 	ldw	r17,168(sp)
 4024484:	b011883a 	mov	r8,r22
 4024488:	1c07c83a 	sub	r3,r3,r16
 402448c:	d8c02e15 	stw	r3,184(sp)
 4024490:	00005906 	br	40245f8 <___vfprintf_internal_r+0x71c>
 4024494:	18c03fcc 	andi	r3,r3,255
 4024498:	1806fa1e 	bne	r3,zero,4026084 <___vfprintf_internal_r+0x21a8>
 402449c:	9080020c 	andi	r2,r18,8
 40244a0:	10048a26 	beq	r2,zero,40256cc <___vfprintf_internal_r+0x17f0>
 40244a4:	d8c02d17 	ldw	r3,180(sp)
 40244a8:	d9002d17 	ldw	r4,180(sp)
 40244ac:	d9402d17 	ldw	r5,180(sp)
 40244b0:	18c00017 	ldw	r3,0(r3)
 40244b4:	21000117 	ldw	r4,4(r4)
 40244b8:	29400204 	addi	r5,r5,8
 40244bc:	d8c03615 	stw	r3,216(sp)
 40244c0:	d9003815 	stw	r4,224(sp)
 40244c4:	d9402d15 	stw	r5,180(sp)
 40244c8:	d9003617 	ldw	r4,216(sp)
 40244cc:	d9403817 	ldw	r5,224(sp)
 40244d0:	da003d15 	stw	r8,244(sp)
 40244d4:	04000044 	movi	r16,1
 40244d8:	402142c0 	call	402142c <__fpclassifyd>
 40244dc:	da003d17 	ldw	r8,244(sp)
 40244e0:	14041f1e 	bne	r2,r16,4025560 <___vfprintf_internal_r+0x1684>
 40244e4:	d9003617 	ldw	r4,216(sp)
 40244e8:	d9403817 	ldw	r5,224(sp)
 40244ec:	000d883a 	mov	r6,zero
 40244f0:	000f883a 	mov	r7,zero
 40244f4:	40229600 	call	4022960 <__ledf2>
 40244f8:	da003d17 	ldw	r8,244(sp)
 40244fc:	1005be16 	blt	r2,zero,4025bf8 <___vfprintf_internal_r+0x1d1c>
 4024500:	df002783 	ldbu	fp,158(sp)
 4024504:	008011c4 	movi	r2,71
 4024508:	1445330e 	bge	r2,r17,40259d8 <___vfprintf_internal_r+0x1afc>
 402450c:	04000034 	movhi	r16,0
 4024510:	84005e04 	addi	r16,r16,376
 4024514:	00c000c4 	movi	r3,3
 4024518:	00bfdfc4 	movi	r2,-129
 402451c:	d8c02a15 	stw	r3,168(sp)
 4024520:	90a4703a 	and	r18,r18,r2
 4024524:	d8c02e15 	stw	r3,184(sp)
 4024528:	d8002915 	stw	zero,164(sp)
 402452c:	d8003215 	stw	zero,200(sp)
 4024530:	00003706 	br	4024610 <___vfprintf_internal_r+0x734>
 4024534:	94800214 	ori	r18,r18,8
 4024538:	ac400007 	ldb	r17,0(r21)
 402453c:	003ec806 	br	4024060 <__flash_rwdata_start+0xffff3138>
 4024540:	18c03fcc 	andi	r3,r3,255
 4024544:	1806db1e 	bne	r3,zero,40260b4 <___vfprintf_internal_r+0x21d8>
 4024548:	94800414 	ori	r18,r18,16
 402454c:	9080080c 	andi	r2,r18,32
 4024550:	1002d826 	beq	r2,zero,40250b4 <___vfprintf_internal_r+0x11d8>
 4024554:	d9402d17 	ldw	r5,180(sp)
 4024558:	d8c02917 	ldw	r3,164(sp)
 402455c:	d8002785 	stb	zero,158(sp)
 4024560:	28800204 	addi	r2,r5,8
 4024564:	2cc00017 	ldw	r19,0(r5)
 4024568:	2d800117 	ldw	r22,4(r5)
 402456c:	18048f16 	blt	r3,zero,40257ac <___vfprintf_internal_r+0x18d0>
 4024570:	013fdfc4 	movi	r4,-129
 4024574:	9d86b03a 	or	r3,r19,r22
 4024578:	d8802d15 	stw	r2,180(sp)
 402457c:	9124703a 	and	r18,r18,r4
 4024580:	1802d91e 	bne	r3,zero,40250e8 <___vfprintf_internal_r+0x120c>
 4024584:	d8c02917 	ldw	r3,164(sp)
 4024588:	0039883a 	mov	fp,zero
 402458c:	1805c326 	beq	r3,zero,4025c9c <___vfprintf_internal_r+0x1dc0>
 4024590:	0027883a 	mov	r19,zero
 4024594:	002d883a 	mov	r22,zero
 4024598:	dc001e04 	addi	r16,sp,120
 402459c:	9806d0fa 	srli	r3,r19,3
 40245a0:	b008977a 	slli	r4,r22,29
 40245a4:	b02cd0fa 	srli	r22,r22,3
 40245a8:	9cc001cc 	andi	r19,r19,7
 40245ac:	98800c04 	addi	r2,r19,48
 40245b0:	843fffc4 	addi	r16,r16,-1
 40245b4:	20e6b03a 	or	r19,r4,r3
 40245b8:	80800005 	stb	r2,0(r16)
 40245bc:	9d86b03a 	or	r3,r19,r22
 40245c0:	183ff61e 	bne	r3,zero,402459c <__flash_rwdata_start+0xffff3674>
 40245c4:	90c0004c 	andi	r3,r18,1
 40245c8:	18013b26 	beq	r3,zero,4024ab8 <___vfprintf_internal_r+0xbdc>
 40245cc:	10803fcc 	andi	r2,r2,255
 40245d0:	1080201c 	xori	r2,r2,128
 40245d4:	10bfe004 	addi	r2,r2,-128
 40245d8:	00c00c04 	movi	r3,48
 40245dc:	10c13626 	beq	r2,r3,4024ab8 <___vfprintf_internal_r+0xbdc>
 40245e0:	80ffffc5 	stb	r3,-1(r16)
 40245e4:	d8c02817 	ldw	r3,160(sp)
 40245e8:	80bfffc4 	addi	r2,r16,-1
 40245ec:	1021883a 	mov	r16,r2
 40245f0:	1887c83a 	sub	r3,r3,r2
 40245f4:	d8c02e15 	stw	r3,184(sp)
 40245f8:	d8802e17 	ldw	r2,184(sp)
 40245fc:	d9002917 	ldw	r4,164(sp)
 4024600:	1100010e 	bge	r2,r4,4024608 <___vfprintf_internal_r+0x72c>
 4024604:	2005883a 	mov	r2,r4
 4024608:	d8802a15 	stw	r2,168(sp)
 402460c:	d8003215 	stw	zero,200(sp)
 4024610:	e7003fcc 	andi	fp,fp,255
 4024614:	e700201c 	xori	fp,fp,128
 4024618:	e73fe004 	addi	fp,fp,-128
 402461c:	e0000326 	beq	fp,zero,402462c <___vfprintf_internal_r+0x750>
 4024620:	d8c02a17 	ldw	r3,168(sp)
 4024624:	18c00044 	addi	r3,r3,1
 4024628:	d8c02a15 	stw	r3,168(sp)
 402462c:	90c0008c 	andi	r3,r18,2
 4024630:	d8c02b15 	stw	r3,172(sp)
 4024634:	18000326 	beq	r3,zero,4024644 <___vfprintf_internal_r+0x768>
 4024638:	d8c02a17 	ldw	r3,168(sp)
 402463c:	18c00084 	addi	r3,r3,2
 4024640:	d8c02a15 	stw	r3,168(sp)
 4024644:	90c0210c 	andi	r3,r18,132
 4024648:	d8c03015 	stw	r3,192(sp)
 402464c:	1801a31e 	bne	r3,zero,4024cdc <___vfprintf_internal_r+0xe00>
 4024650:	d9003117 	ldw	r4,196(sp)
 4024654:	d8c02a17 	ldw	r3,168(sp)
 4024658:	20e7c83a 	sub	r19,r4,r3
 402465c:	04c19f0e 	bge	zero,r19,4024cdc <___vfprintf_internal_r+0xe00>
 4024660:	02400404 	movi	r9,16
 4024664:	d8c02017 	ldw	r3,128(sp)
 4024668:	d8801f17 	ldw	r2,124(sp)
 402466c:	4cc50d0e 	bge	r9,r19,4025aa4 <___vfprintf_internal_r+0x1bc8>
 4024670:	01400034 	movhi	r5,0
 4024674:	294070c4 	addi	r5,r5,451
 4024678:	dc403b15 	stw	r17,236(sp)
 402467c:	d9403515 	stw	r5,212(sp)
 4024680:	9823883a 	mov	r17,r19
 4024684:	482d883a 	mov	r22,r9
 4024688:	9027883a 	mov	r19,r18
 402468c:	070001c4 	movi	fp,7
 4024690:	8025883a 	mov	r18,r16
 4024694:	dc002c17 	ldw	r16,176(sp)
 4024698:	00000306 	br	40246a8 <___vfprintf_internal_r+0x7cc>
 402469c:	8c7ffc04 	addi	r17,r17,-16
 40246a0:	42000204 	addi	r8,r8,8
 40246a4:	b440130e 	bge	r22,r17,40246f4 <___vfprintf_internal_r+0x818>
 40246a8:	01000034 	movhi	r4,0
 40246ac:	18c00404 	addi	r3,r3,16
 40246b0:	10800044 	addi	r2,r2,1
 40246b4:	210070c4 	addi	r4,r4,451
 40246b8:	41000015 	stw	r4,0(r8)
 40246bc:	45800115 	stw	r22,4(r8)
 40246c0:	d8c02015 	stw	r3,128(sp)
 40246c4:	d8801f15 	stw	r2,124(sp)
 40246c8:	e0bff40e 	bge	fp,r2,402469c <__flash_rwdata_start+0xffff3774>
 40246cc:	d9801e04 	addi	r6,sp,120
 40246d0:	b80b883a 	mov	r5,r23
 40246d4:	8009883a 	mov	r4,r16
 40246d8:	402b4c00 	call	402b4c0 <__sprint_r>
 40246dc:	103f011e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 40246e0:	8c7ffc04 	addi	r17,r17,-16
 40246e4:	d8c02017 	ldw	r3,128(sp)
 40246e8:	d8801f17 	ldw	r2,124(sp)
 40246ec:	da000404 	addi	r8,sp,16
 40246f0:	b47fed16 	blt	r22,r17,40246a8 <__flash_rwdata_start+0xffff3780>
 40246f4:	9021883a 	mov	r16,r18
 40246f8:	9825883a 	mov	r18,r19
 40246fc:	8827883a 	mov	r19,r17
 4024700:	dc403b17 	ldw	r17,236(sp)
 4024704:	d9403517 	ldw	r5,212(sp)
 4024708:	98c7883a 	add	r3,r19,r3
 402470c:	10800044 	addi	r2,r2,1
 4024710:	41400015 	stw	r5,0(r8)
 4024714:	44c00115 	stw	r19,4(r8)
 4024718:	d8c02015 	stw	r3,128(sp)
 402471c:	d8801f15 	stw	r2,124(sp)
 4024720:	010001c4 	movi	r4,7
 4024724:	2082a316 	blt	r4,r2,40251b4 <___vfprintf_internal_r+0x12d8>
 4024728:	df002787 	ldb	fp,158(sp)
 402472c:	42000204 	addi	r8,r8,8
 4024730:	e0000c26 	beq	fp,zero,4024764 <___vfprintf_internal_r+0x888>
 4024734:	d8801f17 	ldw	r2,124(sp)
 4024738:	d9002784 	addi	r4,sp,158
 402473c:	18c00044 	addi	r3,r3,1
 4024740:	10800044 	addi	r2,r2,1
 4024744:	41000015 	stw	r4,0(r8)
 4024748:	01000044 	movi	r4,1
 402474c:	41000115 	stw	r4,4(r8)
 4024750:	d8c02015 	stw	r3,128(sp)
 4024754:	d8801f15 	stw	r2,124(sp)
 4024758:	010001c4 	movi	r4,7
 402475c:	20823c16 	blt	r4,r2,4025050 <___vfprintf_internal_r+0x1174>
 4024760:	42000204 	addi	r8,r8,8
 4024764:	d8802b17 	ldw	r2,172(sp)
 4024768:	10000c26 	beq	r2,zero,402479c <___vfprintf_internal_r+0x8c0>
 402476c:	d8801f17 	ldw	r2,124(sp)
 4024770:	d9002704 	addi	r4,sp,156
 4024774:	18c00084 	addi	r3,r3,2
 4024778:	10800044 	addi	r2,r2,1
 402477c:	41000015 	stw	r4,0(r8)
 4024780:	01000084 	movi	r4,2
 4024784:	41000115 	stw	r4,4(r8)
 4024788:	d8c02015 	stw	r3,128(sp)
 402478c:	d8801f15 	stw	r2,124(sp)
 4024790:	010001c4 	movi	r4,7
 4024794:	20823616 	blt	r4,r2,4025070 <___vfprintf_internal_r+0x1194>
 4024798:	42000204 	addi	r8,r8,8
 402479c:	d9003017 	ldw	r4,192(sp)
 40247a0:	00802004 	movi	r2,128
 40247a4:	20819926 	beq	r4,r2,4024e0c <___vfprintf_internal_r+0xf30>
 40247a8:	d9402917 	ldw	r5,164(sp)
 40247ac:	d8802e17 	ldw	r2,184(sp)
 40247b0:	28adc83a 	sub	r22,r5,r2
 40247b4:	0580310e 	bge	zero,r22,402487c <___vfprintf_internal_r+0x9a0>
 40247b8:	07000404 	movi	fp,16
 40247bc:	d8801f17 	ldw	r2,124(sp)
 40247c0:	e584140e 	bge	fp,r22,4025814 <___vfprintf_internal_r+0x1938>
 40247c4:	01400034 	movhi	r5,0
 40247c8:	29406cc4 	addi	r5,r5,435
 40247cc:	dc402915 	stw	r17,164(sp)
 40247d0:	d9402b15 	stw	r5,172(sp)
 40247d4:	b023883a 	mov	r17,r22
 40247d8:	04c001c4 	movi	r19,7
 40247dc:	a82d883a 	mov	r22,r21
 40247e0:	902b883a 	mov	r21,r18
 40247e4:	8025883a 	mov	r18,r16
 40247e8:	dc002c17 	ldw	r16,176(sp)
 40247ec:	00000306 	br	40247fc <___vfprintf_internal_r+0x920>
 40247f0:	8c7ffc04 	addi	r17,r17,-16
 40247f4:	42000204 	addi	r8,r8,8
 40247f8:	e440110e 	bge	fp,r17,4024840 <___vfprintf_internal_r+0x964>
 40247fc:	18c00404 	addi	r3,r3,16
 4024800:	10800044 	addi	r2,r2,1
 4024804:	45000015 	stw	r20,0(r8)
 4024808:	47000115 	stw	fp,4(r8)
 402480c:	d8c02015 	stw	r3,128(sp)
 4024810:	d8801f15 	stw	r2,124(sp)
 4024814:	98bff60e 	bge	r19,r2,40247f0 <__flash_rwdata_start+0xffff38c8>
 4024818:	d9801e04 	addi	r6,sp,120
 402481c:	b80b883a 	mov	r5,r23
 4024820:	8009883a 	mov	r4,r16
 4024824:	402b4c00 	call	402b4c0 <__sprint_r>
 4024828:	103eae1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 402482c:	8c7ffc04 	addi	r17,r17,-16
 4024830:	d8c02017 	ldw	r3,128(sp)
 4024834:	d8801f17 	ldw	r2,124(sp)
 4024838:	da000404 	addi	r8,sp,16
 402483c:	e47fef16 	blt	fp,r17,40247fc <__flash_rwdata_start+0xffff38d4>
 4024840:	9021883a 	mov	r16,r18
 4024844:	a825883a 	mov	r18,r21
 4024848:	b02b883a 	mov	r21,r22
 402484c:	882d883a 	mov	r22,r17
 4024850:	dc402917 	ldw	r17,164(sp)
 4024854:	d9002b17 	ldw	r4,172(sp)
 4024858:	1d87883a 	add	r3,r3,r22
 402485c:	10800044 	addi	r2,r2,1
 4024860:	41000015 	stw	r4,0(r8)
 4024864:	45800115 	stw	r22,4(r8)
 4024868:	d8c02015 	stw	r3,128(sp)
 402486c:	d8801f15 	stw	r2,124(sp)
 4024870:	010001c4 	movi	r4,7
 4024874:	2081ee16 	blt	r4,r2,4025030 <___vfprintf_internal_r+0x1154>
 4024878:	42000204 	addi	r8,r8,8
 402487c:	9080400c 	andi	r2,r18,256
 4024880:	1001181e 	bne	r2,zero,4024ce4 <___vfprintf_internal_r+0xe08>
 4024884:	d9402e17 	ldw	r5,184(sp)
 4024888:	d8801f17 	ldw	r2,124(sp)
 402488c:	44000015 	stw	r16,0(r8)
 4024890:	1947883a 	add	r3,r3,r5
 4024894:	10800044 	addi	r2,r2,1
 4024898:	41400115 	stw	r5,4(r8)
 402489c:	d8c02015 	stw	r3,128(sp)
 40248a0:	d8801f15 	stw	r2,124(sp)
 40248a4:	010001c4 	movi	r4,7
 40248a8:	2081d316 	blt	r4,r2,4024ff8 <___vfprintf_internal_r+0x111c>
 40248ac:	42000204 	addi	r8,r8,8
 40248b0:	9480010c 	andi	r18,r18,4
 40248b4:	90003226 	beq	r18,zero,4024980 <___vfprintf_internal_r+0xaa4>
 40248b8:	d9403117 	ldw	r5,196(sp)
 40248bc:	d8802a17 	ldw	r2,168(sp)
 40248c0:	28a1c83a 	sub	r16,r5,r2
 40248c4:	04002e0e 	bge	zero,r16,4024980 <___vfprintf_internal_r+0xaa4>
 40248c8:	04400404 	movi	r17,16
 40248cc:	d8801f17 	ldw	r2,124(sp)
 40248d0:	8c04a20e 	bge	r17,r16,4025b5c <___vfprintf_internal_r+0x1c80>
 40248d4:	01400034 	movhi	r5,0
 40248d8:	294070c4 	addi	r5,r5,451
 40248dc:	d9403515 	stw	r5,212(sp)
 40248e0:	048001c4 	movi	r18,7
 40248e4:	dcc02c17 	ldw	r19,176(sp)
 40248e8:	00000306 	br	40248f8 <___vfprintf_internal_r+0xa1c>
 40248ec:	843ffc04 	addi	r16,r16,-16
 40248f0:	42000204 	addi	r8,r8,8
 40248f4:	8c00130e 	bge	r17,r16,4024944 <___vfprintf_internal_r+0xa68>
 40248f8:	01000034 	movhi	r4,0
 40248fc:	18c00404 	addi	r3,r3,16
 4024900:	10800044 	addi	r2,r2,1
 4024904:	210070c4 	addi	r4,r4,451
 4024908:	41000015 	stw	r4,0(r8)
 402490c:	44400115 	stw	r17,4(r8)
 4024910:	d8c02015 	stw	r3,128(sp)
 4024914:	d8801f15 	stw	r2,124(sp)
 4024918:	90bff40e 	bge	r18,r2,40248ec <__flash_rwdata_start+0xffff39c4>
 402491c:	d9801e04 	addi	r6,sp,120
 4024920:	b80b883a 	mov	r5,r23
 4024924:	9809883a 	mov	r4,r19
 4024928:	402b4c00 	call	402b4c0 <__sprint_r>
 402492c:	103e6d1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4024930:	843ffc04 	addi	r16,r16,-16
 4024934:	d8c02017 	ldw	r3,128(sp)
 4024938:	d8801f17 	ldw	r2,124(sp)
 402493c:	da000404 	addi	r8,sp,16
 4024940:	8c3fed16 	blt	r17,r16,40248f8 <__flash_rwdata_start+0xffff39d0>
 4024944:	d9403517 	ldw	r5,212(sp)
 4024948:	1c07883a 	add	r3,r3,r16
 402494c:	10800044 	addi	r2,r2,1
 4024950:	41400015 	stw	r5,0(r8)
 4024954:	44000115 	stw	r16,4(r8)
 4024958:	d8c02015 	stw	r3,128(sp)
 402495c:	d8801f15 	stw	r2,124(sp)
 4024960:	010001c4 	movi	r4,7
 4024964:	2080060e 	bge	r4,r2,4024980 <___vfprintf_internal_r+0xaa4>
 4024968:	d9002c17 	ldw	r4,176(sp)
 402496c:	d9801e04 	addi	r6,sp,120
 4024970:	b80b883a 	mov	r5,r23
 4024974:	402b4c00 	call	402b4c0 <__sprint_r>
 4024978:	103e5a1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 402497c:	d8c02017 	ldw	r3,128(sp)
 4024980:	d8803117 	ldw	r2,196(sp)
 4024984:	d9002a17 	ldw	r4,168(sp)
 4024988:	1100010e 	bge	r2,r4,4024990 <___vfprintf_internal_r+0xab4>
 402498c:	2005883a 	mov	r2,r4
 4024990:	d9402f17 	ldw	r5,188(sp)
 4024994:	288b883a 	add	r5,r5,r2
 4024998:	d9402f15 	stw	r5,188(sp)
 402499c:	18019e1e 	bne	r3,zero,4025018 <___vfprintf_internal_r+0x113c>
 40249a0:	a8800007 	ldb	r2,0(r21)
 40249a4:	d8001f15 	stw	zero,124(sp)
 40249a8:	da000404 	addi	r8,sp,16
 40249ac:	103d851e 	bne	r2,zero,4023fc4 <__flash_rwdata_start+0xffff309c>
 40249b0:	a821883a 	mov	r16,r21
 40249b4:	003d9b06 	br	4024024 <__flash_rwdata_start+0xffff30fc>
 40249b8:	18c03fcc 	andi	r3,r3,255
 40249bc:	1805c11e 	bne	r3,zero,40260c4 <___vfprintf_internal_r+0x21e8>
 40249c0:	94800414 	ori	r18,r18,16
 40249c4:	9080080c 	andi	r2,r18,32
 40249c8:	10020c26 	beq	r2,zero,40251fc <___vfprintf_internal_r+0x1320>
 40249cc:	d8802d17 	ldw	r2,180(sp)
 40249d0:	d9002917 	ldw	r4,164(sp)
 40249d4:	d8002785 	stb	zero,158(sp)
 40249d8:	10c00204 	addi	r3,r2,8
 40249dc:	14c00017 	ldw	r19,0(r2)
 40249e0:	15800117 	ldw	r22,4(r2)
 40249e4:	20040f16 	blt	r4,zero,4025a24 <___vfprintf_internal_r+0x1b48>
 40249e8:	013fdfc4 	movi	r4,-129
 40249ec:	9d84b03a 	or	r2,r19,r22
 40249f0:	d8c02d15 	stw	r3,180(sp)
 40249f4:	9124703a 	and	r18,r18,r4
 40249f8:	0039883a 	mov	fp,zero
 40249fc:	103e891e 	bne	r2,zero,4024424 <__flash_rwdata_start+0xffff34fc>
 4024a00:	d9002917 	ldw	r4,164(sp)
 4024a04:	2002c11e 	bne	r4,zero,402550c <___vfprintf_internal_r+0x1630>
 4024a08:	d8002915 	stw	zero,164(sp)
 4024a0c:	d8002e15 	stw	zero,184(sp)
 4024a10:	dc001e04 	addi	r16,sp,120
 4024a14:	003ef806 	br	40245f8 <__flash_rwdata_start+0xffff36d0>
 4024a18:	18c03fcc 	andi	r3,r3,255
 4024a1c:	18059d1e 	bne	r3,zero,4026094 <___vfprintf_internal_r+0x21b8>
 4024a20:	01400034 	movhi	r5,0
 4024a24:	29406104 	addi	r5,r5,388
 4024a28:	d9403915 	stw	r5,228(sp)
 4024a2c:	9080080c 	andi	r2,r18,32
 4024a30:	10005226 	beq	r2,zero,4024b7c <___vfprintf_internal_r+0xca0>
 4024a34:	d8802d17 	ldw	r2,180(sp)
 4024a38:	14c00017 	ldw	r19,0(r2)
 4024a3c:	15800117 	ldw	r22,4(r2)
 4024a40:	10800204 	addi	r2,r2,8
 4024a44:	d8802d15 	stw	r2,180(sp)
 4024a48:	9080004c 	andi	r2,r18,1
 4024a4c:	10019026 	beq	r2,zero,4025090 <___vfprintf_internal_r+0x11b4>
 4024a50:	9d84b03a 	or	r2,r19,r22
 4024a54:	10036926 	beq	r2,zero,40257fc <___vfprintf_internal_r+0x1920>
 4024a58:	d8c02917 	ldw	r3,164(sp)
 4024a5c:	00800c04 	movi	r2,48
 4024a60:	d8802705 	stb	r2,156(sp)
 4024a64:	dc402745 	stb	r17,157(sp)
 4024a68:	d8002785 	stb	zero,158(sp)
 4024a6c:	90800094 	ori	r2,r18,2
 4024a70:	18045d16 	blt	r3,zero,4025be8 <___vfprintf_internal_r+0x1d0c>
 4024a74:	00bfdfc4 	movi	r2,-129
 4024a78:	90a4703a 	and	r18,r18,r2
 4024a7c:	94800094 	ori	r18,r18,2
 4024a80:	0039883a 	mov	fp,zero
 4024a84:	d9003917 	ldw	r4,228(sp)
 4024a88:	dc001e04 	addi	r16,sp,120
 4024a8c:	988003cc 	andi	r2,r19,15
 4024a90:	b006973a 	slli	r3,r22,28
 4024a94:	2085883a 	add	r2,r4,r2
 4024a98:	9826d13a 	srli	r19,r19,4
 4024a9c:	10800003 	ldbu	r2,0(r2)
 4024aa0:	b02cd13a 	srli	r22,r22,4
 4024aa4:	843fffc4 	addi	r16,r16,-1
 4024aa8:	1ce6b03a 	or	r19,r3,r19
 4024aac:	80800005 	stb	r2,0(r16)
 4024ab0:	9d84b03a 	or	r2,r19,r22
 4024ab4:	103ff51e 	bne	r2,zero,4024a8c <__flash_rwdata_start+0xffff3b64>
 4024ab8:	d8c02817 	ldw	r3,160(sp)
 4024abc:	1c07c83a 	sub	r3,r3,r16
 4024ac0:	d8c02e15 	stw	r3,184(sp)
 4024ac4:	003ecc06 	br	40245f8 <__flash_rwdata_start+0xffff36d0>
 4024ac8:	18c03fcc 	andi	r3,r3,255
 4024acc:	183e9f26 	beq	r3,zero,402454c <__flash_rwdata_start+0xffff3624>
 4024ad0:	d9c02785 	stb	r7,158(sp)
 4024ad4:	003e9d06 	br	402454c <__flash_rwdata_start+0xffff3624>
 4024ad8:	00c00044 	movi	r3,1
 4024adc:	01c00ac4 	movi	r7,43
 4024ae0:	ac400007 	ldb	r17,0(r21)
 4024ae4:	003d5e06 	br	4024060 <__flash_rwdata_start+0xffff3138>
 4024ae8:	94800814 	ori	r18,r18,32
 4024aec:	ac400007 	ldb	r17,0(r21)
 4024af0:	003d5b06 	br	4024060 <__flash_rwdata_start+0xffff3138>
 4024af4:	d8c02d17 	ldw	r3,180(sp)
 4024af8:	d8002785 	stb	zero,158(sp)
 4024afc:	1c000017 	ldw	r16,0(r3)
 4024b00:	1cc00104 	addi	r19,r3,4
 4024b04:	80041926 	beq	r16,zero,4025b6c <___vfprintf_internal_r+0x1c90>
 4024b08:	d9002917 	ldw	r4,164(sp)
 4024b0c:	2003d016 	blt	r4,zero,4025a50 <___vfprintf_internal_r+0x1b74>
 4024b10:	200d883a 	mov	r6,r4
 4024b14:	000b883a 	mov	r5,zero
 4024b18:	8009883a 	mov	r4,r16
 4024b1c:	da003d15 	stw	r8,244(sp)
 4024b20:	40297480 	call	4029748 <memchr>
 4024b24:	da003d17 	ldw	r8,244(sp)
 4024b28:	10045426 	beq	r2,zero,4025c7c <___vfprintf_internal_r+0x1da0>
 4024b2c:	1405c83a 	sub	r2,r2,r16
 4024b30:	d8802e15 	stw	r2,184(sp)
 4024b34:	1003cc16 	blt	r2,zero,4025a68 <___vfprintf_internal_r+0x1b8c>
 4024b38:	df002783 	ldbu	fp,158(sp)
 4024b3c:	d8802a15 	stw	r2,168(sp)
 4024b40:	dcc02d15 	stw	r19,180(sp)
 4024b44:	d8002915 	stw	zero,164(sp)
 4024b48:	d8003215 	stw	zero,200(sp)
 4024b4c:	003eb006 	br	4024610 <__flash_rwdata_start+0xffff36e8>
 4024b50:	18c03fcc 	andi	r3,r3,255
 4024b54:	183f9b26 	beq	r3,zero,40249c4 <__flash_rwdata_start+0xffff3a9c>
 4024b58:	d9c02785 	stb	r7,158(sp)
 4024b5c:	003f9906 	br	40249c4 <__flash_rwdata_start+0xffff3a9c>
 4024b60:	18c03fcc 	andi	r3,r3,255
 4024b64:	1805551e 	bne	r3,zero,40260bc <___vfprintf_internal_r+0x21e0>
 4024b68:	01400034 	movhi	r5,0
 4024b6c:	29406604 	addi	r5,r5,408
 4024b70:	d9403915 	stw	r5,228(sp)
 4024b74:	9080080c 	andi	r2,r18,32
 4024b78:	103fae1e 	bne	r2,zero,4024a34 <__flash_rwdata_start+0xffff3b0c>
 4024b7c:	9080040c 	andi	r2,r18,16
 4024b80:	1002de26 	beq	r2,zero,40256fc <___vfprintf_internal_r+0x1820>
 4024b84:	d8c02d17 	ldw	r3,180(sp)
 4024b88:	002d883a 	mov	r22,zero
 4024b8c:	1cc00017 	ldw	r19,0(r3)
 4024b90:	18c00104 	addi	r3,r3,4
 4024b94:	d8c02d15 	stw	r3,180(sp)
 4024b98:	003fab06 	br	4024a48 <__flash_rwdata_start+0xffff3b20>
 4024b9c:	38803fcc 	andi	r2,r7,255
 4024ba0:	1080201c 	xori	r2,r2,128
 4024ba4:	10bfe004 	addi	r2,r2,-128
 4024ba8:	1002d21e 	bne	r2,zero,40256f4 <___vfprintf_internal_r+0x1818>
 4024bac:	00c00044 	movi	r3,1
 4024bb0:	01c00804 	movi	r7,32
 4024bb4:	ac400007 	ldb	r17,0(r21)
 4024bb8:	003d2906 	br	4024060 <__flash_rwdata_start+0xffff3138>
 4024bbc:	94800054 	ori	r18,r18,1
 4024bc0:	ac400007 	ldb	r17,0(r21)
 4024bc4:	003d2606 	br	4024060 <__flash_rwdata_start+0xffff3138>
 4024bc8:	18c03fcc 	andi	r3,r3,255
 4024bcc:	183e0526 	beq	r3,zero,40243e4 <__flash_rwdata_start+0xffff34bc>
 4024bd0:	d9c02785 	stb	r7,158(sp)
 4024bd4:	003e0306 	br	40243e4 <__flash_rwdata_start+0xffff34bc>
 4024bd8:	94801014 	ori	r18,r18,64
 4024bdc:	ac400007 	ldb	r17,0(r21)
 4024be0:	003d1f06 	br	4024060 <__flash_rwdata_start+0xffff3138>
 4024be4:	ac400007 	ldb	r17,0(r21)
 4024be8:	8a438726 	beq	r17,r9,4025a08 <___vfprintf_internal_r+0x1b2c>
 4024bec:	94800414 	ori	r18,r18,16
 4024bf0:	003d1b06 	br	4024060 <__flash_rwdata_start+0xffff3138>
 4024bf4:	18c03fcc 	andi	r3,r3,255
 4024bf8:	1805341e 	bne	r3,zero,40260cc <___vfprintf_internal_r+0x21f0>
 4024bfc:	9080080c 	andi	r2,r18,32
 4024c00:	1002cd26 	beq	r2,zero,4025738 <___vfprintf_internal_r+0x185c>
 4024c04:	d9402d17 	ldw	r5,180(sp)
 4024c08:	d9002f17 	ldw	r4,188(sp)
 4024c0c:	28800017 	ldw	r2,0(r5)
 4024c10:	2007d7fa 	srai	r3,r4,31
 4024c14:	29400104 	addi	r5,r5,4
 4024c18:	d9402d15 	stw	r5,180(sp)
 4024c1c:	11000015 	stw	r4,0(r2)
 4024c20:	10c00115 	stw	r3,4(r2)
 4024c24:	003ce506 	br	4023fbc <__flash_rwdata_start+0xffff3094>
 4024c28:	d8c02d17 	ldw	r3,180(sp)
 4024c2c:	d9002d17 	ldw	r4,180(sp)
 4024c30:	d8002785 	stb	zero,158(sp)
 4024c34:	18800017 	ldw	r2,0(r3)
 4024c38:	21000104 	addi	r4,r4,4
 4024c3c:	00c00044 	movi	r3,1
 4024c40:	d8c02a15 	stw	r3,168(sp)
 4024c44:	d8801405 	stb	r2,80(sp)
 4024c48:	d9002d15 	stw	r4,180(sp)
 4024c4c:	d8c02e15 	stw	r3,184(sp)
 4024c50:	d8002915 	stw	zero,164(sp)
 4024c54:	d8003215 	stw	zero,200(sp)
 4024c58:	dc001404 	addi	r16,sp,80
 4024c5c:	0039883a 	mov	fp,zero
 4024c60:	003e7206 	br	402462c <__flash_rwdata_start+0xffff3704>
 4024c64:	01000034 	movhi	r4,0
 4024c68:	21006604 	addi	r4,r4,408
 4024c6c:	0039883a 	mov	fp,zero
 4024c70:	d9003915 	stw	r4,228(sp)
 4024c74:	04401e04 	movi	r17,120
 4024c78:	003f8206 	br	4024a84 <__flash_rwdata_start+0xffff3b5c>
 4024c7c:	18c03fcc 	andi	r3,r3,255
 4024c80:	1805061e 	bne	r3,zero,402609c <___vfprintf_internal_r+0x21c0>
 4024c84:	883d9126 	beq	r17,zero,40242cc <__flash_rwdata_start+0xffff33a4>
 4024c88:	00c00044 	movi	r3,1
 4024c8c:	d8c02a15 	stw	r3,168(sp)
 4024c90:	dc401405 	stb	r17,80(sp)
 4024c94:	d8002785 	stb	zero,158(sp)
 4024c98:	003fec06 	br	4024c4c <__flash_rwdata_start+0xffff3d24>
 4024c9c:	01400034 	movhi	r5,0
 4024ca0:	29406604 	addi	r5,r5,408
 4024ca4:	d9403915 	stw	r5,228(sp)
 4024ca8:	d8c02d15 	stw	r3,180(sp)
 4024cac:	1025883a 	mov	r18,r2
 4024cb0:	04401e04 	movi	r17,120
 4024cb4:	9d84b03a 	or	r2,r19,r22
 4024cb8:	1000fc1e 	bne	r2,zero,40250ac <___vfprintf_internal_r+0x11d0>
 4024cbc:	0039883a 	mov	fp,zero
 4024cc0:	00800084 	movi	r2,2
 4024cc4:	10803fcc 	andi	r2,r2,255
 4024cc8:	00c00044 	movi	r3,1
 4024ccc:	10c20f26 	beq	r2,r3,402550c <___vfprintf_internal_r+0x1630>
 4024cd0:	00c00084 	movi	r3,2
 4024cd4:	10fd6326 	beq	r2,r3,4024264 <__flash_rwdata_start+0xffff333c>
 4024cd8:	003e2d06 	br	4024590 <__flash_rwdata_start+0xffff3668>
 4024cdc:	d8c02017 	ldw	r3,128(sp)
 4024ce0:	003e9306 	br	4024730 <__flash_rwdata_start+0xffff3808>
 4024ce4:	00801944 	movi	r2,101
 4024ce8:	14407e0e 	bge	r2,r17,4024ee4 <___vfprintf_internal_r+0x1008>
 4024cec:	d9003617 	ldw	r4,216(sp)
 4024cf0:	d9403817 	ldw	r5,224(sp)
 4024cf4:	000d883a 	mov	r6,zero
 4024cf8:	000f883a 	mov	r7,zero
 4024cfc:	d8c03c15 	stw	r3,240(sp)
 4024d00:	da003d15 	stw	r8,244(sp)
 4024d04:	40227fc0 	call	40227fc <__eqdf2>
 4024d08:	d8c03c17 	ldw	r3,240(sp)
 4024d0c:	da003d17 	ldw	r8,244(sp)
 4024d10:	1000f71e 	bne	r2,zero,40250f0 <___vfprintf_internal_r+0x1214>
 4024d14:	d8801f17 	ldw	r2,124(sp)
 4024d18:	01000034 	movhi	r4,0
 4024d1c:	21001a04 	addi	r4,r4,104
 4024d20:	18c00044 	addi	r3,r3,1
 4024d24:	10800044 	addi	r2,r2,1
 4024d28:	41000015 	stw	r4,0(r8)
 4024d2c:	01000044 	movi	r4,1
 4024d30:	41000115 	stw	r4,4(r8)
 4024d34:	d8c02015 	stw	r3,128(sp)
 4024d38:	d8801f15 	stw	r2,124(sp)
 4024d3c:	010001c4 	movi	r4,7
 4024d40:	2082b816 	blt	r4,r2,4025824 <___vfprintf_internal_r+0x1948>
 4024d44:	42000204 	addi	r8,r8,8
 4024d48:	d8802617 	ldw	r2,152(sp)
 4024d4c:	d9403317 	ldw	r5,204(sp)
 4024d50:	11400216 	blt	r2,r5,4024d5c <___vfprintf_internal_r+0xe80>
 4024d54:	9080004c 	andi	r2,r18,1
 4024d58:	103ed526 	beq	r2,zero,40248b0 <__flash_rwdata_start+0xffff3988>
 4024d5c:	d8803717 	ldw	r2,220(sp)
 4024d60:	d9003417 	ldw	r4,208(sp)
 4024d64:	d9403717 	ldw	r5,220(sp)
 4024d68:	1887883a 	add	r3,r3,r2
 4024d6c:	d8801f17 	ldw	r2,124(sp)
 4024d70:	41000015 	stw	r4,0(r8)
 4024d74:	41400115 	stw	r5,4(r8)
 4024d78:	10800044 	addi	r2,r2,1
 4024d7c:	d8c02015 	stw	r3,128(sp)
 4024d80:	d8801f15 	stw	r2,124(sp)
 4024d84:	010001c4 	movi	r4,7
 4024d88:	20832916 	blt	r4,r2,4025a30 <___vfprintf_internal_r+0x1b54>
 4024d8c:	42000204 	addi	r8,r8,8
 4024d90:	d8803317 	ldw	r2,204(sp)
 4024d94:	143fffc4 	addi	r16,r2,-1
 4024d98:	043ec50e 	bge	zero,r16,40248b0 <__flash_rwdata_start+0xffff3988>
 4024d9c:	04400404 	movi	r17,16
 4024da0:	d8801f17 	ldw	r2,124(sp)
 4024da4:	8c00880e 	bge	r17,r16,4024fc8 <___vfprintf_internal_r+0x10ec>
 4024da8:	01400034 	movhi	r5,0
 4024dac:	29406cc4 	addi	r5,r5,435
 4024db0:	d9402b15 	stw	r5,172(sp)
 4024db4:	058001c4 	movi	r22,7
 4024db8:	dcc02c17 	ldw	r19,176(sp)
 4024dbc:	00000306 	br	4024dcc <___vfprintf_internal_r+0xef0>
 4024dc0:	42000204 	addi	r8,r8,8
 4024dc4:	843ffc04 	addi	r16,r16,-16
 4024dc8:	8c00820e 	bge	r17,r16,4024fd4 <___vfprintf_internal_r+0x10f8>
 4024dcc:	18c00404 	addi	r3,r3,16
 4024dd0:	10800044 	addi	r2,r2,1
 4024dd4:	45000015 	stw	r20,0(r8)
 4024dd8:	44400115 	stw	r17,4(r8)
 4024ddc:	d8c02015 	stw	r3,128(sp)
 4024de0:	d8801f15 	stw	r2,124(sp)
 4024de4:	b0bff60e 	bge	r22,r2,4024dc0 <__flash_rwdata_start+0xffff3e98>
 4024de8:	d9801e04 	addi	r6,sp,120
 4024dec:	b80b883a 	mov	r5,r23
 4024df0:	9809883a 	mov	r4,r19
 4024df4:	402b4c00 	call	402b4c0 <__sprint_r>
 4024df8:	103d3a1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4024dfc:	d8c02017 	ldw	r3,128(sp)
 4024e00:	d8801f17 	ldw	r2,124(sp)
 4024e04:	da000404 	addi	r8,sp,16
 4024e08:	003fee06 	br	4024dc4 <__flash_rwdata_start+0xffff3e9c>
 4024e0c:	d9403117 	ldw	r5,196(sp)
 4024e10:	d8802a17 	ldw	r2,168(sp)
 4024e14:	28adc83a 	sub	r22,r5,r2
 4024e18:	05be630e 	bge	zero,r22,40247a8 <__flash_rwdata_start+0xffff3880>
 4024e1c:	07000404 	movi	fp,16
 4024e20:	d8801f17 	ldw	r2,124(sp)
 4024e24:	e5838f0e 	bge	fp,r22,4025c64 <___vfprintf_internal_r+0x1d88>
 4024e28:	01400034 	movhi	r5,0
 4024e2c:	29406cc4 	addi	r5,r5,435
 4024e30:	dc403015 	stw	r17,192(sp)
 4024e34:	d9402b15 	stw	r5,172(sp)
 4024e38:	b023883a 	mov	r17,r22
 4024e3c:	04c001c4 	movi	r19,7
 4024e40:	a82d883a 	mov	r22,r21
 4024e44:	902b883a 	mov	r21,r18
 4024e48:	8025883a 	mov	r18,r16
 4024e4c:	dc002c17 	ldw	r16,176(sp)
 4024e50:	00000306 	br	4024e60 <___vfprintf_internal_r+0xf84>
 4024e54:	8c7ffc04 	addi	r17,r17,-16
 4024e58:	42000204 	addi	r8,r8,8
 4024e5c:	e440110e 	bge	fp,r17,4024ea4 <___vfprintf_internal_r+0xfc8>
 4024e60:	18c00404 	addi	r3,r3,16
 4024e64:	10800044 	addi	r2,r2,1
 4024e68:	45000015 	stw	r20,0(r8)
 4024e6c:	47000115 	stw	fp,4(r8)
 4024e70:	d8c02015 	stw	r3,128(sp)
 4024e74:	d8801f15 	stw	r2,124(sp)
 4024e78:	98bff60e 	bge	r19,r2,4024e54 <__flash_rwdata_start+0xffff3f2c>
 4024e7c:	d9801e04 	addi	r6,sp,120
 4024e80:	b80b883a 	mov	r5,r23
 4024e84:	8009883a 	mov	r4,r16
 4024e88:	402b4c00 	call	402b4c0 <__sprint_r>
 4024e8c:	103d151e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4024e90:	8c7ffc04 	addi	r17,r17,-16
 4024e94:	d8c02017 	ldw	r3,128(sp)
 4024e98:	d8801f17 	ldw	r2,124(sp)
 4024e9c:	da000404 	addi	r8,sp,16
 4024ea0:	e47fef16 	blt	fp,r17,4024e60 <__flash_rwdata_start+0xffff3f38>
 4024ea4:	9021883a 	mov	r16,r18
 4024ea8:	a825883a 	mov	r18,r21
 4024eac:	b02b883a 	mov	r21,r22
 4024eb0:	882d883a 	mov	r22,r17
 4024eb4:	dc403017 	ldw	r17,192(sp)
 4024eb8:	d9002b17 	ldw	r4,172(sp)
 4024ebc:	1d87883a 	add	r3,r3,r22
 4024ec0:	10800044 	addi	r2,r2,1
 4024ec4:	41000015 	stw	r4,0(r8)
 4024ec8:	45800115 	stw	r22,4(r8)
 4024ecc:	d8c02015 	stw	r3,128(sp)
 4024ed0:	d8801f15 	stw	r2,124(sp)
 4024ed4:	010001c4 	movi	r4,7
 4024ed8:	20818e16 	blt	r4,r2,4025514 <___vfprintf_internal_r+0x1638>
 4024edc:	42000204 	addi	r8,r8,8
 4024ee0:	003e3106 	br	40247a8 <__flash_rwdata_start+0xffff3880>
 4024ee4:	d9403317 	ldw	r5,204(sp)
 4024ee8:	00800044 	movi	r2,1
 4024eec:	18c00044 	addi	r3,r3,1
 4024ef0:	1141530e 	bge	r2,r5,4025440 <___vfprintf_internal_r+0x1564>
 4024ef4:	dc401f17 	ldw	r17,124(sp)
 4024ef8:	00800044 	movi	r2,1
 4024efc:	40800115 	stw	r2,4(r8)
 4024f00:	8c400044 	addi	r17,r17,1
 4024f04:	44000015 	stw	r16,0(r8)
 4024f08:	d8c02015 	stw	r3,128(sp)
 4024f0c:	dc401f15 	stw	r17,124(sp)
 4024f10:	008001c4 	movi	r2,7
 4024f14:	14416b16 	blt	r2,r17,40254c4 <___vfprintf_internal_r+0x15e8>
 4024f18:	42000204 	addi	r8,r8,8
 4024f1c:	d8803717 	ldw	r2,220(sp)
 4024f20:	d9003417 	ldw	r4,208(sp)
 4024f24:	8c400044 	addi	r17,r17,1
 4024f28:	10c7883a 	add	r3,r2,r3
 4024f2c:	40800115 	stw	r2,4(r8)
 4024f30:	41000015 	stw	r4,0(r8)
 4024f34:	d8c02015 	stw	r3,128(sp)
 4024f38:	dc401f15 	stw	r17,124(sp)
 4024f3c:	008001c4 	movi	r2,7
 4024f40:	14416916 	blt	r2,r17,40254e8 <___vfprintf_internal_r+0x160c>
 4024f44:	45800204 	addi	r22,r8,8
 4024f48:	d9003617 	ldw	r4,216(sp)
 4024f4c:	d9403817 	ldw	r5,224(sp)
 4024f50:	000d883a 	mov	r6,zero
 4024f54:	000f883a 	mov	r7,zero
 4024f58:	d8c03c15 	stw	r3,240(sp)
 4024f5c:	40227fc0 	call	40227fc <__eqdf2>
 4024f60:	d8c03c17 	ldw	r3,240(sp)
 4024f64:	1000bc26 	beq	r2,zero,4025258 <___vfprintf_internal_r+0x137c>
 4024f68:	d9403317 	ldw	r5,204(sp)
 4024f6c:	84000044 	addi	r16,r16,1
 4024f70:	8c400044 	addi	r17,r17,1
 4024f74:	28bfffc4 	addi	r2,r5,-1
 4024f78:	1887883a 	add	r3,r3,r2
 4024f7c:	b0800115 	stw	r2,4(r22)
 4024f80:	b4000015 	stw	r16,0(r22)
 4024f84:	d8c02015 	stw	r3,128(sp)
 4024f88:	dc401f15 	stw	r17,124(sp)
 4024f8c:	008001c4 	movi	r2,7
 4024f90:	14414316 	blt	r2,r17,40254a0 <___vfprintf_internal_r+0x15c4>
 4024f94:	b5800204 	addi	r22,r22,8
 4024f98:	d9003a17 	ldw	r4,232(sp)
 4024f9c:	df0022c4 	addi	fp,sp,139
 4024fa0:	8c400044 	addi	r17,r17,1
 4024fa4:	20c7883a 	add	r3,r4,r3
 4024fa8:	b7000015 	stw	fp,0(r22)
 4024fac:	b1000115 	stw	r4,4(r22)
 4024fb0:	d8c02015 	stw	r3,128(sp)
 4024fb4:	dc401f15 	stw	r17,124(sp)
 4024fb8:	008001c4 	movi	r2,7
 4024fbc:	14400e16 	blt	r2,r17,4024ff8 <___vfprintf_internal_r+0x111c>
 4024fc0:	b2000204 	addi	r8,r22,8
 4024fc4:	003e3a06 	br	40248b0 <__flash_rwdata_start+0xffff3988>
 4024fc8:	01000034 	movhi	r4,0
 4024fcc:	21006cc4 	addi	r4,r4,435
 4024fd0:	d9002b15 	stw	r4,172(sp)
 4024fd4:	d9002b17 	ldw	r4,172(sp)
 4024fd8:	1c07883a 	add	r3,r3,r16
 4024fdc:	44000115 	stw	r16,4(r8)
 4024fe0:	41000015 	stw	r4,0(r8)
 4024fe4:	10800044 	addi	r2,r2,1
 4024fe8:	d8c02015 	stw	r3,128(sp)
 4024fec:	d8801f15 	stw	r2,124(sp)
 4024ff0:	010001c4 	movi	r4,7
 4024ff4:	20be2d0e 	bge	r4,r2,40248ac <__flash_rwdata_start+0xffff3984>
 4024ff8:	d9002c17 	ldw	r4,176(sp)
 4024ffc:	d9801e04 	addi	r6,sp,120
 4025000:	b80b883a 	mov	r5,r23
 4025004:	402b4c00 	call	402b4c0 <__sprint_r>
 4025008:	103cb61e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 402500c:	d8c02017 	ldw	r3,128(sp)
 4025010:	da000404 	addi	r8,sp,16
 4025014:	003e2606 	br	40248b0 <__flash_rwdata_start+0xffff3988>
 4025018:	d9002c17 	ldw	r4,176(sp)
 402501c:	d9801e04 	addi	r6,sp,120
 4025020:	b80b883a 	mov	r5,r23
 4025024:	402b4c00 	call	402b4c0 <__sprint_r>
 4025028:	103e5d26 	beq	r2,zero,40249a0 <__flash_rwdata_start+0xffff3a78>
 402502c:	003cad06 	br	40242e4 <__flash_rwdata_start+0xffff33bc>
 4025030:	d9002c17 	ldw	r4,176(sp)
 4025034:	d9801e04 	addi	r6,sp,120
 4025038:	b80b883a 	mov	r5,r23
 402503c:	402b4c00 	call	402b4c0 <__sprint_r>
 4025040:	103ca81e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025044:	d8c02017 	ldw	r3,128(sp)
 4025048:	da000404 	addi	r8,sp,16
 402504c:	003e0b06 	br	402487c <__flash_rwdata_start+0xffff3954>
 4025050:	d9002c17 	ldw	r4,176(sp)
 4025054:	d9801e04 	addi	r6,sp,120
 4025058:	b80b883a 	mov	r5,r23
 402505c:	402b4c00 	call	402b4c0 <__sprint_r>
 4025060:	103ca01e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025064:	d8c02017 	ldw	r3,128(sp)
 4025068:	da000404 	addi	r8,sp,16
 402506c:	003dbd06 	br	4024764 <__flash_rwdata_start+0xffff383c>
 4025070:	d9002c17 	ldw	r4,176(sp)
 4025074:	d9801e04 	addi	r6,sp,120
 4025078:	b80b883a 	mov	r5,r23
 402507c:	402b4c00 	call	402b4c0 <__sprint_r>
 4025080:	103c981e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025084:	d8c02017 	ldw	r3,128(sp)
 4025088:	da000404 	addi	r8,sp,16
 402508c:	003dc306 	br	402479c <__flash_rwdata_start+0xffff3874>
 4025090:	d8802917 	ldw	r2,164(sp)
 4025094:	d8002785 	stb	zero,158(sp)
 4025098:	103f0616 	blt	r2,zero,4024cb4 <__flash_rwdata_start+0xffff3d8c>
 402509c:	00ffdfc4 	movi	r3,-129
 40250a0:	9d84b03a 	or	r2,r19,r22
 40250a4:	90e4703a 	and	r18,r18,r3
 40250a8:	103c6b26 	beq	r2,zero,4024258 <__flash_rwdata_start+0xffff3330>
 40250ac:	0039883a 	mov	fp,zero
 40250b0:	003e7406 	br	4024a84 <__flash_rwdata_start+0xffff3b5c>
 40250b4:	9080040c 	andi	r2,r18,16
 40250b8:	1001b326 	beq	r2,zero,4025788 <___vfprintf_internal_r+0x18ac>
 40250bc:	d9002d17 	ldw	r4,180(sp)
 40250c0:	d9402917 	ldw	r5,164(sp)
 40250c4:	d8002785 	stb	zero,158(sp)
 40250c8:	20800104 	addi	r2,r4,4
 40250cc:	24c00017 	ldw	r19,0(r4)
 40250d0:	002d883a 	mov	r22,zero
 40250d4:	2801b516 	blt	r5,zero,40257ac <___vfprintf_internal_r+0x18d0>
 40250d8:	00ffdfc4 	movi	r3,-129
 40250dc:	d8802d15 	stw	r2,180(sp)
 40250e0:	90e4703a 	and	r18,r18,r3
 40250e4:	983d2726 	beq	r19,zero,4024584 <__flash_rwdata_start+0xffff365c>
 40250e8:	0039883a 	mov	fp,zero
 40250ec:	003d2a06 	br	4024598 <__flash_rwdata_start+0xffff3670>
 40250f0:	dc402617 	ldw	r17,152(sp)
 40250f4:	0441d30e 	bge	zero,r17,4025844 <___vfprintf_internal_r+0x1968>
 40250f8:	dc403217 	ldw	r17,200(sp)
 40250fc:	d8803317 	ldw	r2,204(sp)
 4025100:	1440010e 	bge	r2,r17,4025108 <___vfprintf_internal_r+0x122c>
 4025104:	1023883a 	mov	r17,r2
 4025108:	04400a0e 	bge	zero,r17,4025134 <___vfprintf_internal_r+0x1258>
 402510c:	d8801f17 	ldw	r2,124(sp)
 4025110:	1c47883a 	add	r3,r3,r17
 4025114:	44000015 	stw	r16,0(r8)
 4025118:	10800044 	addi	r2,r2,1
 402511c:	44400115 	stw	r17,4(r8)
 4025120:	d8c02015 	stw	r3,128(sp)
 4025124:	d8801f15 	stw	r2,124(sp)
 4025128:	010001c4 	movi	r4,7
 402512c:	20826516 	blt	r4,r2,4025ac4 <___vfprintf_internal_r+0x1be8>
 4025130:	42000204 	addi	r8,r8,8
 4025134:	88026116 	blt	r17,zero,4025abc <___vfprintf_internal_r+0x1be0>
 4025138:	d9003217 	ldw	r4,200(sp)
 402513c:	2463c83a 	sub	r17,r4,r17
 4025140:	04407b0e 	bge	zero,r17,4025330 <___vfprintf_internal_r+0x1454>
 4025144:	05800404 	movi	r22,16
 4025148:	d8801f17 	ldw	r2,124(sp)
 402514c:	b4419d0e 	bge	r22,r17,40257c4 <___vfprintf_internal_r+0x18e8>
 4025150:	01000034 	movhi	r4,0
 4025154:	21006cc4 	addi	r4,r4,435
 4025158:	d9002b15 	stw	r4,172(sp)
 402515c:	070001c4 	movi	fp,7
 4025160:	dcc02c17 	ldw	r19,176(sp)
 4025164:	00000306 	br	4025174 <___vfprintf_internal_r+0x1298>
 4025168:	42000204 	addi	r8,r8,8
 402516c:	8c7ffc04 	addi	r17,r17,-16
 4025170:	b441970e 	bge	r22,r17,40257d0 <___vfprintf_internal_r+0x18f4>
 4025174:	18c00404 	addi	r3,r3,16
 4025178:	10800044 	addi	r2,r2,1
 402517c:	45000015 	stw	r20,0(r8)
 4025180:	45800115 	stw	r22,4(r8)
 4025184:	d8c02015 	stw	r3,128(sp)
 4025188:	d8801f15 	stw	r2,124(sp)
 402518c:	e0bff60e 	bge	fp,r2,4025168 <__flash_rwdata_start+0xffff4240>
 4025190:	d9801e04 	addi	r6,sp,120
 4025194:	b80b883a 	mov	r5,r23
 4025198:	9809883a 	mov	r4,r19
 402519c:	402b4c00 	call	402b4c0 <__sprint_r>
 40251a0:	103c501e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 40251a4:	d8c02017 	ldw	r3,128(sp)
 40251a8:	d8801f17 	ldw	r2,124(sp)
 40251ac:	da000404 	addi	r8,sp,16
 40251b0:	003fee06 	br	402516c <__flash_rwdata_start+0xffff4244>
 40251b4:	d9002c17 	ldw	r4,176(sp)
 40251b8:	d9801e04 	addi	r6,sp,120
 40251bc:	b80b883a 	mov	r5,r23
 40251c0:	402b4c00 	call	402b4c0 <__sprint_r>
 40251c4:	103c471e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 40251c8:	d8c02017 	ldw	r3,128(sp)
 40251cc:	df002787 	ldb	fp,158(sp)
 40251d0:	da000404 	addi	r8,sp,16
 40251d4:	003d5606 	br	4024730 <__flash_rwdata_start+0xffff3808>
 40251d8:	9080040c 	andi	r2,r18,16
 40251dc:	10016126 	beq	r2,zero,4025764 <___vfprintf_internal_r+0x1888>
 40251e0:	d8802d17 	ldw	r2,180(sp)
 40251e4:	14c00017 	ldw	r19,0(r2)
 40251e8:	10800104 	addi	r2,r2,4
 40251ec:	d8802d15 	stw	r2,180(sp)
 40251f0:	982dd7fa 	srai	r22,r19,31
 40251f4:	b005883a 	mov	r2,r22
 40251f8:	003c8206 	br	4024404 <__flash_rwdata_start+0xffff34dc>
 40251fc:	9080040c 	andi	r2,r18,16
 4025200:	10003526 	beq	r2,zero,40252d8 <___vfprintf_internal_r+0x13fc>
 4025204:	d9402d17 	ldw	r5,180(sp)
 4025208:	d8c02917 	ldw	r3,164(sp)
 402520c:	d8002785 	stb	zero,158(sp)
 4025210:	28800104 	addi	r2,r5,4
 4025214:	2cc00017 	ldw	r19,0(r5)
 4025218:	002d883a 	mov	r22,zero
 402521c:	18003716 	blt	r3,zero,40252fc <___vfprintf_internal_r+0x1420>
 4025220:	00ffdfc4 	movi	r3,-129
 4025224:	d8802d15 	stw	r2,180(sp)
 4025228:	90e4703a 	and	r18,r18,r3
 402522c:	0039883a 	mov	fp,zero
 4025230:	983df326 	beq	r19,zero,4024a00 <__flash_rwdata_start+0xffff3ad8>
 4025234:	00800244 	movi	r2,9
 4025238:	14fc7b36 	bltu	r2,r19,4024428 <__flash_rwdata_start+0xffff3500>
 402523c:	d8c02817 	ldw	r3,160(sp)
 4025240:	dc001dc4 	addi	r16,sp,119
 4025244:	9cc00c04 	addi	r19,r19,48
 4025248:	1c07c83a 	sub	r3,r3,r16
 402524c:	dcc01dc5 	stb	r19,119(sp)
 4025250:	d8c02e15 	stw	r3,184(sp)
 4025254:	003ce806 	br	40245f8 <__flash_rwdata_start+0xffff36d0>
 4025258:	d8803317 	ldw	r2,204(sp)
 402525c:	143fffc4 	addi	r16,r2,-1
 4025260:	043f4d0e 	bge	zero,r16,4024f98 <__flash_rwdata_start+0xffff4070>
 4025264:	07000404 	movi	fp,16
 4025268:	e400810e 	bge	fp,r16,4025470 <___vfprintf_internal_r+0x1594>
 402526c:	01400034 	movhi	r5,0
 4025270:	29406cc4 	addi	r5,r5,435
 4025274:	d9402b15 	stw	r5,172(sp)
 4025278:	01c001c4 	movi	r7,7
 402527c:	dcc02c17 	ldw	r19,176(sp)
 4025280:	00000306 	br	4025290 <___vfprintf_internal_r+0x13b4>
 4025284:	b5800204 	addi	r22,r22,8
 4025288:	843ffc04 	addi	r16,r16,-16
 402528c:	e4007b0e 	bge	fp,r16,402547c <___vfprintf_internal_r+0x15a0>
 4025290:	18c00404 	addi	r3,r3,16
 4025294:	8c400044 	addi	r17,r17,1
 4025298:	b5000015 	stw	r20,0(r22)
 402529c:	b7000115 	stw	fp,4(r22)
 40252a0:	d8c02015 	stw	r3,128(sp)
 40252a4:	dc401f15 	stw	r17,124(sp)
 40252a8:	3c7ff60e 	bge	r7,r17,4025284 <__flash_rwdata_start+0xffff435c>
 40252ac:	d9801e04 	addi	r6,sp,120
 40252b0:	b80b883a 	mov	r5,r23
 40252b4:	9809883a 	mov	r4,r19
 40252b8:	d9c03c15 	stw	r7,240(sp)
 40252bc:	402b4c00 	call	402b4c0 <__sprint_r>
 40252c0:	d9c03c17 	ldw	r7,240(sp)
 40252c4:	103c071e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 40252c8:	d8c02017 	ldw	r3,128(sp)
 40252cc:	dc401f17 	ldw	r17,124(sp)
 40252d0:	dd800404 	addi	r22,sp,16
 40252d4:	003fec06 	br	4025288 <__flash_rwdata_start+0xffff4360>
 40252d8:	9080100c 	andi	r2,r18,64
 40252dc:	d8002785 	stb	zero,158(sp)
 40252e0:	10010e26 	beq	r2,zero,402571c <___vfprintf_internal_r+0x1840>
 40252e4:	d9002d17 	ldw	r4,180(sp)
 40252e8:	d9402917 	ldw	r5,164(sp)
 40252ec:	002d883a 	mov	r22,zero
 40252f0:	20800104 	addi	r2,r4,4
 40252f4:	24c0000b 	ldhu	r19,0(r4)
 40252f8:	283fc90e 	bge	r5,zero,4025220 <__flash_rwdata_start+0xffff42f8>
 40252fc:	d8802d15 	stw	r2,180(sp)
 4025300:	0039883a 	mov	fp,zero
 4025304:	9d84b03a 	or	r2,r19,r22
 4025308:	103c461e 	bne	r2,zero,4024424 <__flash_rwdata_start+0xffff34fc>
 402530c:	00800044 	movi	r2,1
 4025310:	003e6c06 	br	4024cc4 <__flash_rwdata_start+0xffff3d9c>
 4025314:	d9002c17 	ldw	r4,176(sp)
 4025318:	d9801e04 	addi	r6,sp,120
 402531c:	b80b883a 	mov	r5,r23
 4025320:	402b4c00 	call	402b4c0 <__sprint_r>
 4025324:	103bef1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025328:	d8c02017 	ldw	r3,128(sp)
 402532c:	da000404 	addi	r8,sp,16
 4025330:	d9003217 	ldw	r4,200(sp)
 4025334:	d8802617 	ldw	r2,152(sp)
 4025338:	d9403317 	ldw	r5,204(sp)
 402533c:	8123883a 	add	r17,r16,r4
 4025340:	11400216 	blt	r2,r5,402534c <___vfprintf_internal_r+0x1470>
 4025344:	9100004c 	andi	r4,r18,1
 4025348:	20000d26 	beq	r4,zero,4025380 <___vfprintf_internal_r+0x14a4>
 402534c:	d9003717 	ldw	r4,220(sp)
 4025350:	d9403417 	ldw	r5,208(sp)
 4025354:	1907883a 	add	r3,r3,r4
 4025358:	d9001f17 	ldw	r4,124(sp)
 402535c:	41400015 	stw	r5,0(r8)
 4025360:	d9403717 	ldw	r5,220(sp)
 4025364:	21000044 	addi	r4,r4,1
 4025368:	d8c02015 	stw	r3,128(sp)
 402536c:	41400115 	stw	r5,4(r8)
 4025370:	d9001f15 	stw	r4,124(sp)
 4025374:	014001c4 	movi	r5,7
 4025378:	2901e816 	blt	r5,r4,4025b1c <___vfprintf_internal_r+0x1c40>
 402537c:	42000204 	addi	r8,r8,8
 4025380:	d9003317 	ldw	r4,204(sp)
 4025384:	8121883a 	add	r16,r16,r4
 4025388:	2085c83a 	sub	r2,r4,r2
 402538c:	8461c83a 	sub	r16,r16,r17
 4025390:	1400010e 	bge	r2,r16,4025398 <___vfprintf_internal_r+0x14bc>
 4025394:	1021883a 	mov	r16,r2
 4025398:	04000a0e 	bge	zero,r16,40253c4 <___vfprintf_internal_r+0x14e8>
 402539c:	d9001f17 	ldw	r4,124(sp)
 40253a0:	1c07883a 	add	r3,r3,r16
 40253a4:	44400015 	stw	r17,0(r8)
 40253a8:	21000044 	addi	r4,r4,1
 40253ac:	44000115 	stw	r16,4(r8)
 40253b0:	d8c02015 	stw	r3,128(sp)
 40253b4:	d9001f15 	stw	r4,124(sp)
 40253b8:	014001c4 	movi	r5,7
 40253bc:	2901fb16 	blt	r5,r4,4025bac <___vfprintf_internal_r+0x1cd0>
 40253c0:	42000204 	addi	r8,r8,8
 40253c4:	8001f716 	blt	r16,zero,4025ba4 <___vfprintf_internal_r+0x1cc8>
 40253c8:	1421c83a 	sub	r16,r2,r16
 40253cc:	043d380e 	bge	zero,r16,40248b0 <__flash_rwdata_start+0xffff3988>
 40253d0:	04400404 	movi	r17,16
 40253d4:	d8801f17 	ldw	r2,124(sp)
 40253d8:	8c3efb0e 	bge	r17,r16,4024fc8 <__flash_rwdata_start+0xffff40a0>
 40253dc:	01400034 	movhi	r5,0
 40253e0:	29406cc4 	addi	r5,r5,435
 40253e4:	d9402b15 	stw	r5,172(sp)
 40253e8:	058001c4 	movi	r22,7
 40253ec:	dcc02c17 	ldw	r19,176(sp)
 40253f0:	00000306 	br	4025400 <___vfprintf_internal_r+0x1524>
 40253f4:	42000204 	addi	r8,r8,8
 40253f8:	843ffc04 	addi	r16,r16,-16
 40253fc:	8c3ef50e 	bge	r17,r16,4024fd4 <__flash_rwdata_start+0xffff40ac>
 4025400:	18c00404 	addi	r3,r3,16
 4025404:	10800044 	addi	r2,r2,1
 4025408:	45000015 	stw	r20,0(r8)
 402540c:	44400115 	stw	r17,4(r8)
 4025410:	d8c02015 	stw	r3,128(sp)
 4025414:	d8801f15 	stw	r2,124(sp)
 4025418:	b0bff60e 	bge	r22,r2,40253f4 <__flash_rwdata_start+0xffff44cc>
 402541c:	d9801e04 	addi	r6,sp,120
 4025420:	b80b883a 	mov	r5,r23
 4025424:	9809883a 	mov	r4,r19
 4025428:	402b4c00 	call	402b4c0 <__sprint_r>
 402542c:	103bad1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025430:	d8c02017 	ldw	r3,128(sp)
 4025434:	d8801f17 	ldw	r2,124(sp)
 4025438:	da000404 	addi	r8,sp,16
 402543c:	003fee06 	br	40253f8 <__flash_rwdata_start+0xffff44d0>
 4025440:	9088703a 	and	r4,r18,r2
 4025444:	203eab1e 	bne	r4,zero,4024ef4 <__flash_rwdata_start+0xffff3fcc>
 4025448:	dc401f17 	ldw	r17,124(sp)
 402544c:	40800115 	stw	r2,4(r8)
 4025450:	44000015 	stw	r16,0(r8)
 4025454:	8c400044 	addi	r17,r17,1
 4025458:	d8c02015 	stw	r3,128(sp)
 402545c:	dc401f15 	stw	r17,124(sp)
 4025460:	008001c4 	movi	r2,7
 4025464:	14400e16 	blt	r2,r17,40254a0 <___vfprintf_internal_r+0x15c4>
 4025468:	45800204 	addi	r22,r8,8
 402546c:	003eca06 	br	4024f98 <__flash_rwdata_start+0xffff4070>
 4025470:	01000034 	movhi	r4,0
 4025474:	21006cc4 	addi	r4,r4,435
 4025478:	d9002b15 	stw	r4,172(sp)
 402547c:	d8802b17 	ldw	r2,172(sp)
 4025480:	1c07883a 	add	r3,r3,r16
 4025484:	8c400044 	addi	r17,r17,1
 4025488:	b0800015 	stw	r2,0(r22)
 402548c:	b4000115 	stw	r16,4(r22)
 4025490:	d8c02015 	stw	r3,128(sp)
 4025494:	dc401f15 	stw	r17,124(sp)
 4025498:	008001c4 	movi	r2,7
 402549c:	147ebd0e 	bge	r2,r17,4024f94 <__flash_rwdata_start+0xffff406c>
 40254a0:	d9002c17 	ldw	r4,176(sp)
 40254a4:	d9801e04 	addi	r6,sp,120
 40254a8:	b80b883a 	mov	r5,r23
 40254ac:	402b4c00 	call	402b4c0 <__sprint_r>
 40254b0:	103b8c1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 40254b4:	d8c02017 	ldw	r3,128(sp)
 40254b8:	dc401f17 	ldw	r17,124(sp)
 40254bc:	dd800404 	addi	r22,sp,16
 40254c0:	003eb506 	br	4024f98 <__flash_rwdata_start+0xffff4070>
 40254c4:	d9002c17 	ldw	r4,176(sp)
 40254c8:	d9801e04 	addi	r6,sp,120
 40254cc:	b80b883a 	mov	r5,r23
 40254d0:	402b4c00 	call	402b4c0 <__sprint_r>
 40254d4:	103b831e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 40254d8:	d8c02017 	ldw	r3,128(sp)
 40254dc:	dc401f17 	ldw	r17,124(sp)
 40254e0:	da000404 	addi	r8,sp,16
 40254e4:	003e8d06 	br	4024f1c <__flash_rwdata_start+0xffff3ff4>
 40254e8:	d9002c17 	ldw	r4,176(sp)
 40254ec:	d9801e04 	addi	r6,sp,120
 40254f0:	b80b883a 	mov	r5,r23
 40254f4:	402b4c00 	call	402b4c0 <__sprint_r>
 40254f8:	103b7a1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 40254fc:	d8c02017 	ldw	r3,128(sp)
 4025500:	dc401f17 	ldw	r17,124(sp)
 4025504:	dd800404 	addi	r22,sp,16
 4025508:	003e8f06 	br	4024f48 <__flash_rwdata_start+0xffff4020>
 402550c:	0027883a 	mov	r19,zero
 4025510:	003f4a06 	br	402523c <__flash_rwdata_start+0xffff4314>
 4025514:	d9002c17 	ldw	r4,176(sp)
 4025518:	d9801e04 	addi	r6,sp,120
 402551c:	b80b883a 	mov	r5,r23
 4025520:	402b4c00 	call	402b4c0 <__sprint_r>
 4025524:	103b6f1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025528:	d8c02017 	ldw	r3,128(sp)
 402552c:	da000404 	addi	r8,sp,16
 4025530:	003c9d06 	br	40247a8 <__flash_rwdata_start+0xffff3880>
 4025534:	04e7c83a 	sub	r19,zero,r19
 4025538:	9804c03a 	cmpne	r2,r19,zero
 402553c:	05adc83a 	sub	r22,zero,r22
 4025540:	b0adc83a 	sub	r22,r22,r2
 4025544:	d8802917 	ldw	r2,164(sp)
 4025548:	07000b44 	movi	fp,45
 402554c:	df002785 	stb	fp,158(sp)
 4025550:	10017b16 	blt	r2,zero,4025b40 <___vfprintf_internal_r+0x1c64>
 4025554:	00bfdfc4 	movi	r2,-129
 4025558:	90a4703a 	and	r18,r18,r2
 402555c:	003bb106 	br	4024424 <__flash_rwdata_start+0xffff34fc>
 4025560:	d9003617 	ldw	r4,216(sp)
 4025564:	d9403817 	ldw	r5,224(sp)
 4025568:	da003d15 	stw	r8,244(sp)
 402556c:	402142c0 	call	402142c <__fpclassifyd>
 4025570:	da003d17 	ldw	r8,244(sp)
 4025574:	1000f026 	beq	r2,zero,4025938 <___vfprintf_internal_r+0x1a5c>
 4025578:	d9002917 	ldw	r4,164(sp)
 402557c:	05bff7c4 	movi	r22,-33
 4025580:	00bfffc4 	movi	r2,-1
 4025584:	8dac703a 	and	r22,r17,r22
 4025588:	20820026 	beq	r4,r2,4025d8c <___vfprintf_internal_r+0x1eb0>
 402558c:	008011c4 	movi	r2,71
 4025590:	b081f726 	beq	r22,r2,4025d70 <___vfprintf_internal_r+0x1e94>
 4025594:	d9003817 	ldw	r4,224(sp)
 4025598:	90c04014 	ori	r3,r18,256
 402559c:	d8c02b15 	stw	r3,172(sp)
 40255a0:	20021516 	blt	r4,zero,4025df8 <___vfprintf_internal_r+0x1f1c>
 40255a4:	dcc03817 	ldw	r19,224(sp)
 40255a8:	d8002a05 	stb	zero,168(sp)
 40255ac:	00801984 	movi	r2,102
 40255b0:	8881f926 	beq	r17,r2,4025d98 <___vfprintf_internal_r+0x1ebc>
 40255b4:	00801184 	movi	r2,70
 40255b8:	88821c26 	beq	r17,r2,4025e2c <___vfprintf_internal_r+0x1f50>
 40255bc:	00801144 	movi	r2,69
 40255c0:	b081ef26 	beq	r22,r2,4025d80 <___vfprintf_internal_r+0x1ea4>
 40255c4:	d8c02917 	ldw	r3,164(sp)
 40255c8:	d8802104 	addi	r2,sp,132
 40255cc:	d8800315 	stw	r2,12(sp)
 40255d0:	d9403617 	ldw	r5,216(sp)
 40255d4:	d8802504 	addi	r2,sp,148
 40255d8:	d9002c17 	ldw	r4,176(sp)
 40255dc:	d8800215 	stw	r2,8(sp)
 40255e0:	d8802604 	addi	r2,sp,152
 40255e4:	d8c00015 	stw	r3,0(sp)
 40255e8:	d8800115 	stw	r2,4(sp)
 40255ec:	01c00084 	movi	r7,2
 40255f0:	980d883a 	mov	r6,r19
 40255f4:	d8c03c15 	stw	r3,240(sp)
 40255f8:	da003d15 	stw	r8,244(sp)
 40255fc:	40265000 	call	4026500 <_dtoa_r>
 4025600:	1021883a 	mov	r16,r2
 4025604:	008019c4 	movi	r2,103
 4025608:	d8c03c17 	ldw	r3,240(sp)
 402560c:	da003d17 	ldw	r8,244(sp)
 4025610:	88817126 	beq	r17,r2,4025bd8 <___vfprintf_internal_r+0x1cfc>
 4025614:	008011c4 	movi	r2,71
 4025618:	88829226 	beq	r17,r2,4026064 <___vfprintf_internal_r+0x2188>
 402561c:	80f9883a 	add	fp,r16,r3
 4025620:	d9003617 	ldw	r4,216(sp)
 4025624:	000d883a 	mov	r6,zero
 4025628:	000f883a 	mov	r7,zero
 402562c:	980b883a 	mov	r5,r19
 4025630:	da003d15 	stw	r8,244(sp)
 4025634:	40227fc0 	call	40227fc <__eqdf2>
 4025638:	da003d17 	ldw	r8,244(sp)
 402563c:	10018d26 	beq	r2,zero,4025c74 <___vfprintf_internal_r+0x1d98>
 4025640:	d8802117 	ldw	r2,132(sp)
 4025644:	1700062e 	bgeu	r2,fp,4025660 <___vfprintf_internal_r+0x1784>
 4025648:	01000c04 	movi	r4,48
 402564c:	10c00044 	addi	r3,r2,1
 4025650:	d8c02115 	stw	r3,132(sp)
 4025654:	11000005 	stb	r4,0(r2)
 4025658:	d8802117 	ldw	r2,132(sp)
 402565c:	173ffb36 	bltu	r2,fp,402564c <__flash_rwdata_start+0xffff4724>
 4025660:	1405c83a 	sub	r2,r2,r16
 4025664:	d8803315 	stw	r2,204(sp)
 4025668:	008011c4 	movi	r2,71
 402566c:	b0817626 	beq	r22,r2,4025c48 <___vfprintf_internal_r+0x1d6c>
 4025670:	00801944 	movi	r2,101
 4025674:	1442810e 	bge	r2,r17,402607c <___vfprintf_internal_r+0x21a0>
 4025678:	d8c02617 	ldw	r3,152(sp)
 402567c:	00801984 	movi	r2,102
 4025680:	d8c03215 	stw	r3,200(sp)
 4025684:	8881fe26 	beq	r17,r2,4025e80 <___vfprintf_internal_r+0x1fa4>
 4025688:	d8c03217 	ldw	r3,200(sp)
 402568c:	d9003317 	ldw	r4,204(sp)
 4025690:	1901dd16 	blt	r3,r4,4025e08 <___vfprintf_internal_r+0x1f2c>
 4025694:	9480004c 	andi	r18,r18,1
 4025698:	90022b1e 	bne	r18,zero,4025f48 <___vfprintf_internal_r+0x206c>
 402569c:	1805883a 	mov	r2,r3
 40256a0:	18028016 	blt	r3,zero,40260a4 <___vfprintf_internal_r+0x21c8>
 40256a4:	d8c03217 	ldw	r3,200(sp)
 40256a8:	044019c4 	movi	r17,103
 40256ac:	d8c02e15 	stw	r3,184(sp)
 40256b0:	df002a07 	ldb	fp,168(sp)
 40256b4:	e001531e 	bne	fp,zero,4025c04 <___vfprintf_internal_r+0x1d28>
 40256b8:	df002783 	ldbu	fp,158(sp)
 40256bc:	d8802a15 	stw	r2,168(sp)
 40256c0:	dc802b17 	ldw	r18,172(sp)
 40256c4:	d8002915 	stw	zero,164(sp)
 40256c8:	003bd106 	br	4024610 <__flash_rwdata_start+0xffff36e8>
 40256cc:	d8802d17 	ldw	r2,180(sp)
 40256d0:	d8c02d17 	ldw	r3,180(sp)
 40256d4:	d9002d17 	ldw	r4,180(sp)
 40256d8:	10800017 	ldw	r2,0(r2)
 40256dc:	18c00117 	ldw	r3,4(r3)
 40256e0:	21000204 	addi	r4,r4,8
 40256e4:	d8803615 	stw	r2,216(sp)
 40256e8:	d8c03815 	stw	r3,224(sp)
 40256ec:	d9002d15 	stw	r4,180(sp)
 40256f0:	003b7506 	br	40244c8 <__flash_rwdata_start+0xffff35a0>
 40256f4:	ac400007 	ldb	r17,0(r21)
 40256f8:	003a5906 	br	4024060 <__flash_rwdata_start+0xffff3138>
 40256fc:	9080100c 	andi	r2,r18,64
 4025700:	1000a826 	beq	r2,zero,40259a4 <___vfprintf_internal_r+0x1ac8>
 4025704:	d9002d17 	ldw	r4,180(sp)
 4025708:	002d883a 	mov	r22,zero
 402570c:	24c0000b 	ldhu	r19,0(r4)
 4025710:	21000104 	addi	r4,r4,4
 4025714:	d9002d15 	stw	r4,180(sp)
 4025718:	003ccb06 	br	4024a48 <__flash_rwdata_start+0xffff3b20>
 402571c:	d8c02d17 	ldw	r3,180(sp)
 4025720:	d9002917 	ldw	r4,164(sp)
 4025724:	002d883a 	mov	r22,zero
 4025728:	18800104 	addi	r2,r3,4
 402572c:	1cc00017 	ldw	r19,0(r3)
 4025730:	203ebb0e 	bge	r4,zero,4025220 <__flash_rwdata_start+0xffff42f8>
 4025734:	003ef106 	br	40252fc <__flash_rwdata_start+0xffff43d4>
 4025738:	9080040c 	andi	r2,r18,16
 402573c:	1000921e 	bne	r2,zero,4025988 <___vfprintf_internal_r+0x1aac>
 4025740:	9480100c 	andi	r18,r18,64
 4025744:	90013926 	beq	r18,zero,4025c2c <___vfprintf_internal_r+0x1d50>
 4025748:	d9002d17 	ldw	r4,180(sp)
 402574c:	d9402f17 	ldw	r5,188(sp)
 4025750:	20800017 	ldw	r2,0(r4)
 4025754:	21000104 	addi	r4,r4,4
 4025758:	d9002d15 	stw	r4,180(sp)
 402575c:	1140000d 	sth	r5,0(r2)
 4025760:	003a1606 	br	4023fbc <__flash_rwdata_start+0xffff3094>
 4025764:	9080100c 	andi	r2,r18,64
 4025768:	10008026 	beq	r2,zero,402596c <___vfprintf_internal_r+0x1a90>
 402576c:	d8c02d17 	ldw	r3,180(sp)
 4025770:	1cc0000f 	ldh	r19,0(r3)
 4025774:	18c00104 	addi	r3,r3,4
 4025778:	d8c02d15 	stw	r3,180(sp)
 402577c:	982dd7fa 	srai	r22,r19,31
 4025780:	b005883a 	mov	r2,r22
 4025784:	003b1f06 	br	4024404 <__flash_rwdata_start+0xffff34dc>
 4025788:	9080100c 	andi	r2,r18,64
 402578c:	d8002785 	stb	zero,158(sp)
 4025790:	10008a1e 	bne	r2,zero,40259bc <___vfprintf_internal_r+0x1ae0>
 4025794:	d9402d17 	ldw	r5,180(sp)
 4025798:	d8c02917 	ldw	r3,164(sp)
 402579c:	002d883a 	mov	r22,zero
 40257a0:	28800104 	addi	r2,r5,4
 40257a4:	2cc00017 	ldw	r19,0(r5)
 40257a8:	183e4b0e 	bge	r3,zero,40250d8 <__flash_rwdata_start+0xffff41b0>
 40257ac:	9d86b03a 	or	r3,r19,r22
 40257b0:	d8802d15 	stw	r2,180(sp)
 40257b4:	183e4c1e 	bne	r3,zero,40250e8 <__flash_rwdata_start+0xffff41c0>
 40257b8:	0039883a 	mov	fp,zero
 40257bc:	0005883a 	mov	r2,zero
 40257c0:	003d4006 	br	4024cc4 <__flash_rwdata_start+0xffff3d9c>
 40257c4:	01400034 	movhi	r5,0
 40257c8:	29406cc4 	addi	r5,r5,435
 40257cc:	d9402b15 	stw	r5,172(sp)
 40257d0:	d9402b17 	ldw	r5,172(sp)
 40257d4:	1c47883a 	add	r3,r3,r17
 40257d8:	10800044 	addi	r2,r2,1
 40257dc:	41400015 	stw	r5,0(r8)
 40257e0:	44400115 	stw	r17,4(r8)
 40257e4:	d8c02015 	stw	r3,128(sp)
 40257e8:	d8801f15 	stw	r2,124(sp)
 40257ec:	010001c4 	movi	r4,7
 40257f0:	20bec816 	blt	r4,r2,4025314 <__flash_rwdata_start+0xffff43ec>
 40257f4:	42000204 	addi	r8,r8,8
 40257f8:	003ecd06 	br	4025330 <__flash_rwdata_start+0xffff4408>
 40257fc:	d9002917 	ldw	r4,164(sp)
 4025800:	d8002785 	stb	zero,158(sp)
 4025804:	203d2d16 	blt	r4,zero,4024cbc <__flash_rwdata_start+0xffff3d94>
 4025808:	00bfdfc4 	movi	r2,-129
 402580c:	90a4703a 	and	r18,r18,r2
 4025810:	003a9106 	br	4024258 <__flash_rwdata_start+0xffff3330>
 4025814:	01000034 	movhi	r4,0
 4025818:	21006cc4 	addi	r4,r4,435
 402581c:	d9002b15 	stw	r4,172(sp)
 4025820:	003c0c06 	br	4024854 <__flash_rwdata_start+0xffff392c>
 4025824:	d9002c17 	ldw	r4,176(sp)
 4025828:	d9801e04 	addi	r6,sp,120
 402582c:	b80b883a 	mov	r5,r23
 4025830:	402b4c00 	call	402b4c0 <__sprint_r>
 4025834:	103aab1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025838:	d8c02017 	ldw	r3,128(sp)
 402583c:	da000404 	addi	r8,sp,16
 4025840:	003d4106 	br	4024d48 <__flash_rwdata_start+0xffff3e20>
 4025844:	d8801f17 	ldw	r2,124(sp)
 4025848:	01400034 	movhi	r5,0
 402584c:	01000044 	movi	r4,1
 4025850:	18c00044 	addi	r3,r3,1
 4025854:	10800044 	addi	r2,r2,1
 4025858:	29401a04 	addi	r5,r5,104
 402585c:	41000115 	stw	r4,4(r8)
 4025860:	41400015 	stw	r5,0(r8)
 4025864:	d8c02015 	stw	r3,128(sp)
 4025868:	d8801f15 	stw	r2,124(sp)
 402586c:	010001c4 	movi	r4,7
 4025870:	20805c16 	blt	r4,r2,40259e4 <___vfprintf_internal_r+0x1b08>
 4025874:	42000204 	addi	r8,r8,8
 4025878:	8800041e 	bne	r17,zero,402588c <___vfprintf_internal_r+0x19b0>
 402587c:	d8803317 	ldw	r2,204(sp)
 4025880:	1000021e 	bne	r2,zero,402588c <___vfprintf_internal_r+0x19b0>
 4025884:	9080004c 	andi	r2,r18,1
 4025888:	103c0926 	beq	r2,zero,40248b0 <__flash_rwdata_start+0xffff3988>
 402588c:	d9003717 	ldw	r4,220(sp)
 4025890:	d8801f17 	ldw	r2,124(sp)
 4025894:	d9403417 	ldw	r5,208(sp)
 4025898:	20c7883a 	add	r3,r4,r3
 402589c:	10800044 	addi	r2,r2,1
 40258a0:	41000115 	stw	r4,4(r8)
 40258a4:	41400015 	stw	r5,0(r8)
 40258a8:	d8c02015 	stw	r3,128(sp)
 40258ac:	d8801f15 	stw	r2,124(sp)
 40258b0:	010001c4 	movi	r4,7
 40258b4:	20812116 	blt	r4,r2,4025d3c <___vfprintf_internal_r+0x1e60>
 40258b8:	42000204 	addi	r8,r8,8
 40258bc:	0463c83a 	sub	r17,zero,r17
 40258c0:	0440730e 	bge	zero,r17,4025a90 <___vfprintf_internal_r+0x1bb4>
 40258c4:	05800404 	movi	r22,16
 40258c8:	b440860e 	bge	r22,r17,4025ae4 <___vfprintf_internal_r+0x1c08>
 40258cc:	01400034 	movhi	r5,0
 40258d0:	29406cc4 	addi	r5,r5,435
 40258d4:	d9402b15 	stw	r5,172(sp)
 40258d8:	070001c4 	movi	fp,7
 40258dc:	dcc02c17 	ldw	r19,176(sp)
 40258e0:	00000306 	br	40258f0 <___vfprintf_internal_r+0x1a14>
 40258e4:	42000204 	addi	r8,r8,8
 40258e8:	8c7ffc04 	addi	r17,r17,-16
 40258ec:	b440800e 	bge	r22,r17,4025af0 <___vfprintf_internal_r+0x1c14>
 40258f0:	18c00404 	addi	r3,r3,16
 40258f4:	10800044 	addi	r2,r2,1
 40258f8:	45000015 	stw	r20,0(r8)
 40258fc:	45800115 	stw	r22,4(r8)
 4025900:	d8c02015 	stw	r3,128(sp)
 4025904:	d8801f15 	stw	r2,124(sp)
 4025908:	e0bff60e 	bge	fp,r2,40258e4 <__flash_rwdata_start+0xffff49bc>
 402590c:	d9801e04 	addi	r6,sp,120
 4025910:	b80b883a 	mov	r5,r23
 4025914:	9809883a 	mov	r4,r19
 4025918:	402b4c00 	call	402b4c0 <__sprint_r>
 402591c:	103a711e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025920:	d8c02017 	ldw	r3,128(sp)
 4025924:	d8801f17 	ldw	r2,124(sp)
 4025928:	da000404 	addi	r8,sp,16
 402592c:	003fee06 	br	40258e8 <__flash_rwdata_start+0xffff49c0>
 4025930:	00bfffc4 	movi	r2,-1
 4025934:	003a6f06 	br	40242f4 <__flash_rwdata_start+0xffff33cc>
 4025938:	008011c4 	movi	r2,71
 402593c:	1440b816 	blt	r2,r17,4025c20 <___vfprintf_internal_r+0x1d44>
 4025940:	04000034 	movhi	r16,0
 4025944:	84005f04 	addi	r16,r16,380
 4025948:	00c000c4 	movi	r3,3
 402594c:	00bfdfc4 	movi	r2,-129
 4025950:	d8c02a15 	stw	r3,168(sp)
 4025954:	90a4703a 	and	r18,r18,r2
 4025958:	df002783 	ldbu	fp,158(sp)
 402595c:	d8c02e15 	stw	r3,184(sp)
 4025960:	d8002915 	stw	zero,164(sp)
 4025964:	d8003215 	stw	zero,200(sp)
 4025968:	003b2906 	br	4024610 <__flash_rwdata_start+0xffff36e8>
 402596c:	d9002d17 	ldw	r4,180(sp)
 4025970:	24c00017 	ldw	r19,0(r4)
 4025974:	21000104 	addi	r4,r4,4
 4025978:	d9002d15 	stw	r4,180(sp)
 402597c:	982dd7fa 	srai	r22,r19,31
 4025980:	b005883a 	mov	r2,r22
 4025984:	003a9f06 	br	4024404 <__flash_rwdata_start+0xffff34dc>
 4025988:	d9402d17 	ldw	r5,180(sp)
 402598c:	d8c02f17 	ldw	r3,188(sp)
 4025990:	28800017 	ldw	r2,0(r5)
 4025994:	29400104 	addi	r5,r5,4
 4025998:	d9402d15 	stw	r5,180(sp)
 402599c:	10c00015 	stw	r3,0(r2)
 40259a0:	00398606 	br	4023fbc <__flash_rwdata_start+0xffff3094>
 40259a4:	d9402d17 	ldw	r5,180(sp)
 40259a8:	002d883a 	mov	r22,zero
 40259ac:	2cc00017 	ldw	r19,0(r5)
 40259b0:	29400104 	addi	r5,r5,4
 40259b4:	d9402d15 	stw	r5,180(sp)
 40259b8:	003c2306 	br	4024a48 <__flash_rwdata_start+0xffff3b20>
 40259bc:	d8c02d17 	ldw	r3,180(sp)
 40259c0:	d9002917 	ldw	r4,164(sp)
 40259c4:	002d883a 	mov	r22,zero
 40259c8:	18800104 	addi	r2,r3,4
 40259cc:	1cc0000b 	ldhu	r19,0(r3)
 40259d0:	203dc10e 	bge	r4,zero,40250d8 <__flash_rwdata_start+0xffff41b0>
 40259d4:	003f7506 	br	40257ac <__flash_rwdata_start+0xffff4884>
 40259d8:	04000034 	movhi	r16,0
 40259dc:	84005d04 	addi	r16,r16,372
 40259e0:	003acc06 	br	4024514 <__flash_rwdata_start+0xffff35ec>
 40259e4:	d9002c17 	ldw	r4,176(sp)
 40259e8:	d9801e04 	addi	r6,sp,120
 40259ec:	b80b883a 	mov	r5,r23
 40259f0:	402b4c00 	call	402b4c0 <__sprint_r>
 40259f4:	103a3b1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 40259f8:	dc402617 	ldw	r17,152(sp)
 40259fc:	d8c02017 	ldw	r3,128(sp)
 4025a00:	da000404 	addi	r8,sp,16
 4025a04:	003f9c06 	br	4025878 <__flash_rwdata_start+0xffff4950>
 4025a08:	ac400043 	ldbu	r17,1(r21)
 4025a0c:	94800814 	ori	r18,r18,32
 4025a10:	ad400044 	addi	r21,r21,1
 4025a14:	8c403fcc 	andi	r17,r17,255
 4025a18:	8c40201c 	xori	r17,r17,128
 4025a1c:	8c7fe004 	addi	r17,r17,-128
 4025a20:	00398f06 	br	4024060 <__flash_rwdata_start+0xffff3138>
 4025a24:	d8c02d15 	stw	r3,180(sp)
 4025a28:	0039883a 	mov	fp,zero
 4025a2c:	003e3506 	br	4025304 <__flash_rwdata_start+0xffff43dc>
 4025a30:	d9002c17 	ldw	r4,176(sp)
 4025a34:	d9801e04 	addi	r6,sp,120
 4025a38:	b80b883a 	mov	r5,r23
 4025a3c:	402b4c00 	call	402b4c0 <__sprint_r>
 4025a40:	103a281e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025a44:	d8c02017 	ldw	r3,128(sp)
 4025a48:	da000404 	addi	r8,sp,16
 4025a4c:	003cd006 	br	4024d90 <__flash_rwdata_start+0xffff3e68>
 4025a50:	8009883a 	mov	r4,r16
 4025a54:	da003d15 	stw	r8,244(sp)
 4025a58:	4023df40 	call	4023df4 <strlen>
 4025a5c:	d8802e15 	stw	r2,184(sp)
 4025a60:	da003d17 	ldw	r8,244(sp)
 4025a64:	103c340e 	bge	r2,zero,4024b38 <__flash_rwdata_start+0xffff3c10>
 4025a68:	0005883a 	mov	r2,zero
 4025a6c:	003c3206 	br	4024b38 <__flash_rwdata_start+0xffff3c10>
 4025a70:	d9002c17 	ldw	r4,176(sp)
 4025a74:	d9801e04 	addi	r6,sp,120
 4025a78:	b80b883a 	mov	r5,r23
 4025a7c:	402b4c00 	call	402b4c0 <__sprint_r>
 4025a80:	103a181e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025a84:	d8c02017 	ldw	r3,128(sp)
 4025a88:	d8801f17 	ldw	r2,124(sp)
 4025a8c:	da000404 	addi	r8,sp,16
 4025a90:	d9403317 	ldw	r5,204(sp)
 4025a94:	10800044 	addi	r2,r2,1
 4025a98:	44000015 	stw	r16,0(r8)
 4025a9c:	28c7883a 	add	r3,r5,r3
 4025aa0:	003b7d06 	br	4024898 <__flash_rwdata_start+0xffff3970>
 4025aa4:	01000034 	movhi	r4,0
 4025aa8:	210070c4 	addi	r4,r4,451
 4025aac:	d9003515 	stw	r4,212(sp)
 4025ab0:	003b1406 	br	4024704 <__flash_rwdata_start+0xffff37dc>
 4025ab4:	013fffc4 	movi	r4,-1
 4025ab8:	003a3506 	br	4024390 <__flash_rwdata_start+0xffff3468>
 4025abc:	0023883a 	mov	r17,zero
 4025ac0:	003d9d06 	br	4025138 <__flash_rwdata_start+0xffff4210>
 4025ac4:	d9002c17 	ldw	r4,176(sp)
 4025ac8:	d9801e04 	addi	r6,sp,120
 4025acc:	b80b883a 	mov	r5,r23
 4025ad0:	402b4c00 	call	402b4c0 <__sprint_r>
 4025ad4:	103a031e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025ad8:	d8c02017 	ldw	r3,128(sp)
 4025adc:	da000404 	addi	r8,sp,16
 4025ae0:	003d9406 	br	4025134 <__flash_rwdata_start+0xffff420c>
 4025ae4:	01000034 	movhi	r4,0
 4025ae8:	21006cc4 	addi	r4,r4,435
 4025aec:	d9002b15 	stw	r4,172(sp)
 4025af0:	d9002b17 	ldw	r4,172(sp)
 4025af4:	1c47883a 	add	r3,r3,r17
 4025af8:	10800044 	addi	r2,r2,1
 4025afc:	41000015 	stw	r4,0(r8)
 4025b00:	44400115 	stw	r17,4(r8)
 4025b04:	d8c02015 	stw	r3,128(sp)
 4025b08:	d8801f15 	stw	r2,124(sp)
 4025b0c:	010001c4 	movi	r4,7
 4025b10:	20bfd716 	blt	r4,r2,4025a70 <__flash_rwdata_start+0xffff4b48>
 4025b14:	42000204 	addi	r8,r8,8
 4025b18:	003fdd06 	br	4025a90 <__flash_rwdata_start+0xffff4b68>
 4025b1c:	d9002c17 	ldw	r4,176(sp)
 4025b20:	d9801e04 	addi	r6,sp,120
 4025b24:	b80b883a 	mov	r5,r23
 4025b28:	402b4c00 	call	402b4c0 <__sprint_r>
 4025b2c:	1039ed1e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025b30:	d8802617 	ldw	r2,152(sp)
 4025b34:	d8c02017 	ldw	r3,128(sp)
 4025b38:	da000404 	addi	r8,sp,16
 4025b3c:	003e1006 	br	4025380 <__flash_rwdata_start+0xffff4458>
 4025b40:	00800044 	movi	r2,1
 4025b44:	10803fcc 	andi	r2,r2,255
 4025b48:	00c00044 	movi	r3,1
 4025b4c:	10fa3526 	beq	r2,r3,4024424 <__flash_rwdata_start+0xffff34fc>
 4025b50:	00c00084 	movi	r3,2
 4025b54:	10fbcb26 	beq	r2,r3,4024a84 <__flash_rwdata_start+0xffff3b5c>
 4025b58:	003a8f06 	br	4024598 <__flash_rwdata_start+0xffff3670>
 4025b5c:	01000034 	movhi	r4,0
 4025b60:	210070c4 	addi	r4,r4,451
 4025b64:	d9003515 	stw	r4,212(sp)
 4025b68:	003b7606 	br	4024944 <__flash_rwdata_start+0xffff3a1c>
 4025b6c:	d8802917 	ldw	r2,164(sp)
 4025b70:	00c00184 	movi	r3,6
 4025b74:	1880012e 	bgeu	r3,r2,4025b7c <___vfprintf_internal_r+0x1ca0>
 4025b78:	1805883a 	mov	r2,r3
 4025b7c:	d8802e15 	stw	r2,184(sp)
 4025b80:	1000ef16 	blt	r2,zero,4025f40 <___vfprintf_internal_r+0x2064>
 4025b84:	04000034 	movhi	r16,0
 4025b88:	d8802a15 	stw	r2,168(sp)
 4025b8c:	dcc02d15 	stw	r19,180(sp)
 4025b90:	d8002915 	stw	zero,164(sp)
 4025b94:	d8003215 	stw	zero,200(sp)
 4025b98:	84006b04 	addi	r16,r16,428
 4025b9c:	0039883a 	mov	fp,zero
 4025ba0:	003aa206 	br	402462c <__flash_rwdata_start+0xffff3704>
 4025ba4:	0021883a 	mov	r16,zero
 4025ba8:	003e0706 	br	40253c8 <__flash_rwdata_start+0xffff44a0>
 4025bac:	d9002c17 	ldw	r4,176(sp)
 4025bb0:	d9801e04 	addi	r6,sp,120
 4025bb4:	b80b883a 	mov	r5,r23
 4025bb8:	402b4c00 	call	402b4c0 <__sprint_r>
 4025bbc:	1039c91e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025bc0:	d8802617 	ldw	r2,152(sp)
 4025bc4:	d9403317 	ldw	r5,204(sp)
 4025bc8:	d8c02017 	ldw	r3,128(sp)
 4025bcc:	da000404 	addi	r8,sp,16
 4025bd0:	2885c83a 	sub	r2,r5,r2
 4025bd4:	003dfb06 	br	40253c4 <__flash_rwdata_start+0xffff449c>
 4025bd8:	9080004c 	andi	r2,r18,1
 4025bdc:	103e8f1e 	bne	r2,zero,402561c <__flash_rwdata_start+0xffff46f4>
 4025be0:	d8802117 	ldw	r2,132(sp)
 4025be4:	003e9e06 	br	4025660 <__flash_rwdata_start+0xffff4738>
 4025be8:	1025883a 	mov	r18,r2
 4025bec:	0039883a 	mov	fp,zero
 4025bf0:	00800084 	movi	r2,2
 4025bf4:	003fd306 	br	4025b44 <__flash_rwdata_start+0xffff4c1c>
 4025bf8:	07000b44 	movi	fp,45
 4025bfc:	df002785 	stb	fp,158(sp)
 4025c00:	003a4006 	br	4024504 <__flash_rwdata_start+0xffff35dc>
 4025c04:	00c00b44 	movi	r3,45
 4025c08:	d8c02785 	stb	r3,158(sp)
 4025c0c:	d8802a15 	stw	r2,168(sp)
 4025c10:	dc802b17 	ldw	r18,172(sp)
 4025c14:	d8002915 	stw	zero,164(sp)
 4025c18:	07000b44 	movi	fp,45
 4025c1c:	003a8006 	br	4024620 <__flash_rwdata_start+0xffff36f8>
 4025c20:	04000034 	movhi	r16,0
 4025c24:	84006004 	addi	r16,r16,384
 4025c28:	003f4706 	br	4025948 <__flash_rwdata_start+0xffff4a20>
 4025c2c:	d8c02d17 	ldw	r3,180(sp)
 4025c30:	d9002f17 	ldw	r4,188(sp)
 4025c34:	18800017 	ldw	r2,0(r3)
 4025c38:	18c00104 	addi	r3,r3,4
 4025c3c:	d8c02d15 	stw	r3,180(sp)
 4025c40:	11000015 	stw	r4,0(r2)
 4025c44:	0038dd06 	br	4023fbc <__flash_rwdata_start+0xffff3094>
 4025c48:	dd802617 	ldw	r22,152(sp)
 4025c4c:	00bfff44 	movi	r2,-3
 4025c50:	b0801c16 	blt	r22,r2,4025cc4 <___vfprintf_internal_r+0x1de8>
 4025c54:	d9402917 	ldw	r5,164(sp)
 4025c58:	2d801a16 	blt	r5,r22,4025cc4 <___vfprintf_internal_r+0x1de8>
 4025c5c:	dd803215 	stw	r22,200(sp)
 4025c60:	003e8906 	br	4025688 <__flash_rwdata_start+0xffff4760>
 4025c64:	01000034 	movhi	r4,0
 4025c68:	21006cc4 	addi	r4,r4,435
 4025c6c:	d9002b15 	stw	r4,172(sp)
 4025c70:	003c9106 	br	4024eb8 <__flash_rwdata_start+0xffff3f90>
 4025c74:	e005883a 	mov	r2,fp
 4025c78:	003e7906 	br	4025660 <__flash_rwdata_start+0xffff4738>
 4025c7c:	d9402917 	ldw	r5,164(sp)
 4025c80:	df002783 	ldbu	fp,158(sp)
 4025c84:	dcc02d15 	stw	r19,180(sp)
 4025c88:	d9402a15 	stw	r5,168(sp)
 4025c8c:	d9402e15 	stw	r5,184(sp)
 4025c90:	d8002915 	stw	zero,164(sp)
 4025c94:	d8003215 	stw	zero,200(sp)
 4025c98:	003a5d06 	br	4024610 <__flash_rwdata_start+0xffff36e8>
 4025c9c:	9080004c 	andi	r2,r18,1
 4025ca0:	0039883a 	mov	fp,zero
 4025ca4:	10000426 	beq	r2,zero,4025cb8 <___vfprintf_internal_r+0x1ddc>
 4025ca8:	00800c04 	movi	r2,48
 4025cac:	dc001dc4 	addi	r16,sp,119
 4025cb0:	d8801dc5 	stb	r2,119(sp)
 4025cb4:	003b8006 	br	4024ab8 <__flash_rwdata_start+0xffff3b90>
 4025cb8:	d8002e15 	stw	zero,184(sp)
 4025cbc:	dc001e04 	addi	r16,sp,120
 4025cc0:	003a4d06 	br	40245f8 <__flash_rwdata_start+0xffff36d0>
 4025cc4:	8c7fff84 	addi	r17,r17,-2
 4025cc8:	b5bfffc4 	addi	r22,r22,-1
 4025ccc:	dd802615 	stw	r22,152(sp)
 4025cd0:	dc4022c5 	stb	r17,139(sp)
 4025cd4:	b000bf16 	blt	r22,zero,4025fd4 <___vfprintf_internal_r+0x20f8>
 4025cd8:	00800ac4 	movi	r2,43
 4025cdc:	d8802305 	stb	r2,140(sp)
 4025ce0:	00800244 	movi	r2,9
 4025ce4:	15807016 	blt	r2,r22,4025ea8 <___vfprintf_internal_r+0x1fcc>
 4025ce8:	00800c04 	movi	r2,48
 4025cec:	b5800c04 	addi	r22,r22,48
 4025cf0:	d8802345 	stb	r2,141(sp)
 4025cf4:	dd802385 	stb	r22,142(sp)
 4025cf8:	d88023c4 	addi	r2,sp,143
 4025cfc:	df0022c4 	addi	fp,sp,139
 4025d00:	d8c03317 	ldw	r3,204(sp)
 4025d04:	1739c83a 	sub	fp,r2,fp
 4025d08:	d9003317 	ldw	r4,204(sp)
 4025d0c:	e0c7883a 	add	r3,fp,r3
 4025d10:	df003a15 	stw	fp,232(sp)
 4025d14:	d8c02e15 	stw	r3,184(sp)
 4025d18:	00800044 	movi	r2,1
 4025d1c:	1100b30e 	bge	r2,r4,4025fec <___vfprintf_internal_r+0x2110>
 4025d20:	d8c02e17 	ldw	r3,184(sp)
 4025d24:	18c00044 	addi	r3,r3,1
 4025d28:	d8c02e15 	stw	r3,184(sp)
 4025d2c:	1805883a 	mov	r2,r3
 4025d30:	1800ac16 	blt	r3,zero,4025fe4 <___vfprintf_internal_r+0x2108>
 4025d34:	d8003215 	stw	zero,200(sp)
 4025d38:	003e5d06 	br	40256b0 <__flash_rwdata_start+0xffff4788>
 4025d3c:	d9002c17 	ldw	r4,176(sp)
 4025d40:	d9801e04 	addi	r6,sp,120
 4025d44:	b80b883a 	mov	r5,r23
 4025d48:	402b4c00 	call	402b4c0 <__sprint_r>
 4025d4c:	1039651e 	bne	r2,zero,40242e4 <__flash_rwdata_start+0xffff33bc>
 4025d50:	dc402617 	ldw	r17,152(sp)
 4025d54:	d8c02017 	ldw	r3,128(sp)
 4025d58:	d8801f17 	ldw	r2,124(sp)
 4025d5c:	da000404 	addi	r8,sp,16
 4025d60:	003ed606 	br	40258bc <__flash_rwdata_start+0xffff4994>
 4025d64:	582b883a 	mov	r21,r11
 4025d68:	d8002915 	stw	zero,164(sp)
 4025d6c:	0038bd06 	br	4024064 <__flash_rwdata_start+0xffff313c>
 4025d70:	d8802917 	ldw	r2,164(sp)
 4025d74:	103e071e 	bne	r2,zero,4025594 <__flash_rwdata_start+0xffff466c>
 4025d78:	dc002915 	stw	r16,164(sp)
 4025d7c:	003e0506 	br	4025594 <__flash_rwdata_start+0xffff466c>
 4025d80:	d9002917 	ldw	r4,164(sp)
 4025d84:	20c00044 	addi	r3,r4,1
 4025d88:	003e0f06 	br	40255c8 <__flash_rwdata_start+0xffff46a0>
 4025d8c:	01400184 	movi	r5,6
 4025d90:	d9402915 	stw	r5,164(sp)
 4025d94:	003dff06 	br	4025594 <__flash_rwdata_start+0xffff466c>
 4025d98:	d8802104 	addi	r2,sp,132
 4025d9c:	d8800315 	stw	r2,12(sp)
 4025da0:	d8802504 	addi	r2,sp,148
 4025da4:	d8800215 	stw	r2,8(sp)
 4025da8:	d8802604 	addi	r2,sp,152
 4025dac:	d8800115 	stw	r2,4(sp)
 4025db0:	d8802917 	ldw	r2,164(sp)
 4025db4:	d9403617 	ldw	r5,216(sp)
 4025db8:	d9002c17 	ldw	r4,176(sp)
 4025dbc:	d8800015 	stw	r2,0(sp)
 4025dc0:	01c000c4 	movi	r7,3
 4025dc4:	980d883a 	mov	r6,r19
 4025dc8:	da003d15 	stw	r8,244(sp)
 4025dcc:	40265000 	call	4026500 <_dtoa_r>
 4025dd0:	d8c02917 	ldw	r3,164(sp)
 4025dd4:	da003d17 	ldw	r8,244(sp)
 4025dd8:	1021883a 	mov	r16,r2
 4025ddc:	10f9883a 	add	fp,r2,r3
 4025de0:	81000007 	ldb	r4,0(r16)
 4025de4:	00800c04 	movi	r2,48
 4025de8:	20805e26 	beq	r4,r2,4025f64 <___vfprintf_internal_r+0x2088>
 4025dec:	d8c02617 	ldw	r3,152(sp)
 4025df0:	e0f9883a 	add	fp,fp,r3
 4025df4:	003e0a06 	br	4025620 <__flash_rwdata_start+0xffff46f8>
 4025df8:	00c00b44 	movi	r3,45
 4025dfc:	24e0003c 	xorhi	r19,r4,32768
 4025e00:	d8c02a05 	stb	r3,168(sp)
 4025e04:	003de906 	br	40255ac <__flash_rwdata_start+0xffff4684>
 4025e08:	d8c03217 	ldw	r3,200(sp)
 4025e0c:	00c07a0e 	bge	zero,r3,4025ff8 <___vfprintf_internal_r+0x211c>
 4025e10:	00800044 	movi	r2,1
 4025e14:	d9003317 	ldw	r4,204(sp)
 4025e18:	1105883a 	add	r2,r2,r4
 4025e1c:	d8802e15 	stw	r2,184(sp)
 4025e20:	10004e16 	blt	r2,zero,4025f5c <___vfprintf_internal_r+0x2080>
 4025e24:	044019c4 	movi	r17,103
 4025e28:	003e2106 	br	40256b0 <__flash_rwdata_start+0xffff4788>
 4025e2c:	d9002917 	ldw	r4,164(sp)
 4025e30:	d8802104 	addi	r2,sp,132
 4025e34:	d8800315 	stw	r2,12(sp)
 4025e38:	d9000015 	stw	r4,0(sp)
 4025e3c:	d8802504 	addi	r2,sp,148
 4025e40:	d9403617 	ldw	r5,216(sp)
 4025e44:	d9002c17 	ldw	r4,176(sp)
 4025e48:	d8800215 	stw	r2,8(sp)
 4025e4c:	d8802604 	addi	r2,sp,152
 4025e50:	d8800115 	stw	r2,4(sp)
 4025e54:	01c000c4 	movi	r7,3
 4025e58:	980d883a 	mov	r6,r19
 4025e5c:	da003d15 	stw	r8,244(sp)
 4025e60:	40265000 	call	4026500 <_dtoa_r>
 4025e64:	d8c02917 	ldw	r3,164(sp)
 4025e68:	da003d17 	ldw	r8,244(sp)
 4025e6c:	1021883a 	mov	r16,r2
 4025e70:	00801184 	movi	r2,70
 4025e74:	80f9883a 	add	fp,r16,r3
 4025e78:	88bfd926 	beq	r17,r2,4025de0 <__flash_rwdata_start+0xffff4eb8>
 4025e7c:	003de806 	br	4025620 <__flash_rwdata_start+0xffff46f8>
 4025e80:	d9002917 	ldw	r4,164(sp)
 4025e84:	00c04d0e 	bge	zero,r3,4025fbc <___vfprintf_internal_r+0x20e0>
 4025e88:	2000441e 	bne	r4,zero,4025f9c <___vfprintf_internal_r+0x20c0>
 4025e8c:	9480004c 	andi	r18,r18,1
 4025e90:	9000421e 	bne	r18,zero,4025f9c <___vfprintf_internal_r+0x20c0>
 4025e94:	1805883a 	mov	r2,r3
 4025e98:	18007016 	blt	r3,zero,402605c <___vfprintf_internal_r+0x2180>
 4025e9c:	d8c03217 	ldw	r3,200(sp)
 4025ea0:	d8c02e15 	stw	r3,184(sp)
 4025ea4:	003e0206 	br	40256b0 <__flash_rwdata_start+0xffff4788>
 4025ea8:	df0022c4 	addi	fp,sp,139
 4025eac:	dc002915 	stw	r16,164(sp)
 4025eb0:	4027883a 	mov	r19,r8
 4025eb4:	e021883a 	mov	r16,fp
 4025eb8:	b009883a 	mov	r4,r22
 4025ebc:	01400284 	movi	r5,10
 4025ec0:	40215380 	call	4021538 <__modsi3>
 4025ec4:	10800c04 	addi	r2,r2,48
 4025ec8:	843fffc4 	addi	r16,r16,-1
 4025ecc:	b009883a 	mov	r4,r22
 4025ed0:	01400284 	movi	r5,10
 4025ed4:	80800005 	stb	r2,0(r16)
 4025ed8:	40214b40 	call	40214b4 <__divsi3>
 4025edc:	102d883a 	mov	r22,r2
 4025ee0:	00800244 	movi	r2,9
 4025ee4:	15bff416 	blt	r2,r22,4025eb8 <__flash_rwdata_start+0xffff4f90>
 4025ee8:	9811883a 	mov	r8,r19
 4025eec:	b0800c04 	addi	r2,r22,48
 4025ef0:	8027883a 	mov	r19,r16
 4025ef4:	997fffc4 	addi	r5,r19,-1
 4025ef8:	98bfffc5 	stb	r2,-1(r19)
 4025efc:	dc002917 	ldw	r16,164(sp)
 4025f00:	2f006a2e 	bgeu	r5,fp,40260ac <___vfprintf_internal_r+0x21d0>
 4025f04:	d9c02384 	addi	r7,sp,142
 4025f08:	3ccfc83a 	sub	r7,r7,r19
 4025f0c:	d9002344 	addi	r4,sp,141
 4025f10:	e1cf883a 	add	r7,fp,r7
 4025f14:	00000106 	br	4025f1c <___vfprintf_internal_r+0x2040>
 4025f18:	28800003 	ldbu	r2,0(r5)
 4025f1c:	20800005 	stb	r2,0(r4)
 4025f20:	21000044 	addi	r4,r4,1
 4025f24:	29400044 	addi	r5,r5,1
 4025f28:	393ffb1e 	bne	r7,r4,4025f18 <__flash_rwdata_start+0xffff4ff0>
 4025f2c:	d8802304 	addi	r2,sp,140
 4025f30:	14c5c83a 	sub	r2,r2,r19
 4025f34:	d8c02344 	addi	r3,sp,141
 4025f38:	1885883a 	add	r2,r3,r2
 4025f3c:	003f7006 	br	4025d00 <__flash_rwdata_start+0xffff4dd8>
 4025f40:	0005883a 	mov	r2,zero
 4025f44:	003f0f06 	br	4025b84 <__flash_rwdata_start+0xffff4c5c>
 4025f48:	d8c03217 	ldw	r3,200(sp)
 4025f4c:	18c00044 	addi	r3,r3,1
 4025f50:	d8c02e15 	stw	r3,184(sp)
 4025f54:	1805883a 	mov	r2,r3
 4025f58:	183fb20e 	bge	r3,zero,4025e24 <__flash_rwdata_start+0xffff4efc>
 4025f5c:	0005883a 	mov	r2,zero
 4025f60:	003fb006 	br	4025e24 <__flash_rwdata_start+0xffff4efc>
 4025f64:	d9003617 	ldw	r4,216(sp)
 4025f68:	000d883a 	mov	r6,zero
 4025f6c:	000f883a 	mov	r7,zero
 4025f70:	980b883a 	mov	r5,r19
 4025f74:	d8c03c15 	stw	r3,240(sp)
 4025f78:	da003d15 	stw	r8,244(sp)
 4025f7c:	40227fc0 	call	40227fc <__eqdf2>
 4025f80:	d8c03c17 	ldw	r3,240(sp)
 4025f84:	da003d17 	ldw	r8,244(sp)
 4025f88:	103f9826 	beq	r2,zero,4025dec <__flash_rwdata_start+0xffff4ec4>
 4025f8c:	00800044 	movi	r2,1
 4025f90:	10c7c83a 	sub	r3,r2,r3
 4025f94:	d8c02615 	stw	r3,152(sp)
 4025f98:	003f9506 	br	4025df0 <__flash_rwdata_start+0xffff4ec8>
 4025f9c:	d9002917 	ldw	r4,164(sp)
 4025fa0:	d8c03217 	ldw	r3,200(sp)
 4025fa4:	20800044 	addi	r2,r4,1
 4025fa8:	1885883a 	add	r2,r3,r2
 4025fac:	d8802e15 	stw	r2,184(sp)
 4025fb0:	103dbf0e 	bge	r2,zero,40256b0 <__flash_rwdata_start+0xffff4788>
 4025fb4:	0005883a 	mov	r2,zero
 4025fb8:	003dbd06 	br	40256b0 <__flash_rwdata_start+0xffff4788>
 4025fbc:	2000211e 	bne	r4,zero,4026044 <___vfprintf_internal_r+0x2168>
 4025fc0:	9480004c 	andi	r18,r18,1
 4025fc4:	90001f1e 	bne	r18,zero,4026044 <___vfprintf_internal_r+0x2168>
 4025fc8:	00800044 	movi	r2,1
 4025fcc:	d8802e15 	stw	r2,184(sp)
 4025fd0:	003db706 	br	40256b0 <__flash_rwdata_start+0xffff4788>
 4025fd4:	00800b44 	movi	r2,45
 4025fd8:	05adc83a 	sub	r22,zero,r22
 4025fdc:	d8802305 	stb	r2,140(sp)
 4025fe0:	003f3f06 	br	4025ce0 <__flash_rwdata_start+0xffff4db8>
 4025fe4:	0005883a 	mov	r2,zero
 4025fe8:	003f5206 	br	4025d34 <__flash_rwdata_start+0xffff4e0c>
 4025fec:	90a4703a 	and	r18,r18,r2
 4025ff0:	903f4e26 	beq	r18,zero,4025d2c <__flash_rwdata_start+0xffff4e04>
 4025ff4:	003f4a06 	br	4025d20 <__flash_rwdata_start+0xffff4df8>
 4025ff8:	00800084 	movi	r2,2
 4025ffc:	10c5c83a 	sub	r2,r2,r3
 4026000:	003f8406 	br	4025e14 <__flash_rwdata_start+0xffff4eec>
 4026004:	d8802d17 	ldw	r2,180(sp)
 4026008:	d9002d17 	ldw	r4,180(sp)
 402600c:	ac400043 	ldbu	r17,1(r21)
 4026010:	10800017 	ldw	r2,0(r2)
 4026014:	582b883a 	mov	r21,r11
 4026018:	d8802915 	stw	r2,164(sp)
 402601c:	20800104 	addi	r2,r4,4
 4026020:	d9002917 	ldw	r4,164(sp)
 4026024:	d8802d15 	stw	r2,180(sp)
 4026028:	203e7a0e 	bge	r4,zero,4025a14 <__flash_rwdata_start+0xffff4aec>
 402602c:	8c403fcc 	andi	r17,r17,255
 4026030:	00bfffc4 	movi	r2,-1
 4026034:	8c40201c 	xori	r17,r17,128
 4026038:	d8802915 	stw	r2,164(sp)
 402603c:	8c7fe004 	addi	r17,r17,-128
 4026040:	00380706 	br	4024060 <__flash_rwdata_start+0xffff3138>
 4026044:	d8c02917 	ldw	r3,164(sp)
 4026048:	18c00084 	addi	r3,r3,2
 402604c:	d8c02e15 	stw	r3,184(sp)
 4026050:	1805883a 	mov	r2,r3
 4026054:	183d960e 	bge	r3,zero,40256b0 <__flash_rwdata_start+0xffff4788>
 4026058:	003fd606 	br	4025fb4 <__flash_rwdata_start+0xffff508c>
 402605c:	0005883a 	mov	r2,zero
 4026060:	003f8e06 	br	4025e9c <__flash_rwdata_start+0xffff4f74>
 4026064:	9080004c 	andi	r2,r18,1
 4026068:	103f811e 	bne	r2,zero,4025e70 <__flash_rwdata_start+0xffff4f48>
 402606c:	d8802117 	ldw	r2,132(sp)
 4026070:	1405c83a 	sub	r2,r2,r16
 4026074:	d8803315 	stw	r2,204(sp)
 4026078:	b47ef326 	beq	r22,r17,4025c48 <__flash_rwdata_start+0xffff4d20>
 402607c:	dd802617 	ldw	r22,152(sp)
 4026080:	003f1106 	br	4025cc8 <__flash_rwdata_start+0xffff4da0>
 4026084:	d9c02785 	stb	r7,158(sp)
 4026088:	00390406 	br	402449c <__flash_rwdata_start+0xffff3574>
 402608c:	d9c02785 	stb	r7,158(sp)
 4026090:	0038d306 	br	40243e0 <__flash_rwdata_start+0xffff34b8>
 4026094:	d9c02785 	stb	r7,158(sp)
 4026098:	003a6106 	br	4024a20 <__flash_rwdata_start+0xffff3af8>
 402609c:	d9c02785 	stb	r7,158(sp)
 40260a0:	003af806 	br	4024c84 <__flash_rwdata_start+0xffff3d5c>
 40260a4:	0005883a 	mov	r2,zero
 40260a8:	003d7e06 	br	40256a4 <__flash_rwdata_start+0xffff477c>
 40260ac:	d8802344 	addi	r2,sp,141
 40260b0:	003f1306 	br	4025d00 <__flash_rwdata_start+0xffff4dd8>
 40260b4:	d9c02785 	stb	r7,158(sp)
 40260b8:	00392306 	br	4024548 <__flash_rwdata_start+0xffff3620>
 40260bc:	d9c02785 	stb	r7,158(sp)
 40260c0:	003aa906 	br	4024b68 <__flash_rwdata_start+0xffff3c40>
 40260c4:	d9c02785 	stb	r7,158(sp)
 40260c8:	003a3d06 	br	40249c0 <__flash_rwdata_start+0xffff3a98>
 40260cc:	d9c02785 	stb	r7,158(sp)
 40260d0:	003aca06 	br	4024bfc <__flash_rwdata_start+0xffff3cd4>

040260d4 <__vfprintf_internal>:
 40260d4:	00800034 	movhi	r2,0
 40260d8:	10878f04 	addi	r2,r2,7740
 40260dc:	300f883a 	mov	r7,r6
 40260e0:	280d883a 	mov	r6,r5
 40260e4:	200b883a 	mov	r5,r4
 40260e8:	11000017 	ldw	r4,0(r2)
 40260ec:	4023edc1 	jmpi	4023edc <___vfprintf_internal_r>

040260f0 <__sbprintf>:
 40260f0:	2880030b 	ldhu	r2,12(r5)
 40260f4:	2ac01917 	ldw	r11,100(r5)
 40260f8:	2a80038b 	ldhu	r10,14(r5)
 40260fc:	2a400717 	ldw	r9,28(r5)
 4026100:	2a000917 	ldw	r8,36(r5)
 4026104:	defee204 	addi	sp,sp,-1144
 4026108:	00c10004 	movi	r3,1024
 402610c:	dc011a15 	stw	r16,1128(sp)
 4026110:	10bfff4c 	andi	r2,r2,65533
 4026114:	2821883a 	mov	r16,r5
 4026118:	d8cb883a 	add	r5,sp,r3
 402611c:	dc811c15 	stw	r18,1136(sp)
 4026120:	dc411b15 	stw	r17,1132(sp)
 4026124:	dfc11d15 	stw	ra,1140(sp)
 4026128:	2025883a 	mov	r18,r4
 402612c:	d881030d 	sth	r2,1036(sp)
 4026130:	dac11915 	stw	r11,1124(sp)
 4026134:	da81038d 	sth	r10,1038(sp)
 4026138:	da410715 	stw	r9,1052(sp)
 402613c:	da010915 	stw	r8,1060(sp)
 4026140:	dec10015 	stw	sp,1024(sp)
 4026144:	dec10415 	stw	sp,1040(sp)
 4026148:	d8c10215 	stw	r3,1032(sp)
 402614c:	d8c10515 	stw	r3,1044(sp)
 4026150:	d8010615 	stw	zero,1048(sp)
 4026154:	4023edc0 	call	4023edc <___vfprintf_internal_r>
 4026158:	1023883a 	mov	r17,r2
 402615c:	10000416 	blt	r2,zero,4026170 <__sbprintf+0x80>
 4026160:	d9410004 	addi	r5,sp,1024
 4026164:	9009883a 	mov	r4,r18
 4026168:	4027da40 	call	4027da4 <_fflush_r>
 402616c:	10000d1e 	bne	r2,zero,40261a4 <__sbprintf+0xb4>
 4026170:	d881030b 	ldhu	r2,1036(sp)
 4026174:	1080100c 	andi	r2,r2,64
 4026178:	10000326 	beq	r2,zero,4026188 <__sbprintf+0x98>
 402617c:	8080030b 	ldhu	r2,12(r16)
 4026180:	10801014 	ori	r2,r2,64
 4026184:	8080030d 	sth	r2,12(r16)
 4026188:	8805883a 	mov	r2,r17
 402618c:	dfc11d17 	ldw	ra,1140(sp)
 4026190:	dc811c17 	ldw	r18,1136(sp)
 4026194:	dc411b17 	ldw	r17,1132(sp)
 4026198:	dc011a17 	ldw	r16,1128(sp)
 402619c:	dec11e04 	addi	sp,sp,1144
 40261a0:	f800283a 	ret
 40261a4:	047fffc4 	movi	r17,-1
 40261a8:	003ff106 	br	4026170 <__flash_rwdata_start+0xffff5248>

040261ac <__swsetup_r>:
 40261ac:	00800034 	movhi	r2,0
 40261b0:	defffd04 	addi	sp,sp,-12
 40261b4:	10878f04 	addi	r2,r2,7740
 40261b8:	dc400115 	stw	r17,4(sp)
 40261bc:	2023883a 	mov	r17,r4
 40261c0:	11000017 	ldw	r4,0(r2)
 40261c4:	dc000015 	stw	r16,0(sp)
 40261c8:	dfc00215 	stw	ra,8(sp)
 40261cc:	2821883a 	mov	r16,r5
 40261d0:	20000226 	beq	r4,zero,40261dc <__swsetup_r+0x30>
 40261d4:	20800e17 	ldw	r2,56(r4)
 40261d8:	10003126 	beq	r2,zero,40262a0 <__swsetup_r+0xf4>
 40261dc:	8080030b 	ldhu	r2,12(r16)
 40261e0:	10c0020c 	andi	r3,r2,8
 40261e4:	1009883a 	mov	r4,r2
 40261e8:	18000f26 	beq	r3,zero,4026228 <__swsetup_r+0x7c>
 40261ec:	80c00417 	ldw	r3,16(r16)
 40261f0:	18001526 	beq	r3,zero,4026248 <__swsetup_r+0x9c>
 40261f4:	1100004c 	andi	r4,r2,1
 40261f8:	20001c1e 	bne	r4,zero,402626c <__swsetup_r+0xc0>
 40261fc:	1080008c 	andi	r2,r2,2
 4026200:	1000291e 	bne	r2,zero,40262a8 <__swsetup_r+0xfc>
 4026204:	80800517 	ldw	r2,20(r16)
 4026208:	80800215 	stw	r2,8(r16)
 402620c:	18001c26 	beq	r3,zero,4026280 <__swsetup_r+0xd4>
 4026210:	0005883a 	mov	r2,zero
 4026214:	dfc00217 	ldw	ra,8(sp)
 4026218:	dc400117 	ldw	r17,4(sp)
 402621c:	dc000017 	ldw	r16,0(sp)
 4026220:	dec00304 	addi	sp,sp,12
 4026224:	f800283a 	ret
 4026228:	2080040c 	andi	r2,r4,16
 402622c:	10002e26 	beq	r2,zero,40262e8 <__swsetup_r+0x13c>
 4026230:	2080010c 	andi	r2,r4,4
 4026234:	10001e1e 	bne	r2,zero,40262b0 <__swsetup_r+0x104>
 4026238:	80c00417 	ldw	r3,16(r16)
 402623c:	20800214 	ori	r2,r4,8
 4026240:	8080030d 	sth	r2,12(r16)
 4026244:	183feb1e 	bne	r3,zero,40261f4 <__flash_rwdata_start+0xffff52cc>
 4026248:	1100a00c 	andi	r4,r2,640
 402624c:	01408004 	movi	r5,512
 4026250:	217fe826 	beq	r4,r5,40261f4 <__flash_rwdata_start+0xffff52cc>
 4026254:	800b883a 	mov	r5,r16
 4026258:	8809883a 	mov	r4,r17
 402625c:	4028d800 	call	4028d80 <__smakebuf_r>
 4026260:	8080030b 	ldhu	r2,12(r16)
 4026264:	80c00417 	ldw	r3,16(r16)
 4026268:	003fe206 	br	40261f4 <__flash_rwdata_start+0xffff52cc>
 402626c:	80800517 	ldw	r2,20(r16)
 4026270:	80000215 	stw	zero,8(r16)
 4026274:	0085c83a 	sub	r2,zero,r2
 4026278:	80800615 	stw	r2,24(r16)
 402627c:	183fe41e 	bne	r3,zero,4026210 <__flash_rwdata_start+0xffff52e8>
 4026280:	80c0030b 	ldhu	r3,12(r16)
 4026284:	0005883a 	mov	r2,zero
 4026288:	1900200c 	andi	r4,r3,128
 402628c:	203fe126 	beq	r4,zero,4026214 <__flash_rwdata_start+0xffff52ec>
 4026290:	18c01014 	ori	r3,r3,64
 4026294:	80c0030d 	sth	r3,12(r16)
 4026298:	00bfffc4 	movi	r2,-1
 402629c:	003fdd06 	br	4026214 <__flash_rwdata_start+0xffff52ec>
 40262a0:	40281800 	call	4028180 <__sinit>
 40262a4:	003fcd06 	br	40261dc <__flash_rwdata_start+0xffff52b4>
 40262a8:	0005883a 	mov	r2,zero
 40262ac:	003fd606 	br	4026208 <__flash_rwdata_start+0xffff52e0>
 40262b0:	81400c17 	ldw	r5,48(r16)
 40262b4:	28000626 	beq	r5,zero,40262d0 <__swsetup_r+0x124>
 40262b8:	80801004 	addi	r2,r16,64
 40262bc:	28800326 	beq	r5,r2,40262cc <__swsetup_r+0x120>
 40262c0:	8809883a 	mov	r4,r17
 40262c4:	40282f40 	call	40282f4 <_free_r>
 40262c8:	8100030b 	ldhu	r4,12(r16)
 40262cc:	80000c15 	stw	zero,48(r16)
 40262d0:	80c00417 	ldw	r3,16(r16)
 40262d4:	00bff6c4 	movi	r2,-37
 40262d8:	1108703a 	and	r4,r2,r4
 40262dc:	80000115 	stw	zero,4(r16)
 40262e0:	80c00015 	stw	r3,0(r16)
 40262e4:	003fd506 	br	402623c <__flash_rwdata_start+0xffff5314>
 40262e8:	00800244 	movi	r2,9
 40262ec:	88800015 	stw	r2,0(r17)
 40262f0:	20801014 	ori	r2,r4,64
 40262f4:	8080030d 	sth	r2,12(r16)
 40262f8:	00bfffc4 	movi	r2,-1
 40262fc:	003fc506 	br	4026214 <__flash_rwdata_start+0xffff52ec>

04026300 <quorem>:
 4026300:	defff704 	addi	sp,sp,-36
 4026304:	dc800215 	stw	r18,8(sp)
 4026308:	20800417 	ldw	r2,16(r4)
 402630c:	2c800417 	ldw	r18,16(r5)
 4026310:	dfc00815 	stw	ra,32(sp)
 4026314:	ddc00715 	stw	r23,28(sp)
 4026318:	dd800615 	stw	r22,24(sp)
 402631c:	dd400515 	stw	r21,20(sp)
 4026320:	dd000415 	stw	r20,16(sp)
 4026324:	dcc00315 	stw	r19,12(sp)
 4026328:	dc400115 	stw	r17,4(sp)
 402632c:	dc000015 	stw	r16,0(sp)
 4026330:	14807116 	blt	r2,r18,40264f8 <quorem+0x1f8>
 4026334:	94bfffc4 	addi	r18,r18,-1
 4026338:	94ad883a 	add	r22,r18,r18
 402633c:	b5ad883a 	add	r22,r22,r22
 4026340:	2c400504 	addi	r17,r5,20
 4026344:	8da9883a 	add	r20,r17,r22
 4026348:	25400504 	addi	r21,r4,20
 402634c:	282f883a 	mov	r23,r5
 4026350:	adad883a 	add	r22,r21,r22
 4026354:	a1400017 	ldw	r5,0(r20)
 4026358:	2021883a 	mov	r16,r4
 402635c:	b1000017 	ldw	r4,0(r22)
 4026360:	29400044 	addi	r5,r5,1
 4026364:	40215ac0 	call	40215ac <__udivsi3>
 4026368:	1027883a 	mov	r19,r2
 402636c:	10002c26 	beq	r2,zero,4026420 <quorem+0x120>
 4026370:	a813883a 	mov	r9,r21
 4026374:	880b883a 	mov	r5,r17
 4026378:	0009883a 	mov	r4,zero
 402637c:	000d883a 	mov	r6,zero
 4026380:	2a000017 	ldw	r8,0(r5)
 4026384:	49c00017 	ldw	r7,0(r9)
 4026388:	29400104 	addi	r5,r5,4
 402638c:	40bfffcc 	andi	r2,r8,65535
 4026390:	14c5383a 	mul	r2,r2,r19
 4026394:	4010d43a 	srli	r8,r8,16
 4026398:	38ffffcc 	andi	r3,r7,65535
 402639c:	1105883a 	add	r2,r2,r4
 40263a0:	1008d43a 	srli	r4,r2,16
 40263a4:	44d1383a 	mul	r8,r8,r19
 40263a8:	198d883a 	add	r6,r3,r6
 40263ac:	10ffffcc 	andi	r3,r2,65535
 40263b0:	30c7c83a 	sub	r3,r6,r3
 40263b4:	380ed43a 	srli	r7,r7,16
 40263b8:	4105883a 	add	r2,r8,r4
 40263bc:	180dd43a 	srai	r6,r3,16
 40263c0:	113fffcc 	andi	r4,r2,65535
 40263c4:	390fc83a 	sub	r7,r7,r4
 40263c8:	398d883a 	add	r6,r7,r6
 40263cc:	300e943a 	slli	r7,r6,16
 40263d0:	18ffffcc 	andi	r3,r3,65535
 40263d4:	1008d43a 	srli	r4,r2,16
 40263d8:	38ceb03a 	or	r7,r7,r3
 40263dc:	49c00015 	stw	r7,0(r9)
 40263e0:	300dd43a 	srai	r6,r6,16
 40263e4:	4a400104 	addi	r9,r9,4
 40263e8:	a17fe52e 	bgeu	r20,r5,4026380 <__flash_rwdata_start+0xffff5458>
 40263ec:	b0800017 	ldw	r2,0(r22)
 40263f0:	10000b1e 	bne	r2,zero,4026420 <quorem+0x120>
 40263f4:	b0bfff04 	addi	r2,r22,-4
 40263f8:	a880082e 	bgeu	r21,r2,402641c <quorem+0x11c>
 40263fc:	b0ffff17 	ldw	r3,-4(r22)
 4026400:	18000326 	beq	r3,zero,4026410 <quorem+0x110>
 4026404:	00000506 	br	402641c <quorem+0x11c>
 4026408:	10c00017 	ldw	r3,0(r2)
 402640c:	1800031e 	bne	r3,zero,402641c <quorem+0x11c>
 4026410:	10bfff04 	addi	r2,r2,-4
 4026414:	94bfffc4 	addi	r18,r18,-1
 4026418:	a8bffb36 	bltu	r21,r2,4026408 <__flash_rwdata_start+0xffff54e0>
 402641c:	84800415 	stw	r18,16(r16)
 4026420:	b80b883a 	mov	r5,r23
 4026424:	8009883a 	mov	r4,r16
 4026428:	402a4c00 	call	402a4c0 <__mcmp>
 402642c:	10002616 	blt	r2,zero,40264c8 <quorem+0x1c8>
 4026430:	9cc00044 	addi	r19,r19,1
 4026434:	a805883a 	mov	r2,r21
 4026438:	000b883a 	mov	r5,zero
 402643c:	11000017 	ldw	r4,0(r2)
 4026440:	89800017 	ldw	r6,0(r17)
 4026444:	10800104 	addi	r2,r2,4
 4026448:	20ffffcc 	andi	r3,r4,65535
 402644c:	194b883a 	add	r5,r3,r5
 4026450:	30ffffcc 	andi	r3,r6,65535
 4026454:	28c7c83a 	sub	r3,r5,r3
 4026458:	300cd43a 	srli	r6,r6,16
 402645c:	2008d43a 	srli	r4,r4,16
 4026460:	180bd43a 	srai	r5,r3,16
 4026464:	18ffffcc 	andi	r3,r3,65535
 4026468:	2189c83a 	sub	r4,r4,r6
 402646c:	2149883a 	add	r4,r4,r5
 4026470:	200c943a 	slli	r6,r4,16
 4026474:	8c400104 	addi	r17,r17,4
 4026478:	200bd43a 	srai	r5,r4,16
 402647c:	30c6b03a 	or	r3,r6,r3
 4026480:	10ffff15 	stw	r3,-4(r2)
 4026484:	a47fed2e 	bgeu	r20,r17,402643c <__flash_rwdata_start+0xffff5514>
 4026488:	9485883a 	add	r2,r18,r18
 402648c:	1085883a 	add	r2,r2,r2
 4026490:	a887883a 	add	r3,r21,r2
 4026494:	18800017 	ldw	r2,0(r3)
 4026498:	10000b1e 	bne	r2,zero,40264c8 <quorem+0x1c8>
 402649c:	18bfff04 	addi	r2,r3,-4
 40264a0:	a880082e 	bgeu	r21,r2,40264c4 <quorem+0x1c4>
 40264a4:	18ffff17 	ldw	r3,-4(r3)
 40264a8:	18000326 	beq	r3,zero,40264b8 <quorem+0x1b8>
 40264ac:	00000506 	br	40264c4 <quorem+0x1c4>
 40264b0:	10c00017 	ldw	r3,0(r2)
 40264b4:	1800031e 	bne	r3,zero,40264c4 <quorem+0x1c4>
 40264b8:	10bfff04 	addi	r2,r2,-4
 40264bc:	94bfffc4 	addi	r18,r18,-1
 40264c0:	a8bffb36 	bltu	r21,r2,40264b0 <__flash_rwdata_start+0xffff5588>
 40264c4:	84800415 	stw	r18,16(r16)
 40264c8:	9805883a 	mov	r2,r19
 40264cc:	dfc00817 	ldw	ra,32(sp)
 40264d0:	ddc00717 	ldw	r23,28(sp)
 40264d4:	dd800617 	ldw	r22,24(sp)
 40264d8:	dd400517 	ldw	r21,20(sp)
 40264dc:	dd000417 	ldw	r20,16(sp)
 40264e0:	dcc00317 	ldw	r19,12(sp)
 40264e4:	dc800217 	ldw	r18,8(sp)
 40264e8:	dc400117 	ldw	r17,4(sp)
 40264ec:	dc000017 	ldw	r16,0(sp)
 40264f0:	dec00904 	addi	sp,sp,36
 40264f4:	f800283a 	ret
 40264f8:	0005883a 	mov	r2,zero
 40264fc:	003ff306 	br	40264cc <__flash_rwdata_start+0xffff55a4>

04026500 <_dtoa_r>:
 4026500:	20801017 	ldw	r2,64(r4)
 4026504:	deffde04 	addi	sp,sp,-136
 4026508:	df002015 	stw	fp,128(sp)
 402650c:	dcc01b15 	stw	r19,108(sp)
 4026510:	dc801a15 	stw	r18,104(sp)
 4026514:	dc401915 	stw	r17,100(sp)
 4026518:	dc001815 	stw	r16,96(sp)
 402651c:	dfc02115 	stw	ra,132(sp)
 4026520:	ddc01f15 	stw	r23,124(sp)
 4026524:	dd801e15 	stw	r22,120(sp)
 4026528:	dd401d15 	stw	r21,116(sp)
 402652c:	dd001c15 	stw	r20,112(sp)
 4026530:	d9c00315 	stw	r7,12(sp)
 4026534:	2039883a 	mov	fp,r4
 4026538:	3023883a 	mov	r17,r6
 402653c:	2825883a 	mov	r18,r5
 4026540:	dc002417 	ldw	r16,144(sp)
 4026544:	3027883a 	mov	r19,r6
 4026548:	10000826 	beq	r2,zero,402656c <_dtoa_r+0x6c>
 402654c:	21801117 	ldw	r6,68(r4)
 4026550:	00c00044 	movi	r3,1
 4026554:	100b883a 	mov	r5,r2
 4026558:	1986983a 	sll	r3,r3,r6
 402655c:	11800115 	stw	r6,4(r2)
 4026560:	10c00215 	stw	r3,8(r2)
 4026564:	4029ca00 	call	4029ca0 <_Bfree>
 4026568:	e0001015 	stw	zero,64(fp)
 402656c:	88002e16 	blt	r17,zero,4026628 <_dtoa_r+0x128>
 4026570:	80000015 	stw	zero,0(r16)
 4026574:	889ffc2c 	andhi	r2,r17,32752
 4026578:	00dffc34 	movhi	r3,32752
 402657c:	10c01c26 	beq	r2,r3,40265f0 <_dtoa_r+0xf0>
 4026580:	000d883a 	mov	r6,zero
 4026584:	000f883a 	mov	r7,zero
 4026588:	9009883a 	mov	r4,r18
 402658c:	980b883a 	mov	r5,r19
 4026590:	40227fc0 	call	40227fc <__eqdf2>
 4026594:	10002b1e 	bne	r2,zero,4026644 <_dtoa_r+0x144>
 4026598:	d9c02317 	ldw	r7,140(sp)
 402659c:	00800044 	movi	r2,1
 40265a0:	38800015 	stw	r2,0(r7)
 40265a4:	d8802517 	ldw	r2,148(sp)
 40265a8:	10019e26 	beq	r2,zero,4026c24 <_dtoa_r+0x724>
 40265ac:	d8c02517 	ldw	r3,148(sp)
 40265b0:	00800034 	movhi	r2,0
 40265b4:	10801a44 	addi	r2,r2,105
 40265b8:	18800015 	stw	r2,0(r3)
 40265bc:	10bfffc4 	addi	r2,r2,-1
 40265c0:	dfc02117 	ldw	ra,132(sp)
 40265c4:	df002017 	ldw	fp,128(sp)
 40265c8:	ddc01f17 	ldw	r23,124(sp)
 40265cc:	dd801e17 	ldw	r22,120(sp)
 40265d0:	dd401d17 	ldw	r21,116(sp)
 40265d4:	dd001c17 	ldw	r20,112(sp)
 40265d8:	dcc01b17 	ldw	r19,108(sp)
 40265dc:	dc801a17 	ldw	r18,104(sp)
 40265e0:	dc401917 	ldw	r17,100(sp)
 40265e4:	dc001817 	ldw	r16,96(sp)
 40265e8:	dec02204 	addi	sp,sp,136
 40265ec:	f800283a 	ret
 40265f0:	d8c02317 	ldw	r3,140(sp)
 40265f4:	0089c3c4 	movi	r2,9999
 40265f8:	18800015 	stw	r2,0(r3)
 40265fc:	90017726 	beq	r18,zero,4026bdc <_dtoa_r+0x6dc>
 4026600:	00800034 	movhi	r2,0
 4026604:	10807804 	addi	r2,r2,480
 4026608:	d9002517 	ldw	r4,148(sp)
 402660c:	203fec26 	beq	r4,zero,40265c0 <__flash_rwdata_start+0xffff5698>
 4026610:	10c000c7 	ldb	r3,3(r2)
 4026614:	1801781e 	bne	r3,zero,4026bf8 <_dtoa_r+0x6f8>
 4026618:	10c000c4 	addi	r3,r2,3
 402661c:	d9802517 	ldw	r6,148(sp)
 4026620:	30c00015 	stw	r3,0(r6)
 4026624:	003fe606 	br	40265c0 <__flash_rwdata_start+0xffff5698>
 4026628:	04e00034 	movhi	r19,32768
 402662c:	9cffffc4 	addi	r19,r19,-1
 4026630:	00800044 	movi	r2,1
 4026634:	8ce6703a 	and	r19,r17,r19
 4026638:	80800015 	stw	r2,0(r16)
 402663c:	9823883a 	mov	r17,r19
 4026640:	003fcc06 	br	4026574 <__flash_rwdata_start+0xffff564c>
 4026644:	d8800204 	addi	r2,sp,8
 4026648:	d8800015 	stw	r2,0(sp)
 402664c:	d9c00104 	addi	r7,sp,4
 4026650:	900b883a 	mov	r5,r18
 4026654:	980d883a 	mov	r6,r19
 4026658:	e009883a 	mov	r4,fp
 402665c:	8820d53a 	srli	r16,r17,20
 4026660:	402a88c0 	call	402a88c <__d2b>
 4026664:	d8800915 	stw	r2,36(sp)
 4026668:	8001651e 	bne	r16,zero,4026c00 <_dtoa_r+0x700>
 402666c:	dd800217 	ldw	r22,8(sp)
 4026670:	dc000117 	ldw	r16,4(sp)
 4026674:	00800804 	movi	r2,32
 4026678:	b421883a 	add	r16,r22,r16
 402667c:	80c10c84 	addi	r3,r16,1074
 4026680:	10c2d10e 	bge	r2,r3,40271c8 <_dtoa_r+0xcc8>
 4026684:	00801004 	movi	r2,64
 4026688:	81010484 	addi	r4,r16,1042
 402668c:	10c7c83a 	sub	r3,r2,r3
 4026690:	9108d83a 	srl	r4,r18,r4
 4026694:	88e2983a 	sll	r17,r17,r3
 4026698:	2448b03a 	or	r4,r4,r17
 402669c:	402de500 	call	402de50 <__floatunsidf>
 40266a0:	017f8434 	movhi	r5,65040
 40266a4:	01800044 	movi	r6,1
 40266a8:	1009883a 	mov	r4,r2
 40266ac:	194b883a 	add	r5,r3,r5
 40266b0:	843fffc4 	addi	r16,r16,-1
 40266b4:	d9801115 	stw	r6,68(sp)
 40266b8:	000d883a 	mov	r6,zero
 40266bc:	01cffe34 	movhi	r7,16376
 40266c0:	402316c0 	call	402316c <__subdf3>
 40266c4:	0198dbf4 	movhi	r6,25455
 40266c8:	01cff4f4 	movhi	r7,16339
 40266cc:	3190d844 	addi	r6,r6,17249
 40266d0:	39e1e9c4 	addi	r7,r7,-30809
 40266d4:	1009883a 	mov	r4,r2
 40266d8:	180b883a 	mov	r5,r3
 40266dc:	4022a540 	call	4022a54 <__muldf3>
 40266e0:	01a2d874 	movhi	r6,35681
 40266e4:	01cff1f4 	movhi	r7,16327
 40266e8:	31b22cc4 	addi	r6,r6,-14157
 40266ec:	39e28a04 	addi	r7,r7,-30168
 40266f0:	180b883a 	mov	r5,r3
 40266f4:	1009883a 	mov	r4,r2
 40266f8:	40216680 	call	4021668 <__adddf3>
 40266fc:	8009883a 	mov	r4,r16
 4026700:	1029883a 	mov	r20,r2
 4026704:	1823883a 	mov	r17,r3
 4026708:	4023ae80 	call	4023ae8 <__floatsidf>
 402670c:	019427f4 	movhi	r6,20639
 4026710:	01cff4f4 	movhi	r7,16339
 4026714:	319e7ec4 	addi	r6,r6,31227
 4026718:	39d104c4 	addi	r7,r7,17427
 402671c:	1009883a 	mov	r4,r2
 4026720:	180b883a 	mov	r5,r3
 4026724:	4022a540 	call	4022a54 <__muldf3>
 4026728:	100d883a 	mov	r6,r2
 402672c:	180f883a 	mov	r7,r3
 4026730:	a009883a 	mov	r4,r20
 4026734:	880b883a 	mov	r5,r17
 4026738:	40216680 	call	4021668 <__adddf3>
 402673c:	1009883a 	mov	r4,r2
 4026740:	180b883a 	mov	r5,r3
 4026744:	1029883a 	mov	r20,r2
 4026748:	1823883a 	mov	r17,r3
 402674c:	4023a680 	call	4023a68 <__fixdfsi>
 4026750:	000d883a 	mov	r6,zero
 4026754:	000f883a 	mov	r7,zero
 4026758:	a009883a 	mov	r4,r20
 402675c:	880b883a 	mov	r5,r17
 4026760:	d8800515 	stw	r2,20(sp)
 4026764:	40229600 	call	4022960 <__ledf2>
 4026768:	10028716 	blt	r2,zero,4027188 <_dtoa_r+0xc88>
 402676c:	d8c00517 	ldw	r3,20(sp)
 4026770:	00800584 	movi	r2,22
 4026774:	10c27536 	bltu	r2,r3,402714c <_dtoa_r+0xc4c>
 4026778:	180490fa 	slli	r2,r3,3
 402677c:	00c00034 	movhi	r3,0
 4026780:	18c09304 	addi	r3,r3,588
 4026784:	1885883a 	add	r2,r3,r2
 4026788:	11000017 	ldw	r4,0(r2)
 402678c:	11400117 	ldw	r5,4(r2)
 4026790:	900d883a 	mov	r6,r18
 4026794:	980f883a 	mov	r7,r19
 4026798:	40228840 	call	4022884 <__gedf2>
 402679c:	00828d0e 	bge	zero,r2,40271d4 <_dtoa_r+0xcd4>
 40267a0:	d9000517 	ldw	r4,20(sp)
 40267a4:	d8000e15 	stw	zero,56(sp)
 40267a8:	213fffc4 	addi	r4,r4,-1
 40267ac:	d9000515 	stw	r4,20(sp)
 40267b0:	b42dc83a 	sub	r22,r22,r16
 40267b4:	b5bfffc4 	addi	r22,r22,-1
 40267b8:	b0026f16 	blt	r22,zero,4027178 <_dtoa_r+0xc78>
 40267bc:	d8000815 	stw	zero,32(sp)
 40267c0:	d9c00517 	ldw	r7,20(sp)
 40267c4:	38026416 	blt	r7,zero,4027158 <_dtoa_r+0xc58>
 40267c8:	b1ed883a 	add	r22,r22,r7
 40267cc:	d9c00d15 	stw	r7,52(sp)
 40267d0:	d8000a15 	stw	zero,40(sp)
 40267d4:	d9800317 	ldw	r6,12(sp)
 40267d8:	00800244 	movi	r2,9
 40267dc:	11811436 	bltu	r2,r6,4026c30 <_dtoa_r+0x730>
 40267e0:	00800144 	movi	r2,5
 40267e4:	1184e10e 	bge	r2,r6,4027b6c <_dtoa_r+0x166c>
 40267e8:	31bfff04 	addi	r6,r6,-4
 40267ec:	d9800315 	stw	r6,12(sp)
 40267f0:	0023883a 	mov	r17,zero
 40267f4:	d9800317 	ldw	r6,12(sp)
 40267f8:	008000c4 	movi	r2,3
 40267fc:	30836726 	beq	r6,r2,402759c <_dtoa_r+0x109c>
 4026800:	1183410e 	bge	r2,r6,4027508 <_dtoa_r+0x1008>
 4026804:	d9c00317 	ldw	r7,12(sp)
 4026808:	00800104 	movi	r2,4
 402680c:	38827c26 	beq	r7,r2,4027200 <_dtoa_r+0xd00>
 4026810:	00800144 	movi	r2,5
 4026814:	3884c41e 	bne	r7,r2,4027b28 <_dtoa_r+0x1628>
 4026818:	00800044 	movi	r2,1
 402681c:	d8800b15 	stw	r2,44(sp)
 4026820:	d8c00517 	ldw	r3,20(sp)
 4026824:	d9002217 	ldw	r4,136(sp)
 4026828:	1907883a 	add	r3,r3,r4
 402682c:	19800044 	addi	r6,r3,1
 4026830:	d8c00c15 	stw	r3,48(sp)
 4026834:	d9800615 	stw	r6,24(sp)
 4026838:	0183a40e 	bge	zero,r6,40276cc <_dtoa_r+0x11cc>
 402683c:	d9800617 	ldw	r6,24(sp)
 4026840:	3021883a 	mov	r16,r6
 4026844:	e0001115 	stw	zero,68(fp)
 4026848:	008005c4 	movi	r2,23
 402684c:	1184c92e 	bgeu	r2,r6,4027b74 <_dtoa_r+0x1674>
 4026850:	00c00044 	movi	r3,1
 4026854:	00800104 	movi	r2,4
 4026858:	1085883a 	add	r2,r2,r2
 402685c:	11000504 	addi	r4,r2,20
 4026860:	180b883a 	mov	r5,r3
 4026864:	18c00044 	addi	r3,r3,1
 4026868:	313ffb2e 	bgeu	r6,r4,4026858 <__flash_rwdata_start+0xffff5930>
 402686c:	e1401115 	stw	r5,68(fp)
 4026870:	e009883a 	mov	r4,fp
 4026874:	4029bf80 	call	4029bf8 <_Balloc>
 4026878:	d8800715 	stw	r2,28(sp)
 402687c:	e0801015 	stw	r2,64(fp)
 4026880:	00800384 	movi	r2,14
 4026884:	1400f736 	bltu	r2,r16,4026c64 <_dtoa_r+0x764>
 4026888:	8800f626 	beq	r17,zero,4026c64 <_dtoa_r+0x764>
 402688c:	d9c00517 	ldw	r7,20(sp)
 4026890:	01c39a0e 	bge	zero,r7,40276fc <_dtoa_r+0x11fc>
 4026894:	388003cc 	andi	r2,r7,15
 4026898:	100490fa 	slli	r2,r2,3
 402689c:	382bd13a 	srai	r21,r7,4
 40268a0:	00c00034 	movhi	r3,0
 40268a4:	18c09304 	addi	r3,r3,588
 40268a8:	1885883a 	add	r2,r3,r2
 40268ac:	a8c0040c 	andi	r3,r21,16
 40268b0:	12400017 	ldw	r9,0(r2)
 40268b4:	12000117 	ldw	r8,4(r2)
 40268b8:	18037926 	beq	r3,zero,40276a0 <_dtoa_r+0x11a0>
 40268bc:	00800034 	movhi	r2,0
 40268c0:	10808904 	addi	r2,r2,548
 40268c4:	11800817 	ldw	r6,32(r2)
 40268c8:	11c00917 	ldw	r7,36(r2)
 40268cc:	9009883a 	mov	r4,r18
 40268d0:	980b883a 	mov	r5,r19
 40268d4:	da001715 	stw	r8,92(sp)
 40268d8:	da401615 	stw	r9,88(sp)
 40268dc:	4021f140 	call	4021f14 <__divdf3>
 40268e0:	da001717 	ldw	r8,92(sp)
 40268e4:	da401617 	ldw	r9,88(sp)
 40268e8:	ad4003cc 	andi	r21,r21,15
 40268ec:	040000c4 	movi	r16,3
 40268f0:	1023883a 	mov	r17,r2
 40268f4:	1829883a 	mov	r20,r3
 40268f8:	a8001126 	beq	r21,zero,4026940 <_dtoa_r+0x440>
 40268fc:	05c00034 	movhi	r23,0
 4026900:	bdc08904 	addi	r23,r23,548
 4026904:	4805883a 	mov	r2,r9
 4026908:	4007883a 	mov	r3,r8
 402690c:	a980004c 	andi	r6,r21,1
 4026910:	1009883a 	mov	r4,r2
 4026914:	a82bd07a 	srai	r21,r21,1
 4026918:	180b883a 	mov	r5,r3
 402691c:	30000426 	beq	r6,zero,4026930 <_dtoa_r+0x430>
 4026920:	b9800017 	ldw	r6,0(r23)
 4026924:	b9c00117 	ldw	r7,4(r23)
 4026928:	84000044 	addi	r16,r16,1
 402692c:	4022a540 	call	4022a54 <__muldf3>
 4026930:	bdc00204 	addi	r23,r23,8
 4026934:	a83ff51e 	bne	r21,zero,402690c <__flash_rwdata_start+0xffff59e4>
 4026938:	1013883a 	mov	r9,r2
 402693c:	1811883a 	mov	r8,r3
 4026940:	480d883a 	mov	r6,r9
 4026944:	400f883a 	mov	r7,r8
 4026948:	8809883a 	mov	r4,r17
 402694c:	a00b883a 	mov	r5,r20
 4026950:	4021f140 	call	4021f14 <__divdf3>
 4026954:	d8800f15 	stw	r2,60(sp)
 4026958:	d8c01015 	stw	r3,64(sp)
 402695c:	d8c00e17 	ldw	r3,56(sp)
 4026960:	18000626 	beq	r3,zero,402697c <_dtoa_r+0x47c>
 4026964:	d9000f17 	ldw	r4,60(sp)
 4026968:	d9401017 	ldw	r5,64(sp)
 402696c:	000d883a 	mov	r6,zero
 4026970:	01cffc34 	movhi	r7,16368
 4026974:	40229600 	call	4022960 <__ledf2>
 4026978:	10040b16 	blt	r2,zero,40279a8 <_dtoa_r+0x14a8>
 402697c:	8009883a 	mov	r4,r16
 4026980:	4023ae80 	call	4023ae8 <__floatsidf>
 4026984:	d9800f17 	ldw	r6,60(sp)
 4026988:	d9c01017 	ldw	r7,64(sp)
 402698c:	1009883a 	mov	r4,r2
 4026990:	180b883a 	mov	r5,r3
 4026994:	4022a540 	call	4022a54 <__muldf3>
 4026998:	000d883a 	mov	r6,zero
 402699c:	01d00734 	movhi	r7,16412
 40269a0:	1009883a 	mov	r4,r2
 40269a4:	180b883a 	mov	r5,r3
 40269a8:	40216680 	call	4021668 <__adddf3>
 40269ac:	1021883a 	mov	r16,r2
 40269b0:	d8800617 	ldw	r2,24(sp)
 40269b4:	047f3034 	movhi	r17,64704
 40269b8:	1c63883a 	add	r17,r3,r17
 40269bc:	10031826 	beq	r2,zero,4027620 <_dtoa_r+0x1120>
 40269c0:	d8c00517 	ldw	r3,20(sp)
 40269c4:	db000617 	ldw	r12,24(sp)
 40269c8:	d8c01315 	stw	r3,76(sp)
 40269cc:	d9000b17 	ldw	r4,44(sp)
 40269d0:	20038f26 	beq	r4,zero,4027810 <_dtoa_r+0x1310>
 40269d4:	60bfffc4 	addi	r2,r12,-1
 40269d8:	100490fa 	slli	r2,r2,3
 40269dc:	00c00034 	movhi	r3,0
 40269e0:	18c09304 	addi	r3,r3,588
 40269e4:	1885883a 	add	r2,r3,r2
 40269e8:	11800017 	ldw	r6,0(r2)
 40269ec:	11c00117 	ldw	r7,4(r2)
 40269f0:	d8800717 	ldw	r2,28(sp)
 40269f4:	0009883a 	mov	r4,zero
 40269f8:	014ff834 	movhi	r5,16352
 40269fc:	db001615 	stw	r12,88(sp)
 4026a00:	15c00044 	addi	r23,r2,1
 4026a04:	4021f140 	call	4021f14 <__divdf3>
 4026a08:	800d883a 	mov	r6,r16
 4026a0c:	880f883a 	mov	r7,r17
 4026a10:	1009883a 	mov	r4,r2
 4026a14:	180b883a 	mov	r5,r3
 4026a18:	402316c0 	call	402316c <__subdf3>
 4026a1c:	d9401017 	ldw	r5,64(sp)
 4026a20:	d9000f17 	ldw	r4,60(sp)
 4026a24:	102b883a 	mov	r21,r2
 4026a28:	d8c01215 	stw	r3,72(sp)
 4026a2c:	4023a680 	call	4023a68 <__fixdfsi>
 4026a30:	1009883a 	mov	r4,r2
 4026a34:	1029883a 	mov	r20,r2
 4026a38:	4023ae80 	call	4023ae8 <__floatsidf>
 4026a3c:	d9000f17 	ldw	r4,60(sp)
 4026a40:	d9401017 	ldw	r5,64(sp)
 4026a44:	100d883a 	mov	r6,r2
 4026a48:	180f883a 	mov	r7,r3
 4026a4c:	402316c0 	call	402316c <__subdf3>
 4026a50:	1823883a 	mov	r17,r3
 4026a54:	d8c00717 	ldw	r3,28(sp)
 4026a58:	d9401217 	ldw	r5,72(sp)
 4026a5c:	a2000c04 	addi	r8,r20,48
 4026a60:	1021883a 	mov	r16,r2
 4026a64:	1a000005 	stb	r8,0(r3)
 4026a68:	800d883a 	mov	r6,r16
 4026a6c:	880f883a 	mov	r7,r17
 4026a70:	a809883a 	mov	r4,r21
 4026a74:	4029883a 	mov	r20,r8
 4026a78:	40228840 	call	4022884 <__gedf2>
 4026a7c:	00841d16 	blt	zero,r2,4027af4 <_dtoa_r+0x15f4>
 4026a80:	800d883a 	mov	r6,r16
 4026a84:	880f883a 	mov	r7,r17
 4026a88:	0009883a 	mov	r4,zero
 4026a8c:	014ffc34 	movhi	r5,16368
 4026a90:	402316c0 	call	402316c <__subdf3>
 4026a94:	d9401217 	ldw	r5,72(sp)
 4026a98:	100d883a 	mov	r6,r2
 4026a9c:	180f883a 	mov	r7,r3
 4026aa0:	a809883a 	mov	r4,r21
 4026aa4:	40228840 	call	4022884 <__gedf2>
 4026aa8:	db001617 	ldw	r12,88(sp)
 4026aac:	00840e16 	blt	zero,r2,4027ae8 <_dtoa_r+0x15e8>
 4026ab0:	00800044 	movi	r2,1
 4026ab4:	13006b0e 	bge	r2,r12,4026c64 <_dtoa_r+0x764>
 4026ab8:	d9000717 	ldw	r4,28(sp)
 4026abc:	dd800f15 	stw	r22,60(sp)
 4026ac0:	dcc01015 	stw	r19,64(sp)
 4026ac4:	2319883a 	add	r12,r4,r12
 4026ac8:	dcc01217 	ldw	r19,72(sp)
 4026acc:	602d883a 	mov	r22,r12
 4026ad0:	dc801215 	stw	r18,72(sp)
 4026ad4:	b825883a 	mov	r18,r23
 4026ad8:	00000906 	br	4026b00 <_dtoa_r+0x600>
 4026adc:	402316c0 	call	402316c <__subdf3>
 4026ae0:	a80d883a 	mov	r6,r21
 4026ae4:	980f883a 	mov	r7,r19
 4026ae8:	1009883a 	mov	r4,r2
 4026aec:	180b883a 	mov	r5,r3
 4026af0:	40229600 	call	4022960 <__ledf2>
 4026af4:	1003e816 	blt	r2,zero,4027a98 <_dtoa_r+0x1598>
 4026af8:	b825883a 	mov	r18,r23
 4026afc:	bd83e926 	beq	r23,r22,4027aa4 <_dtoa_r+0x15a4>
 4026b00:	a809883a 	mov	r4,r21
 4026b04:	980b883a 	mov	r5,r19
 4026b08:	000d883a 	mov	r6,zero
 4026b0c:	01d00934 	movhi	r7,16420
 4026b10:	4022a540 	call	4022a54 <__muldf3>
 4026b14:	000d883a 	mov	r6,zero
 4026b18:	01d00934 	movhi	r7,16420
 4026b1c:	8009883a 	mov	r4,r16
 4026b20:	880b883a 	mov	r5,r17
 4026b24:	102b883a 	mov	r21,r2
 4026b28:	1827883a 	mov	r19,r3
 4026b2c:	4022a540 	call	4022a54 <__muldf3>
 4026b30:	180b883a 	mov	r5,r3
 4026b34:	1009883a 	mov	r4,r2
 4026b38:	1821883a 	mov	r16,r3
 4026b3c:	1023883a 	mov	r17,r2
 4026b40:	4023a680 	call	4023a68 <__fixdfsi>
 4026b44:	1009883a 	mov	r4,r2
 4026b48:	1029883a 	mov	r20,r2
 4026b4c:	4023ae80 	call	4023ae8 <__floatsidf>
 4026b50:	8809883a 	mov	r4,r17
 4026b54:	800b883a 	mov	r5,r16
 4026b58:	100d883a 	mov	r6,r2
 4026b5c:	180f883a 	mov	r7,r3
 4026b60:	402316c0 	call	402316c <__subdf3>
 4026b64:	a5000c04 	addi	r20,r20,48
 4026b68:	a80d883a 	mov	r6,r21
 4026b6c:	980f883a 	mov	r7,r19
 4026b70:	1009883a 	mov	r4,r2
 4026b74:	180b883a 	mov	r5,r3
 4026b78:	95000005 	stb	r20,0(r18)
 4026b7c:	1021883a 	mov	r16,r2
 4026b80:	1823883a 	mov	r17,r3
 4026b84:	40229600 	call	4022960 <__ledf2>
 4026b88:	bdc00044 	addi	r23,r23,1
 4026b8c:	800d883a 	mov	r6,r16
 4026b90:	880f883a 	mov	r7,r17
 4026b94:	0009883a 	mov	r4,zero
 4026b98:	014ffc34 	movhi	r5,16368
 4026b9c:	103fcf0e 	bge	r2,zero,4026adc <__flash_rwdata_start+0xffff5bb4>
 4026ba0:	d8c01317 	ldw	r3,76(sp)
 4026ba4:	d8c00515 	stw	r3,20(sp)
 4026ba8:	d9400917 	ldw	r5,36(sp)
 4026bac:	e009883a 	mov	r4,fp
 4026bb0:	4029ca00 	call	4029ca0 <_Bfree>
 4026bb4:	d9000517 	ldw	r4,20(sp)
 4026bb8:	d9802317 	ldw	r6,140(sp)
 4026bbc:	d9c02517 	ldw	r7,148(sp)
 4026bc0:	b8000005 	stb	zero,0(r23)
 4026bc4:	20800044 	addi	r2,r4,1
 4026bc8:	30800015 	stw	r2,0(r6)
 4026bcc:	3802aa26 	beq	r7,zero,4027678 <_dtoa_r+0x1178>
 4026bd0:	3dc00015 	stw	r23,0(r7)
 4026bd4:	d8800717 	ldw	r2,28(sp)
 4026bd8:	003e7906 	br	40265c0 <__flash_rwdata_start+0xffff5698>
 4026bdc:	00800434 	movhi	r2,16
 4026be0:	10bfffc4 	addi	r2,r2,-1
 4026be4:	88a2703a 	and	r17,r17,r2
 4026be8:	883e851e 	bne	r17,zero,4026600 <__flash_rwdata_start+0xffff56d8>
 4026bec:	00800034 	movhi	r2,0
 4026bf0:	10807504 	addi	r2,r2,468
 4026bf4:	003e8406 	br	4026608 <__flash_rwdata_start+0xffff56e0>
 4026bf8:	10c00204 	addi	r3,r2,8
 4026bfc:	003e8706 	br	402661c <__flash_rwdata_start+0xffff56f4>
 4026c00:	01400434 	movhi	r5,16
 4026c04:	297fffc4 	addi	r5,r5,-1
 4026c08:	994a703a 	and	r5,r19,r5
 4026c0c:	9009883a 	mov	r4,r18
 4026c10:	843f0044 	addi	r16,r16,-1023
 4026c14:	294ffc34 	orhi	r5,r5,16368
 4026c18:	dd800217 	ldw	r22,8(sp)
 4026c1c:	d8001115 	stw	zero,68(sp)
 4026c20:	003ea506 	br	40266b8 <__flash_rwdata_start+0xffff5790>
 4026c24:	00800034 	movhi	r2,0
 4026c28:	10801a04 	addi	r2,r2,104
 4026c2c:	003e6406 	br	40265c0 <__flash_rwdata_start+0xffff5698>
 4026c30:	e0001115 	stw	zero,68(fp)
 4026c34:	000b883a 	mov	r5,zero
 4026c38:	e009883a 	mov	r4,fp
 4026c3c:	4029bf80 	call	4029bf8 <_Balloc>
 4026c40:	01bfffc4 	movi	r6,-1
 4026c44:	01c00044 	movi	r7,1
 4026c48:	d8800715 	stw	r2,28(sp)
 4026c4c:	d9800c15 	stw	r6,48(sp)
 4026c50:	e0801015 	stw	r2,64(fp)
 4026c54:	d8000315 	stw	zero,12(sp)
 4026c58:	d9c00b15 	stw	r7,44(sp)
 4026c5c:	d9800615 	stw	r6,24(sp)
 4026c60:	d8002215 	stw	zero,136(sp)
 4026c64:	d8800117 	ldw	r2,4(sp)
 4026c68:	10008916 	blt	r2,zero,4026e90 <_dtoa_r+0x990>
 4026c6c:	d9000517 	ldw	r4,20(sp)
 4026c70:	00c00384 	movi	r3,14
 4026c74:	19008616 	blt	r3,r4,4026e90 <_dtoa_r+0x990>
 4026c78:	200490fa 	slli	r2,r4,3
 4026c7c:	00c00034 	movhi	r3,0
 4026c80:	d9802217 	ldw	r6,136(sp)
 4026c84:	18c09304 	addi	r3,r3,588
 4026c88:	1885883a 	add	r2,r3,r2
 4026c8c:	14000017 	ldw	r16,0(r2)
 4026c90:	14400117 	ldw	r17,4(r2)
 4026c94:	30016316 	blt	r6,zero,4027224 <_dtoa_r+0xd24>
 4026c98:	800d883a 	mov	r6,r16
 4026c9c:	880f883a 	mov	r7,r17
 4026ca0:	9009883a 	mov	r4,r18
 4026ca4:	980b883a 	mov	r5,r19
 4026ca8:	4021f140 	call	4021f14 <__divdf3>
 4026cac:	180b883a 	mov	r5,r3
 4026cb0:	1009883a 	mov	r4,r2
 4026cb4:	4023a680 	call	4023a68 <__fixdfsi>
 4026cb8:	1009883a 	mov	r4,r2
 4026cbc:	102b883a 	mov	r21,r2
 4026cc0:	4023ae80 	call	4023ae8 <__floatsidf>
 4026cc4:	800d883a 	mov	r6,r16
 4026cc8:	880f883a 	mov	r7,r17
 4026ccc:	1009883a 	mov	r4,r2
 4026cd0:	180b883a 	mov	r5,r3
 4026cd4:	4022a540 	call	4022a54 <__muldf3>
 4026cd8:	100d883a 	mov	r6,r2
 4026cdc:	180f883a 	mov	r7,r3
 4026ce0:	9009883a 	mov	r4,r18
 4026ce4:	980b883a 	mov	r5,r19
 4026ce8:	402316c0 	call	402316c <__subdf3>
 4026cec:	d9c00717 	ldw	r7,28(sp)
 4026cf0:	1009883a 	mov	r4,r2
 4026cf4:	a8800c04 	addi	r2,r21,48
 4026cf8:	38800005 	stb	r2,0(r7)
 4026cfc:	3dc00044 	addi	r23,r7,1
 4026d00:	d9c00617 	ldw	r7,24(sp)
 4026d04:	01800044 	movi	r6,1
 4026d08:	180b883a 	mov	r5,r3
 4026d0c:	2005883a 	mov	r2,r4
 4026d10:	39803826 	beq	r7,r6,4026df4 <_dtoa_r+0x8f4>
 4026d14:	000d883a 	mov	r6,zero
 4026d18:	01d00934 	movhi	r7,16420
 4026d1c:	4022a540 	call	4022a54 <__muldf3>
 4026d20:	000d883a 	mov	r6,zero
 4026d24:	000f883a 	mov	r7,zero
 4026d28:	1009883a 	mov	r4,r2
 4026d2c:	180b883a 	mov	r5,r3
 4026d30:	1025883a 	mov	r18,r2
 4026d34:	1827883a 	mov	r19,r3
 4026d38:	40227fc0 	call	40227fc <__eqdf2>
 4026d3c:	103f9a26 	beq	r2,zero,4026ba8 <__flash_rwdata_start+0xffff5c80>
 4026d40:	d9c00617 	ldw	r7,24(sp)
 4026d44:	d8c00717 	ldw	r3,28(sp)
 4026d48:	b829883a 	mov	r20,r23
 4026d4c:	38bfffc4 	addi	r2,r7,-1
 4026d50:	18ad883a 	add	r22,r3,r2
 4026d54:	00000a06 	br	4026d80 <_dtoa_r+0x880>
 4026d58:	4022a540 	call	4022a54 <__muldf3>
 4026d5c:	000d883a 	mov	r6,zero
 4026d60:	000f883a 	mov	r7,zero
 4026d64:	1009883a 	mov	r4,r2
 4026d68:	180b883a 	mov	r5,r3
 4026d6c:	1025883a 	mov	r18,r2
 4026d70:	1827883a 	mov	r19,r3
 4026d74:	b829883a 	mov	r20,r23
 4026d78:	40227fc0 	call	40227fc <__eqdf2>
 4026d7c:	103f8a26 	beq	r2,zero,4026ba8 <__flash_rwdata_start+0xffff5c80>
 4026d80:	800d883a 	mov	r6,r16
 4026d84:	880f883a 	mov	r7,r17
 4026d88:	9009883a 	mov	r4,r18
 4026d8c:	980b883a 	mov	r5,r19
 4026d90:	4021f140 	call	4021f14 <__divdf3>
 4026d94:	180b883a 	mov	r5,r3
 4026d98:	1009883a 	mov	r4,r2
 4026d9c:	4023a680 	call	4023a68 <__fixdfsi>
 4026da0:	1009883a 	mov	r4,r2
 4026da4:	102b883a 	mov	r21,r2
 4026da8:	4023ae80 	call	4023ae8 <__floatsidf>
 4026dac:	800d883a 	mov	r6,r16
 4026db0:	880f883a 	mov	r7,r17
 4026db4:	1009883a 	mov	r4,r2
 4026db8:	180b883a 	mov	r5,r3
 4026dbc:	4022a540 	call	4022a54 <__muldf3>
 4026dc0:	100d883a 	mov	r6,r2
 4026dc4:	180f883a 	mov	r7,r3
 4026dc8:	9009883a 	mov	r4,r18
 4026dcc:	980b883a 	mov	r5,r19
 4026dd0:	402316c0 	call	402316c <__subdf3>
 4026dd4:	aa000c04 	addi	r8,r21,48
 4026dd8:	a2000005 	stb	r8,0(r20)
 4026ddc:	000d883a 	mov	r6,zero
 4026de0:	01d00934 	movhi	r7,16420
 4026de4:	1009883a 	mov	r4,r2
 4026de8:	180b883a 	mov	r5,r3
 4026dec:	a5c00044 	addi	r23,r20,1
 4026df0:	b53fd91e 	bne	r22,r20,4026d58 <__flash_rwdata_start+0xffff5e30>
 4026df4:	100d883a 	mov	r6,r2
 4026df8:	180f883a 	mov	r7,r3
 4026dfc:	1009883a 	mov	r4,r2
 4026e00:	180b883a 	mov	r5,r3
 4026e04:	40216680 	call	4021668 <__adddf3>
 4026e08:	100d883a 	mov	r6,r2
 4026e0c:	180f883a 	mov	r7,r3
 4026e10:	8009883a 	mov	r4,r16
 4026e14:	880b883a 	mov	r5,r17
 4026e18:	1027883a 	mov	r19,r2
 4026e1c:	1825883a 	mov	r18,r3
 4026e20:	40229600 	call	4022960 <__ledf2>
 4026e24:	10000816 	blt	r2,zero,4026e48 <_dtoa_r+0x948>
 4026e28:	980d883a 	mov	r6,r19
 4026e2c:	900f883a 	mov	r7,r18
 4026e30:	8009883a 	mov	r4,r16
 4026e34:	880b883a 	mov	r5,r17
 4026e38:	40227fc0 	call	40227fc <__eqdf2>
 4026e3c:	103f5a1e 	bne	r2,zero,4026ba8 <__flash_rwdata_start+0xffff5c80>
 4026e40:	ad40004c 	andi	r21,r21,1
 4026e44:	a83f5826 	beq	r21,zero,4026ba8 <__flash_rwdata_start+0xffff5c80>
 4026e48:	bd3fffc3 	ldbu	r20,-1(r23)
 4026e4c:	b8bfffc4 	addi	r2,r23,-1
 4026e50:	1007883a 	mov	r3,r2
 4026e54:	01400e44 	movi	r5,57
 4026e58:	d9800717 	ldw	r6,28(sp)
 4026e5c:	00000506 	br	4026e74 <_dtoa_r+0x974>
 4026e60:	18ffffc4 	addi	r3,r3,-1
 4026e64:	11824726 	beq	r2,r6,4027784 <_dtoa_r+0x1284>
 4026e68:	1d000003 	ldbu	r20,0(r3)
 4026e6c:	102f883a 	mov	r23,r2
 4026e70:	10bfffc4 	addi	r2,r2,-1
 4026e74:	a1003fcc 	andi	r4,r20,255
 4026e78:	2100201c 	xori	r4,r4,128
 4026e7c:	213fe004 	addi	r4,r4,-128
 4026e80:	217ff726 	beq	r4,r5,4026e60 <__flash_rwdata_start+0xffff5f38>
 4026e84:	a2000044 	addi	r8,r20,1
 4026e88:	12000005 	stb	r8,0(r2)
 4026e8c:	003f4606 	br	4026ba8 <__flash_rwdata_start+0xffff5c80>
 4026e90:	d9000b17 	ldw	r4,44(sp)
 4026e94:	2000c826 	beq	r4,zero,40271b8 <_dtoa_r+0xcb8>
 4026e98:	d9800317 	ldw	r6,12(sp)
 4026e9c:	00c00044 	movi	r3,1
 4026ea0:	1980f90e 	bge	r3,r6,4027288 <_dtoa_r+0xd88>
 4026ea4:	d8800617 	ldw	r2,24(sp)
 4026ea8:	d8c00a17 	ldw	r3,40(sp)
 4026eac:	157fffc4 	addi	r21,r2,-1
 4026eb0:	1d41f316 	blt	r3,r21,4027680 <_dtoa_r+0x1180>
 4026eb4:	1d6bc83a 	sub	r21,r3,r21
 4026eb8:	d9c00617 	ldw	r7,24(sp)
 4026ebc:	3802aa16 	blt	r7,zero,4027968 <_dtoa_r+0x1468>
 4026ec0:	dd000817 	ldw	r20,32(sp)
 4026ec4:	d8800617 	ldw	r2,24(sp)
 4026ec8:	d8c00817 	ldw	r3,32(sp)
 4026ecc:	01400044 	movi	r5,1
 4026ed0:	e009883a 	mov	r4,fp
 4026ed4:	1887883a 	add	r3,r3,r2
 4026ed8:	d8c00815 	stw	r3,32(sp)
 4026edc:	b0ad883a 	add	r22,r22,r2
 4026ee0:	402a0040 	call	402a004 <__i2b>
 4026ee4:	1023883a 	mov	r17,r2
 4026ee8:	a0000826 	beq	r20,zero,4026f0c <_dtoa_r+0xa0c>
 4026eec:	0580070e 	bge	zero,r22,4026f0c <_dtoa_r+0xa0c>
 4026ef0:	a005883a 	mov	r2,r20
 4026ef4:	b500b916 	blt	r22,r20,40271dc <_dtoa_r+0xcdc>
 4026ef8:	d9000817 	ldw	r4,32(sp)
 4026efc:	a0a9c83a 	sub	r20,r20,r2
 4026f00:	b0adc83a 	sub	r22,r22,r2
 4026f04:	2089c83a 	sub	r4,r4,r2
 4026f08:	d9000815 	stw	r4,32(sp)
 4026f0c:	d9800a17 	ldw	r6,40(sp)
 4026f10:	0181810e 	bge	zero,r6,4027518 <_dtoa_r+0x1018>
 4026f14:	d9c00b17 	ldw	r7,44(sp)
 4026f18:	3800b326 	beq	r7,zero,40271e8 <_dtoa_r+0xce8>
 4026f1c:	a800b226 	beq	r21,zero,40271e8 <_dtoa_r+0xce8>
 4026f20:	880b883a 	mov	r5,r17
 4026f24:	a80d883a 	mov	r6,r21
 4026f28:	e009883a 	mov	r4,fp
 4026f2c:	402a2380 	call	402a238 <__pow5mult>
 4026f30:	d9800917 	ldw	r6,36(sp)
 4026f34:	100b883a 	mov	r5,r2
 4026f38:	e009883a 	mov	r4,fp
 4026f3c:	1023883a 	mov	r17,r2
 4026f40:	402a0400 	call	402a040 <__multiply>
 4026f44:	1021883a 	mov	r16,r2
 4026f48:	d8800a17 	ldw	r2,40(sp)
 4026f4c:	d9400917 	ldw	r5,36(sp)
 4026f50:	e009883a 	mov	r4,fp
 4026f54:	1545c83a 	sub	r2,r2,r21
 4026f58:	d8800a15 	stw	r2,40(sp)
 4026f5c:	4029ca00 	call	4029ca0 <_Bfree>
 4026f60:	d8c00a17 	ldw	r3,40(sp)
 4026f64:	18009f1e 	bne	r3,zero,40271e4 <_dtoa_r+0xce4>
 4026f68:	05c00044 	movi	r23,1
 4026f6c:	e009883a 	mov	r4,fp
 4026f70:	b80b883a 	mov	r5,r23
 4026f74:	402a0040 	call	402a004 <__i2b>
 4026f78:	d9000d17 	ldw	r4,52(sp)
 4026f7c:	102b883a 	mov	r21,r2
 4026f80:	2000ce26 	beq	r4,zero,40272bc <_dtoa_r+0xdbc>
 4026f84:	200d883a 	mov	r6,r4
 4026f88:	100b883a 	mov	r5,r2
 4026f8c:	e009883a 	mov	r4,fp
 4026f90:	402a2380 	call	402a238 <__pow5mult>
 4026f94:	d9800317 	ldw	r6,12(sp)
 4026f98:	102b883a 	mov	r21,r2
 4026f9c:	b981810e 	bge	r23,r6,40275a4 <_dtoa_r+0x10a4>
 4026fa0:	0027883a 	mov	r19,zero
 4026fa4:	a8800417 	ldw	r2,16(r21)
 4026fa8:	05c00804 	movi	r23,32
 4026fac:	10800104 	addi	r2,r2,4
 4026fb0:	1085883a 	add	r2,r2,r2
 4026fb4:	1085883a 	add	r2,r2,r2
 4026fb8:	a885883a 	add	r2,r21,r2
 4026fbc:	11000017 	ldw	r4,0(r2)
 4026fc0:	4029eec0 	call	4029eec <__hi0bits>
 4026fc4:	b885c83a 	sub	r2,r23,r2
 4026fc8:	1585883a 	add	r2,r2,r22
 4026fcc:	108007cc 	andi	r2,r2,31
 4026fd0:	1000b326 	beq	r2,zero,40272a0 <_dtoa_r+0xda0>
 4026fd4:	00c00804 	movi	r3,32
 4026fd8:	1887c83a 	sub	r3,r3,r2
 4026fdc:	01000104 	movi	r4,4
 4026fe0:	20c2cd0e 	bge	r4,r3,4027b18 <_dtoa_r+0x1618>
 4026fe4:	00c00704 	movi	r3,28
 4026fe8:	1885c83a 	sub	r2,r3,r2
 4026fec:	d8c00817 	ldw	r3,32(sp)
 4026ff0:	a0a9883a 	add	r20,r20,r2
 4026ff4:	b0ad883a 	add	r22,r22,r2
 4026ff8:	1887883a 	add	r3,r3,r2
 4026ffc:	d8c00815 	stw	r3,32(sp)
 4027000:	d9800817 	ldw	r6,32(sp)
 4027004:	0180040e 	bge	zero,r6,4027018 <_dtoa_r+0xb18>
 4027008:	800b883a 	mov	r5,r16
 402700c:	e009883a 	mov	r4,fp
 4027010:	402a3780 	call	402a378 <__lshift>
 4027014:	1021883a 	mov	r16,r2
 4027018:	0580050e 	bge	zero,r22,4027030 <_dtoa_r+0xb30>
 402701c:	a80b883a 	mov	r5,r21
 4027020:	b00d883a 	mov	r6,r22
 4027024:	e009883a 	mov	r4,fp
 4027028:	402a3780 	call	402a378 <__lshift>
 402702c:	102b883a 	mov	r21,r2
 4027030:	d9c00e17 	ldw	r7,56(sp)
 4027034:	3801211e 	bne	r7,zero,40274bc <_dtoa_r+0xfbc>
 4027038:	d9800617 	ldw	r6,24(sp)
 402703c:	0181380e 	bge	zero,r6,4027520 <_dtoa_r+0x1020>
 4027040:	d8c00b17 	ldw	r3,44(sp)
 4027044:	1800ab1e 	bne	r3,zero,40272f4 <_dtoa_r+0xdf4>
 4027048:	dc800717 	ldw	r18,28(sp)
 402704c:	dcc00617 	ldw	r19,24(sp)
 4027050:	9029883a 	mov	r20,r18
 4027054:	00000206 	br	4027060 <_dtoa_r+0xb60>
 4027058:	4029cc80 	call	4029cc8 <__multadd>
 402705c:	1021883a 	mov	r16,r2
 4027060:	a80b883a 	mov	r5,r21
 4027064:	8009883a 	mov	r4,r16
 4027068:	40263000 	call	4026300 <quorem>
 402706c:	10800c04 	addi	r2,r2,48
 4027070:	90800005 	stb	r2,0(r18)
 4027074:	94800044 	addi	r18,r18,1
 4027078:	9507c83a 	sub	r3,r18,r20
 402707c:	000f883a 	mov	r7,zero
 4027080:	01800284 	movi	r6,10
 4027084:	800b883a 	mov	r5,r16
 4027088:	e009883a 	mov	r4,fp
 402708c:	1cfff216 	blt	r3,r19,4027058 <__flash_rwdata_start+0xffff6130>
 4027090:	1011883a 	mov	r8,r2
 4027094:	d8800617 	ldw	r2,24(sp)
 4027098:	0082370e 	bge	zero,r2,4027978 <_dtoa_r+0x1478>
 402709c:	d9000717 	ldw	r4,28(sp)
 40270a0:	0025883a 	mov	r18,zero
 40270a4:	20af883a 	add	r23,r4,r2
 40270a8:	01800044 	movi	r6,1
 40270ac:	800b883a 	mov	r5,r16
 40270b0:	e009883a 	mov	r4,fp
 40270b4:	da001715 	stw	r8,92(sp)
 40270b8:	402a3780 	call	402a378 <__lshift>
 40270bc:	a80b883a 	mov	r5,r21
 40270c0:	1009883a 	mov	r4,r2
 40270c4:	d8800915 	stw	r2,36(sp)
 40270c8:	402a4c00 	call	402a4c0 <__mcmp>
 40270cc:	da001717 	ldw	r8,92(sp)
 40270d0:	0081800e 	bge	zero,r2,40276d4 <_dtoa_r+0x11d4>
 40270d4:	b93fffc3 	ldbu	r4,-1(r23)
 40270d8:	b8bfffc4 	addi	r2,r23,-1
 40270dc:	1007883a 	mov	r3,r2
 40270e0:	01800e44 	movi	r6,57
 40270e4:	d9c00717 	ldw	r7,28(sp)
 40270e8:	00000506 	br	4027100 <_dtoa_r+0xc00>
 40270ec:	18ffffc4 	addi	r3,r3,-1
 40270f0:	11c12326 	beq	r2,r7,4027580 <_dtoa_r+0x1080>
 40270f4:	19000003 	ldbu	r4,0(r3)
 40270f8:	102f883a 	mov	r23,r2
 40270fc:	10bfffc4 	addi	r2,r2,-1
 4027100:	21403fcc 	andi	r5,r4,255
 4027104:	2940201c 	xori	r5,r5,128
 4027108:	297fe004 	addi	r5,r5,-128
 402710c:	29bff726 	beq	r5,r6,40270ec <__flash_rwdata_start+0xffff61c4>
 4027110:	21000044 	addi	r4,r4,1
 4027114:	11000005 	stb	r4,0(r2)
 4027118:	a80b883a 	mov	r5,r21
 402711c:	e009883a 	mov	r4,fp
 4027120:	4029ca00 	call	4029ca0 <_Bfree>
 4027124:	883ea026 	beq	r17,zero,4026ba8 <__flash_rwdata_start+0xffff5c80>
 4027128:	90000426 	beq	r18,zero,402713c <_dtoa_r+0xc3c>
 402712c:	94400326 	beq	r18,r17,402713c <_dtoa_r+0xc3c>
 4027130:	900b883a 	mov	r5,r18
 4027134:	e009883a 	mov	r4,fp
 4027138:	4029ca00 	call	4029ca0 <_Bfree>
 402713c:	880b883a 	mov	r5,r17
 4027140:	e009883a 	mov	r4,fp
 4027144:	4029ca00 	call	4029ca0 <_Bfree>
 4027148:	003e9706 	br	4026ba8 <__flash_rwdata_start+0xffff5c80>
 402714c:	01800044 	movi	r6,1
 4027150:	d9800e15 	stw	r6,56(sp)
 4027154:	003d9606 	br	40267b0 <__flash_rwdata_start+0xffff5888>
 4027158:	d8800817 	ldw	r2,32(sp)
 402715c:	d8c00517 	ldw	r3,20(sp)
 4027160:	d8000d15 	stw	zero,52(sp)
 4027164:	10c5c83a 	sub	r2,r2,r3
 4027168:	00c9c83a 	sub	r4,zero,r3
 402716c:	d8800815 	stw	r2,32(sp)
 4027170:	d9000a15 	stw	r4,40(sp)
 4027174:	003d9706 	br	40267d4 <__flash_rwdata_start+0xffff58ac>
 4027178:	05adc83a 	sub	r22,zero,r22
 402717c:	dd800815 	stw	r22,32(sp)
 4027180:	002d883a 	mov	r22,zero
 4027184:	003d8e06 	br	40267c0 <__flash_rwdata_start+0xffff5898>
 4027188:	d9000517 	ldw	r4,20(sp)
 402718c:	4023ae80 	call	4023ae8 <__floatsidf>
 4027190:	100d883a 	mov	r6,r2
 4027194:	180f883a 	mov	r7,r3
 4027198:	a009883a 	mov	r4,r20
 402719c:	880b883a 	mov	r5,r17
 40271a0:	40227fc0 	call	40227fc <__eqdf2>
 40271a4:	103d7126 	beq	r2,zero,402676c <__flash_rwdata_start+0xffff5844>
 40271a8:	d9c00517 	ldw	r7,20(sp)
 40271ac:	39ffffc4 	addi	r7,r7,-1
 40271b0:	d9c00515 	stw	r7,20(sp)
 40271b4:	003d6d06 	br	402676c <__flash_rwdata_start+0xffff5844>
 40271b8:	dd400a17 	ldw	r21,40(sp)
 40271bc:	dd000817 	ldw	r20,32(sp)
 40271c0:	0023883a 	mov	r17,zero
 40271c4:	003f4806 	br	4026ee8 <__flash_rwdata_start+0xffff5fc0>
 40271c8:	10e3c83a 	sub	r17,r2,r3
 40271cc:	9448983a 	sll	r4,r18,r17
 40271d0:	003d3206 	br	402669c <__flash_rwdata_start+0xffff5774>
 40271d4:	d8000e15 	stw	zero,56(sp)
 40271d8:	003d7506 	br	40267b0 <__flash_rwdata_start+0xffff5888>
 40271dc:	b005883a 	mov	r2,r22
 40271e0:	003f4506 	br	4026ef8 <__flash_rwdata_start+0xffff5fd0>
 40271e4:	dc000915 	stw	r16,36(sp)
 40271e8:	d9800a17 	ldw	r6,40(sp)
 40271ec:	d9400917 	ldw	r5,36(sp)
 40271f0:	e009883a 	mov	r4,fp
 40271f4:	402a2380 	call	402a238 <__pow5mult>
 40271f8:	1021883a 	mov	r16,r2
 40271fc:	003f5a06 	br	4026f68 <__flash_rwdata_start+0xffff6040>
 4027200:	01c00044 	movi	r7,1
 4027204:	d9c00b15 	stw	r7,44(sp)
 4027208:	d8802217 	ldw	r2,136(sp)
 402720c:	0081280e 	bge	zero,r2,40276b0 <_dtoa_r+0x11b0>
 4027210:	100d883a 	mov	r6,r2
 4027214:	1021883a 	mov	r16,r2
 4027218:	d8800c15 	stw	r2,48(sp)
 402721c:	d8800615 	stw	r2,24(sp)
 4027220:	003d8806 	br	4026844 <__flash_rwdata_start+0xffff591c>
 4027224:	d8800617 	ldw	r2,24(sp)
 4027228:	00be9b16 	blt	zero,r2,4026c98 <__flash_rwdata_start+0xffff5d70>
 402722c:	10010f1e 	bne	r2,zero,402766c <_dtoa_r+0x116c>
 4027230:	880b883a 	mov	r5,r17
 4027234:	000d883a 	mov	r6,zero
 4027238:	01d00534 	movhi	r7,16404
 402723c:	8009883a 	mov	r4,r16
 4027240:	4022a540 	call	4022a54 <__muldf3>
 4027244:	900d883a 	mov	r6,r18
 4027248:	980f883a 	mov	r7,r19
 402724c:	1009883a 	mov	r4,r2
 4027250:	180b883a 	mov	r5,r3
 4027254:	40228840 	call	4022884 <__gedf2>
 4027258:	002b883a 	mov	r21,zero
 402725c:	0023883a 	mov	r17,zero
 4027260:	1000bf16 	blt	r2,zero,4027560 <_dtoa_r+0x1060>
 4027264:	d9802217 	ldw	r6,136(sp)
 4027268:	ddc00717 	ldw	r23,28(sp)
 402726c:	018c303a 	nor	r6,zero,r6
 4027270:	d9800515 	stw	r6,20(sp)
 4027274:	a80b883a 	mov	r5,r21
 4027278:	e009883a 	mov	r4,fp
 402727c:	4029ca00 	call	4029ca0 <_Bfree>
 4027280:	883e4926 	beq	r17,zero,4026ba8 <__flash_rwdata_start+0xffff5c80>
 4027284:	003fad06 	br	402713c <__flash_rwdata_start+0xffff6214>
 4027288:	d9c01117 	ldw	r7,68(sp)
 402728c:	3801bc26 	beq	r7,zero,4027980 <_dtoa_r+0x1480>
 4027290:	10810cc4 	addi	r2,r2,1075
 4027294:	dd400a17 	ldw	r21,40(sp)
 4027298:	dd000817 	ldw	r20,32(sp)
 402729c:	003f0a06 	br	4026ec8 <__flash_rwdata_start+0xffff5fa0>
 40272a0:	00800704 	movi	r2,28
 40272a4:	d9000817 	ldw	r4,32(sp)
 40272a8:	a0a9883a 	add	r20,r20,r2
 40272ac:	b0ad883a 	add	r22,r22,r2
 40272b0:	2089883a 	add	r4,r4,r2
 40272b4:	d9000815 	stw	r4,32(sp)
 40272b8:	003f5106 	br	4027000 <__flash_rwdata_start+0xffff60d8>
 40272bc:	d8c00317 	ldw	r3,12(sp)
 40272c0:	b8c1fc0e 	bge	r23,r3,4027ab4 <_dtoa_r+0x15b4>
 40272c4:	0027883a 	mov	r19,zero
 40272c8:	b805883a 	mov	r2,r23
 40272cc:	003f3e06 	br	4026fc8 <__flash_rwdata_start+0xffff60a0>
 40272d0:	880b883a 	mov	r5,r17
 40272d4:	e009883a 	mov	r4,fp
 40272d8:	000f883a 	mov	r7,zero
 40272dc:	01800284 	movi	r6,10
 40272e0:	4029cc80 	call	4029cc8 <__multadd>
 40272e4:	d9000c17 	ldw	r4,48(sp)
 40272e8:	1023883a 	mov	r17,r2
 40272ec:	0102040e 	bge	zero,r4,4027b00 <_dtoa_r+0x1600>
 40272f0:	d9000615 	stw	r4,24(sp)
 40272f4:	0500050e 	bge	zero,r20,402730c <_dtoa_r+0xe0c>
 40272f8:	880b883a 	mov	r5,r17
 40272fc:	a00d883a 	mov	r6,r20
 4027300:	e009883a 	mov	r4,fp
 4027304:	402a3780 	call	402a378 <__lshift>
 4027308:	1023883a 	mov	r17,r2
 402730c:	9801241e 	bne	r19,zero,40277a0 <_dtoa_r+0x12a0>
 4027310:	8829883a 	mov	r20,r17
 4027314:	d9000617 	ldw	r4,24(sp)
 4027318:	dcc00717 	ldw	r19,28(sp)
 402731c:	9480004c 	andi	r18,r18,1
 4027320:	20bfffc4 	addi	r2,r4,-1
 4027324:	9885883a 	add	r2,r19,r2
 4027328:	d8800415 	stw	r2,16(sp)
 402732c:	dc800615 	stw	r18,24(sp)
 4027330:	a80b883a 	mov	r5,r21
 4027334:	8009883a 	mov	r4,r16
 4027338:	40263000 	call	4026300 <quorem>
 402733c:	880b883a 	mov	r5,r17
 4027340:	8009883a 	mov	r4,r16
 4027344:	102f883a 	mov	r23,r2
 4027348:	402a4c00 	call	402a4c0 <__mcmp>
 402734c:	a80b883a 	mov	r5,r21
 4027350:	a00d883a 	mov	r6,r20
 4027354:	e009883a 	mov	r4,fp
 4027358:	102d883a 	mov	r22,r2
 402735c:	402a5200 	call	402a520 <__mdiff>
 4027360:	1007883a 	mov	r3,r2
 4027364:	10800317 	ldw	r2,12(r2)
 4027368:	bc800c04 	addi	r18,r23,48
 402736c:	180b883a 	mov	r5,r3
 4027370:	10004e1e 	bne	r2,zero,40274ac <_dtoa_r+0xfac>
 4027374:	8009883a 	mov	r4,r16
 4027378:	d8c01615 	stw	r3,88(sp)
 402737c:	402a4c00 	call	402a4c0 <__mcmp>
 4027380:	d8c01617 	ldw	r3,88(sp)
 4027384:	e009883a 	mov	r4,fp
 4027388:	d8801615 	stw	r2,88(sp)
 402738c:	180b883a 	mov	r5,r3
 4027390:	4029ca00 	call	4029ca0 <_Bfree>
 4027394:	d8801617 	ldw	r2,88(sp)
 4027398:	1000041e 	bne	r2,zero,40273ac <_dtoa_r+0xeac>
 402739c:	d9800317 	ldw	r6,12(sp)
 40273a0:	3000021e 	bne	r6,zero,40273ac <_dtoa_r+0xeac>
 40273a4:	d8c00617 	ldw	r3,24(sp)
 40273a8:	18003726 	beq	r3,zero,4027488 <_dtoa_r+0xf88>
 40273ac:	b0002016 	blt	r22,zero,4027430 <_dtoa_r+0xf30>
 40273b0:	b000041e 	bne	r22,zero,40273c4 <_dtoa_r+0xec4>
 40273b4:	d9000317 	ldw	r4,12(sp)
 40273b8:	2000021e 	bne	r4,zero,40273c4 <_dtoa_r+0xec4>
 40273bc:	d8c00617 	ldw	r3,24(sp)
 40273c0:	18001b26 	beq	r3,zero,4027430 <_dtoa_r+0xf30>
 40273c4:	00810716 	blt	zero,r2,40277e4 <_dtoa_r+0x12e4>
 40273c8:	d8c00417 	ldw	r3,16(sp)
 40273cc:	9d800044 	addi	r22,r19,1
 40273d0:	9c800005 	stb	r18,0(r19)
 40273d4:	b02f883a 	mov	r23,r22
 40273d8:	98c10626 	beq	r19,r3,40277f4 <_dtoa_r+0x12f4>
 40273dc:	800b883a 	mov	r5,r16
 40273e0:	000f883a 	mov	r7,zero
 40273e4:	01800284 	movi	r6,10
 40273e8:	e009883a 	mov	r4,fp
 40273ec:	4029cc80 	call	4029cc8 <__multadd>
 40273f0:	1021883a 	mov	r16,r2
 40273f4:	000f883a 	mov	r7,zero
 40273f8:	01800284 	movi	r6,10
 40273fc:	880b883a 	mov	r5,r17
 4027400:	e009883a 	mov	r4,fp
 4027404:	8d002526 	beq	r17,r20,402749c <_dtoa_r+0xf9c>
 4027408:	4029cc80 	call	4029cc8 <__multadd>
 402740c:	a00b883a 	mov	r5,r20
 4027410:	000f883a 	mov	r7,zero
 4027414:	01800284 	movi	r6,10
 4027418:	e009883a 	mov	r4,fp
 402741c:	1023883a 	mov	r17,r2
 4027420:	4029cc80 	call	4029cc8 <__multadd>
 4027424:	1029883a 	mov	r20,r2
 4027428:	b027883a 	mov	r19,r22
 402742c:	003fc006 	br	4027330 <__flash_rwdata_start+0xffff6408>
 4027430:	9011883a 	mov	r8,r18
 4027434:	00800e0e 	bge	zero,r2,4027470 <_dtoa_r+0xf70>
 4027438:	800b883a 	mov	r5,r16
 402743c:	01800044 	movi	r6,1
 4027440:	e009883a 	mov	r4,fp
 4027444:	da001715 	stw	r8,92(sp)
 4027448:	402a3780 	call	402a378 <__lshift>
 402744c:	a80b883a 	mov	r5,r21
 4027450:	1009883a 	mov	r4,r2
 4027454:	1021883a 	mov	r16,r2
 4027458:	402a4c00 	call	402a4c0 <__mcmp>
 402745c:	da001717 	ldw	r8,92(sp)
 4027460:	0081960e 	bge	zero,r2,4027abc <_dtoa_r+0x15bc>
 4027464:	00800e44 	movi	r2,57
 4027468:	40817026 	beq	r8,r2,4027a2c <_dtoa_r+0x152c>
 402746c:	ba000c44 	addi	r8,r23,49
 4027470:	8825883a 	mov	r18,r17
 4027474:	9dc00044 	addi	r23,r19,1
 4027478:	9a000005 	stb	r8,0(r19)
 402747c:	a023883a 	mov	r17,r20
 4027480:	dc000915 	stw	r16,36(sp)
 4027484:	003f2406 	br	4027118 <__flash_rwdata_start+0xffff61f0>
 4027488:	00800e44 	movi	r2,57
 402748c:	9011883a 	mov	r8,r18
 4027490:	90816626 	beq	r18,r2,4027a2c <_dtoa_r+0x152c>
 4027494:	05bff516 	blt	zero,r22,402746c <__flash_rwdata_start+0xffff6544>
 4027498:	003ff506 	br	4027470 <__flash_rwdata_start+0xffff6548>
 402749c:	4029cc80 	call	4029cc8 <__multadd>
 40274a0:	1023883a 	mov	r17,r2
 40274a4:	1029883a 	mov	r20,r2
 40274a8:	003fdf06 	br	4027428 <__flash_rwdata_start+0xffff6500>
 40274ac:	e009883a 	mov	r4,fp
 40274b0:	4029ca00 	call	4029ca0 <_Bfree>
 40274b4:	00800044 	movi	r2,1
 40274b8:	003fbc06 	br	40273ac <__flash_rwdata_start+0xffff6484>
 40274bc:	a80b883a 	mov	r5,r21
 40274c0:	8009883a 	mov	r4,r16
 40274c4:	402a4c00 	call	402a4c0 <__mcmp>
 40274c8:	103edb0e 	bge	r2,zero,4027038 <__flash_rwdata_start+0xffff6110>
 40274cc:	800b883a 	mov	r5,r16
 40274d0:	000f883a 	mov	r7,zero
 40274d4:	01800284 	movi	r6,10
 40274d8:	e009883a 	mov	r4,fp
 40274dc:	4029cc80 	call	4029cc8 <__multadd>
 40274e0:	1021883a 	mov	r16,r2
 40274e4:	d8800517 	ldw	r2,20(sp)
 40274e8:	d8c00b17 	ldw	r3,44(sp)
 40274ec:	10bfffc4 	addi	r2,r2,-1
 40274f0:	d8800515 	stw	r2,20(sp)
 40274f4:	183f761e 	bne	r3,zero,40272d0 <__flash_rwdata_start+0xffff63a8>
 40274f8:	d9000c17 	ldw	r4,48(sp)
 40274fc:	0101730e 	bge	zero,r4,4027acc <_dtoa_r+0x15cc>
 4027500:	d9000615 	stw	r4,24(sp)
 4027504:	003ed006 	br	4027048 <__flash_rwdata_start+0xffff6120>
 4027508:	00800084 	movi	r2,2
 402750c:	3081861e 	bne	r6,r2,4027b28 <_dtoa_r+0x1628>
 4027510:	d8000b15 	stw	zero,44(sp)
 4027514:	003f3c06 	br	4027208 <__flash_rwdata_start+0xffff62e0>
 4027518:	dc000917 	ldw	r16,36(sp)
 402751c:	003e9206 	br	4026f68 <__flash_rwdata_start+0xffff6040>
 4027520:	d9c00317 	ldw	r7,12(sp)
 4027524:	00800084 	movi	r2,2
 4027528:	11fec50e 	bge	r2,r7,4027040 <__flash_rwdata_start+0xffff6118>
 402752c:	d9000617 	ldw	r4,24(sp)
 4027530:	20013c1e 	bne	r4,zero,4027a24 <_dtoa_r+0x1524>
 4027534:	a80b883a 	mov	r5,r21
 4027538:	000f883a 	mov	r7,zero
 402753c:	01800144 	movi	r6,5
 4027540:	e009883a 	mov	r4,fp
 4027544:	4029cc80 	call	4029cc8 <__multadd>
 4027548:	100b883a 	mov	r5,r2
 402754c:	8009883a 	mov	r4,r16
 4027550:	102b883a 	mov	r21,r2
 4027554:	402a4c00 	call	402a4c0 <__mcmp>
 4027558:	dc000915 	stw	r16,36(sp)
 402755c:	00bf410e 	bge	zero,r2,4027264 <__flash_rwdata_start+0xffff633c>
 4027560:	d9c00717 	ldw	r7,28(sp)
 4027564:	00800c44 	movi	r2,49
 4027568:	38800005 	stb	r2,0(r7)
 402756c:	d8800517 	ldw	r2,20(sp)
 4027570:	3dc00044 	addi	r23,r7,1
 4027574:	10800044 	addi	r2,r2,1
 4027578:	d8800515 	stw	r2,20(sp)
 402757c:	003f3d06 	br	4027274 <__flash_rwdata_start+0xffff634c>
 4027580:	d9800517 	ldw	r6,20(sp)
 4027584:	d9c00717 	ldw	r7,28(sp)
 4027588:	00800c44 	movi	r2,49
 402758c:	31800044 	addi	r6,r6,1
 4027590:	d9800515 	stw	r6,20(sp)
 4027594:	38800005 	stb	r2,0(r7)
 4027598:	003edf06 	br	4027118 <__flash_rwdata_start+0xffff61f0>
 402759c:	d8000b15 	stw	zero,44(sp)
 40275a0:	003c9f06 	br	4026820 <__flash_rwdata_start+0xffff58f8>
 40275a4:	903e7e1e 	bne	r18,zero,4026fa0 <__flash_rwdata_start+0xffff6078>
 40275a8:	00800434 	movhi	r2,16
 40275ac:	10bfffc4 	addi	r2,r2,-1
 40275b0:	9884703a 	and	r2,r19,r2
 40275b4:	1000ea1e 	bne	r2,zero,4027960 <_dtoa_r+0x1460>
 40275b8:	9cdffc2c 	andhi	r19,r19,32752
 40275bc:	9800e826 	beq	r19,zero,4027960 <_dtoa_r+0x1460>
 40275c0:	d9c00817 	ldw	r7,32(sp)
 40275c4:	b5800044 	addi	r22,r22,1
 40275c8:	04c00044 	movi	r19,1
 40275cc:	39c00044 	addi	r7,r7,1
 40275d0:	d9c00815 	stw	r7,32(sp)
 40275d4:	d8800d17 	ldw	r2,52(sp)
 40275d8:	103e721e 	bne	r2,zero,4026fa4 <__flash_rwdata_start+0xffff607c>
 40275dc:	00800044 	movi	r2,1
 40275e0:	003e7906 	br	4026fc8 <__flash_rwdata_start+0xffff60a0>
 40275e4:	8009883a 	mov	r4,r16
 40275e8:	4023ae80 	call	4023ae8 <__floatsidf>
 40275ec:	d9800f17 	ldw	r6,60(sp)
 40275f0:	d9c01017 	ldw	r7,64(sp)
 40275f4:	1009883a 	mov	r4,r2
 40275f8:	180b883a 	mov	r5,r3
 40275fc:	4022a540 	call	4022a54 <__muldf3>
 4027600:	000d883a 	mov	r6,zero
 4027604:	01d00734 	movhi	r7,16412
 4027608:	1009883a 	mov	r4,r2
 402760c:	180b883a 	mov	r5,r3
 4027610:	40216680 	call	4021668 <__adddf3>
 4027614:	047f3034 	movhi	r17,64704
 4027618:	1021883a 	mov	r16,r2
 402761c:	1c63883a 	add	r17,r3,r17
 4027620:	d9000f17 	ldw	r4,60(sp)
 4027624:	d9401017 	ldw	r5,64(sp)
 4027628:	000d883a 	mov	r6,zero
 402762c:	01d00534 	movhi	r7,16404
 4027630:	402316c0 	call	402316c <__subdf3>
 4027634:	800d883a 	mov	r6,r16
 4027638:	880f883a 	mov	r7,r17
 402763c:	1009883a 	mov	r4,r2
 4027640:	180b883a 	mov	r5,r3
 4027644:	102b883a 	mov	r21,r2
 4027648:	1829883a 	mov	r20,r3
 402764c:	40228840 	call	4022884 <__gedf2>
 4027650:	00806c16 	blt	zero,r2,4027804 <_dtoa_r+0x1304>
 4027654:	89e0003c 	xorhi	r7,r17,32768
 4027658:	800d883a 	mov	r6,r16
 402765c:	a809883a 	mov	r4,r21
 4027660:	a00b883a 	mov	r5,r20
 4027664:	40229600 	call	4022960 <__ledf2>
 4027668:	103d7e0e 	bge	r2,zero,4026c64 <__flash_rwdata_start+0xffff5d3c>
 402766c:	002b883a 	mov	r21,zero
 4027670:	0023883a 	mov	r17,zero
 4027674:	003efb06 	br	4027264 <__flash_rwdata_start+0xffff633c>
 4027678:	d8800717 	ldw	r2,28(sp)
 402767c:	003bd006 	br	40265c0 <__flash_rwdata_start+0xffff5698>
 4027680:	d9000a17 	ldw	r4,40(sp)
 4027684:	d9800d17 	ldw	r6,52(sp)
 4027688:	dd400a15 	stw	r21,40(sp)
 402768c:	a905c83a 	sub	r2,r21,r4
 4027690:	308d883a 	add	r6,r6,r2
 4027694:	d9800d15 	stw	r6,52(sp)
 4027698:	002b883a 	mov	r21,zero
 402769c:	003e0606 	br	4026eb8 <__flash_rwdata_start+0xffff5f90>
 40276a0:	9023883a 	mov	r17,r18
 40276a4:	9829883a 	mov	r20,r19
 40276a8:	04000084 	movi	r16,2
 40276ac:	003c9206 	br	40268f8 <__flash_rwdata_start+0xffff59d0>
 40276b0:	04000044 	movi	r16,1
 40276b4:	dc000c15 	stw	r16,48(sp)
 40276b8:	dc000615 	stw	r16,24(sp)
 40276bc:	dc002215 	stw	r16,136(sp)
 40276c0:	e0001115 	stw	zero,68(fp)
 40276c4:	000b883a 	mov	r5,zero
 40276c8:	003c6906 	br	4026870 <__flash_rwdata_start+0xffff5948>
 40276cc:	3021883a 	mov	r16,r6
 40276d0:	003ffb06 	br	40276c0 <__flash_rwdata_start+0xffff6798>
 40276d4:	1000021e 	bne	r2,zero,40276e0 <_dtoa_r+0x11e0>
 40276d8:	4200004c 	andi	r8,r8,1
 40276dc:	403e7d1e 	bne	r8,zero,40270d4 <__flash_rwdata_start+0xffff61ac>
 40276e0:	01000c04 	movi	r4,48
 40276e4:	00000106 	br	40276ec <_dtoa_r+0x11ec>
 40276e8:	102f883a 	mov	r23,r2
 40276ec:	b8bfffc4 	addi	r2,r23,-1
 40276f0:	10c00007 	ldb	r3,0(r2)
 40276f4:	193ffc26 	beq	r3,r4,40276e8 <__flash_rwdata_start+0xffff67c0>
 40276f8:	003e8706 	br	4027118 <__flash_rwdata_start+0xffff61f0>
 40276fc:	d8800517 	ldw	r2,20(sp)
 4027700:	00a3c83a 	sub	r17,zero,r2
 4027704:	8800a426 	beq	r17,zero,4027998 <_dtoa_r+0x1498>
 4027708:	888003cc 	andi	r2,r17,15
 402770c:	100490fa 	slli	r2,r2,3
 4027710:	00c00034 	movhi	r3,0
 4027714:	18c09304 	addi	r3,r3,588
 4027718:	1885883a 	add	r2,r3,r2
 402771c:	11800017 	ldw	r6,0(r2)
 4027720:	11c00117 	ldw	r7,4(r2)
 4027724:	9009883a 	mov	r4,r18
 4027728:	980b883a 	mov	r5,r19
 402772c:	8823d13a 	srai	r17,r17,4
 4027730:	4022a540 	call	4022a54 <__muldf3>
 4027734:	d8800f15 	stw	r2,60(sp)
 4027738:	d8c01015 	stw	r3,64(sp)
 402773c:	8800e826 	beq	r17,zero,4027ae0 <_dtoa_r+0x15e0>
 4027740:	05000034 	movhi	r20,0
 4027744:	a5008904 	addi	r20,r20,548
 4027748:	04000084 	movi	r16,2
 402774c:	8980004c 	andi	r6,r17,1
 4027750:	1009883a 	mov	r4,r2
 4027754:	8823d07a 	srai	r17,r17,1
 4027758:	180b883a 	mov	r5,r3
 402775c:	30000426 	beq	r6,zero,4027770 <_dtoa_r+0x1270>
 4027760:	a1800017 	ldw	r6,0(r20)
 4027764:	a1c00117 	ldw	r7,4(r20)
 4027768:	84000044 	addi	r16,r16,1
 402776c:	4022a540 	call	4022a54 <__muldf3>
 4027770:	a5000204 	addi	r20,r20,8
 4027774:	883ff51e 	bne	r17,zero,402774c <__flash_rwdata_start+0xffff6824>
 4027778:	d8800f15 	stw	r2,60(sp)
 402777c:	d8c01015 	stw	r3,64(sp)
 4027780:	003c7606 	br	402695c <__flash_rwdata_start+0xffff5a34>
 4027784:	00c00c04 	movi	r3,48
 4027788:	10c00005 	stb	r3,0(r2)
 402778c:	d8c00517 	ldw	r3,20(sp)
 4027790:	bd3fffc3 	ldbu	r20,-1(r23)
 4027794:	18c00044 	addi	r3,r3,1
 4027798:	d8c00515 	stw	r3,20(sp)
 402779c:	003db906 	br	4026e84 <__flash_rwdata_start+0xffff5f5c>
 40277a0:	89400117 	ldw	r5,4(r17)
 40277a4:	e009883a 	mov	r4,fp
 40277a8:	4029bf80 	call	4029bf8 <_Balloc>
 40277ac:	89800417 	ldw	r6,16(r17)
 40277b0:	89400304 	addi	r5,r17,12
 40277b4:	11000304 	addi	r4,r2,12
 40277b8:	31800084 	addi	r6,r6,2
 40277bc:	318d883a 	add	r6,r6,r6
 40277c0:	318d883a 	add	r6,r6,r6
 40277c4:	1027883a 	mov	r19,r2
 40277c8:	402982c0 	call	402982c <memcpy>
 40277cc:	01800044 	movi	r6,1
 40277d0:	980b883a 	mov	r5,r19
 40277d4:	e009883a 	mov	r4,fp
 40277d8:	402a3780 	call	402a378 <__lshift>
 40277dc:	1029883a 	mov	r20,r2
 40277e0:	003ecc06 	br	4027314 <__flash_rwdata_start+0xffff63ec>
 40277e4:	00800e44 	movi	r2,57
 40277e8:	90809026 	beq	r18,r2,4027a2c <_dtoa_r+0x152c>
 40277ec:	92000044 	addi	r8,r18,1
 40277f0:	003f1f06 	br	4027470 <__flash_rwdata_start+0xffff6548>
 40277f4:	9011883a 	mov	r8,r18
 40277f8:	8825883a 	mov	r18,r17
 40277fc:	a023883a 	mov	r17,r20
 4027800:	003e2906 	br	40270a8 <__flash_rwdata_start+0xffff6180>
 4027804:	002b883a 	mov	r21,zero
 4027808:	0023883a 	mov	r17,zero
 402780c:	003f5406 	br	4027560 <__flash_rwdata_start+0xffff6638>
 4027810:	61bfffc4 	addi	r6,r12,-1
 4027814:	300490fa 	slli	r2,r6,3
 4027818:	00c00034 	movhi	r3,0
 402781c:	18c09304 	addi	r3,r3,588
 4027820:	1885883a 	add	r2,r3,r2
 4027824:	11000017 	ldw	r4,0(r2)
 4027828:	11400117 	ldw	r5,4(r2)
 402782c:	d8800717 	ldw	r2,28(sp)
 4027830:	880f883a 	mov	r7,r17
 4027834:	d9801215 	stw	r6,72(sp)
 4027838:	800d883a 	mov	r6,r16
 402783c:	db001615 	stw	r12,88(sp)
 4027840:	15c00044 	addi	r23,r2,1
 4027844:	4022a540 	call	4022a54 <__muldf3>
 4027848:	d9401017 	ldw	r5,64(sp)
 402784c:	d9000f17 	ldw	r4,60(sp)
 4027850:	d8c01515 	stw	r3,84(sp)
 4027854:	d8801415 	stw	r2,80(sp)
 4027858:	4023a680 	call	4023a68 <__fixdfsi>
 402785c:	1009883a 	mov	r4,r2
 4027860:	1021883a 	mov	r16,r2
 4027864:	4023ae80 	call	4023ae8 <__floatsidf>
 4027868:	d9000f17 	ldw	r4,60(sp)
 402786c:	d9401017 	ldw	r5,64(sp)
 4027870:	100d883a 	mov	r6,r2
 4027874:	180f883a 	mov	r7,r3
 4027878:	402316c0 	call	402316c <__subdf3>
 402787c:	1829883a 	mov	r20,r3
 4027880:	d8c00717 	ldw	r3,28(sp)
 4027884:	84000c04 	addi	r16,r16,48
 4027888:	1023883a 	mov	r17,r2
 402788c:	1c000005 	stb	r16,0(r3)
 4027890:	db001617 	ldw	r12,88(sp)
 4027894:	00800044 	movi	r2,1
 4027898:	60802226 	beq	r12,r2,4027924 <_dtoa_r+0x1424>
 402789c:	d9c00717 	ldw	r7,28(sp)
 40278a0:	8805883a 	mov	r2,r17
 40278a4:	b82b883a 	mov	r21,r23
 40278a8:	3b19883a 	add	r12,r7,r12
 40278ac:	6023883a 	mov	r17,r12
 40278b0:	a007883a 	mov	r3,r20
 40278b4:	dc800f15 	stw	r18,60(sp)
 40278b8:	000d883a 	mov	r6,zero
 40278bc:	01d00934 	movhi	r7,16420
 40278c0:	1009883a 	mov	r4,r2
 40278c4:	180b883a 	mov	r5,r3
 40278c8:	4022a540 	call	4022a54 <__muldf3>
 40278cc:	180b883a 	mov	r5,r3
 40278d0:	1009883a 	mov	r4,r2
 40278d4:	1829883a 	mov	r20,r3
 40278d8:	1025883a 	mov	r18,r2
 40278dc:	4023a680 	call	4023a68 <__fixdfsi>
 40278e0:	1009883a 	mov	r4,r2
 40278e4:	1021883a 	mov	r16,r2
 40278e8:	4023ae80 	call	4023ae8 <__floatsidf>
 40278ec:	100d883a 	mov	r6,r2
 40278f0:	180f883a 	mov	r7,r3
 40278f4:	9009883a 	mov	r4,r18
 40278f8:	a00b883a 	mov	r5,r20
 40278fc:	84000c04 	addi	r16,r16,48
 4027900:	402316c0 	call	402316c <__subdf3>
 4027904:	ad400044 	addi	r21,r21,1
 4027908:	ac3fffc5 	stb	r16,-1(r21)
 402790c:	ac7fea1e 	bne	r21,r17,40278b8 <__flash_rwdata_start+0xffff6990>
 4027910:	1023883a 	mov	r17,r2
 4027914:	d8801217 	ldw	r2,72(sp)
 4027918:	dc800f17 	ldw	r18,60(sp)
 402791c:	1829883a 	mov	r20,r3
 4027920:	b8af883a 	add	r23,r23,r2
 4027924:	d9001417 	ldw	r4,80(sp)
 4027928:	d9401517 	ldw	r5,84(sp)
 402792c:	000d883a 	mov	r6,zero
 4027930:	01cff834 	movhi	r7,16352
 4027934:	40216680 	call	4021668 <__adddf3>
 4027938:	880d883a 	mov	r6,r17
 402793c:	a00f883a 	mov	r7,r20
 4027940:	1009883a 	mov	r4,r2
 4027944:	180b883a 	mov	r5,r3
 4027948:	40229600 	call	4022960 <__ledf2>
 402794c:	10003e0e 	bge	r2,zero,4027a48 <_dtoa_r+0x1548>
 4027950:	d9001317 	ldw	r4,76(sp)
 4027954:	bd3fffc3 	ldbu	r20,-1(r23)
 4027958:	d9000515 	stw	r4,20(sp)
 402795c:	003d3b06 	br	4026e4c <__flash_rwdata_start+0xffff5f24>
 4027960:	0027883a 	mov	r19,zero
 4027964:	003f1b06 	br	40275d4 <__flash_rwdata_start+0xffff66ac>
 4027968:	d8800817 	ldw	r2,32(sp)
 402796c:	11e9c83a 	sub	r20,r2,r7
 4027970:	0005883a 	mov	r2,zero
 4027974:	003d5406 	br	4026ec8 <__flash_rwdata_start+0xffff5fa0>
 4027978:	00800044 	movi	r2,1
 402797c:	003dc706 	br	402709c <__flash_rwdata_start+0xffff6174>
 4027980:	d8c00217 	ldw	r3,8(sp)
 4027984:	00800d84 	movi	r2,54
 4027988:	dd400a17 	ldw	r21,40(sp)
 402798c:	10c5c83a 	sub	r2,r2,r3
 4027990:	dd000817 	ldw	r20,32(sp)
 4027994:	003d4c06 	br	4026ec8 <__flash_rwdata_start+0xffff5fa0>
 4027998:	dc800f15 	stw	r18,60(sp)
 402799c:	dcc01015 	stw	r19,64(sp)
 40279a0:	04000084 	movi	r16,2
 40279a4:	003bed06 	br	402695c <__flash_rwdata_start+0xffff5a34>
 40279a8:	d9000617 	ldw	r4,24(sp)
 40279ac:	203f0d26 	beq	r4,zero,40275e4 <__flash_rwdata_start+0xffff66bc>
 40279b0:	d9800c17 	ldw	r6,48(sp)
 40279b4:	01bcab0e 	bge	zero,r6,4026c64 <__flash_rwdata_start+0xffff5d3c>
 40279b8:	d9401017 	ldw	r5,64(sp)
 40279bc:	d9000f17 	ldw	r4,60(sp)
 40279c0:	000d883a 	mov	r6,zero
 40279c4:	01d00934 	movhi	r7,16420
 40279c8:	4022a540 	call	4022a54 <__muldf3>
 40279cc:	81000044 	addi	r4,r16,1
 40279d0:	d8800f15 	stw	r2,60(sp)
 40279d4:	d8c01015 	stw	r3,64(sp)
 40279d8:	4023ae80 	call	4023ae8 <__floatsidf>
 40279dc:	d9800f17 	ldw	r6,60(sp)
 40279e0:	d9c01017 	ldw	r7,64(sp)
 40279e4:	1009883a 	mov	r4,r2
 40279e8:	180b883a 	mov	r5,r3
 40279ec:	4022a540 	call	4022a54 <__muldf3>
 40279f0:	01d00734 	movhi	r7,16412
 40279f4:	000d883a 	mov	r6,zero
 40279f8:	1009883a 	mov	r4,r2
 40279fc:	180b883a 	mov	r5,r3
 4027a00:	40216680 	call	4021668 <__adddf3>
 4027a04:	d9c00517 	ldw	r7,20(sp)
 4027a08:	047f3034 	movhi	r17,64704
 4027a0c:	1021883a 	mov	r16,r2
 4027a10:	39ffffc4 	addi	r7,r7,-1
 4027a14:	d9c01315 	stw	r7,76(sp)
 4027a18:	1c63883a 	add	r17,r3,r17
 4027a1c:	db000c17 	ldw	r12,48(sp)
 4027a20:	003bea06 	br	40269cc <__flash_rwdata_start+0xffff5aa4>
 4027a24:	dc000915 	stw	r16,36(sp)
 4027a28:	003e0e06 	br	4027264 <__flash_rwdata_start+0xffff633c>
 4027a2c:	01000e44 	movi	r4,57
 4027a30:	8825883a 	mov	r18,r17
 4027a34:	9dc00044 	addi	r23,r19,1
 4027a38:	99000005 	stb	r4,0(r19)
 4027a3c:	a023883a 	mov	r17,r20
 4027a40:	dc000915 	stw	r16,36(sp)
 4027a44:	003da406 	br	40270d8 <__flash_rwdata_start+0xffff61b0>
 4027a48:	d9801417 	ldw	r6,80(sp)
 4027a4c:	d9c01517 	ldw	r7,84(sp)
 4027a50:	0009883a 	mov	r4,zero
 4027a54:	014ff834 	movhi	r5,16352
 4027a58:	402316c0 	call	402316c <__subdf3>
 4027a5c:	880d883a 	mov	r6,r17
 4027a60:	a00f883a 	mov	r7,r20
 4027a64:	1009883a 	mov	r4,r2
 4027a68:	180b883a 	mov	r5,r3
 4027a6c:	40228840 	call	4022884 <__gedf2>
 4027a70:	00bc7c0e 	bge	zero,r2,4026c64 <__flash_rwdata_start+0xffff5d3c>
 4027a74:	01000c04 	movi	r4,48
 4027a78:	00000106 	br	4027a80 <_dtoa_r+0x1580>
 4027a7c:	102f883a 	mov	r23,r2
 4027a80:	b8bfffc4 	addi	r2,r23,-1
 4027a84:	10c00007 	ldb	r3,0(r2)
 4027a88:	193ffc26 	beq	r3,r4,4027a7c <__flash_rwdata_start+0xffff6b54>
 4027a8c:	d9801317 	ldw	r6,76(sp)
 4027a90:	d9800515 	stw	r6,20(sp)
 4027a94:	003c4406 	br	4026ba8 <__flash_rwdata_start+0xffff5c80>
 4027a98:	d9801317 	ldw	r6,76(sp)
 4027a9c:	d9800515 	stw	r6,20(sp)
 4027aa0:	003cea06 	br	4026e4c <__flash_rwdata_start+0xffff5f24>
 4027aa4:	dd800f17 	ldw	r22,60(sp)
 4027aa8:	dcc01017 	ldw	r19,64(sp)
 4027aac:	dc801217 	ldw	r18,72(sp)
 4027ab0:	003c6c06 	br	4026c64 <__flash_rwdata_start+0xffff5d3c>
 4027ab4:	903e031e 	bne	r18,zero,40272c4 <__flash_rwdata_start+0xffff639c>
 4027ab8:	003ebb06 	br	40275a8 <__flash_rwdata_start+0xffff6680>
 4027abc:	103e6c1e 	bne	r2,zero,4027470 <__flash_rwdata_start+0xffff6548>
 4027ac0:	4080004c 	andi	r2,r8,1
 4027ac4:	103e6a26 	beq	r2,zero,4027470 <__flash_rwdata_start+0xffff6548>
 4027ac8:	003e6606 	br	4027464 <__flash_rwdata_start+0xffff653c>
 4027acc:	d8c00317 	ldw	r3,12(sp)
 4027ad0:	00800084 	movi	r2,2
 4027ad4:	10c02916 	blt	r2,r3,4027b7c <_dtoa_r+0x167c>
 4027ad8:	d9000c17 	ldw	r4,48(sp)
 4027adc:	003e8806 	br	4027500 <__flash_rwdata_start+0xffff65d8>
 4027ae0:	04000084 	movi	r16,2
 4027ae4:	003b9d06 	br	402695c <__flash_rwdata_start+0xffff5a34>
 4027ae8:	d9001317 	ldw	r4,76(sp)
 4027aec:	d9000515 	stw	r4,20(sp)
 4027af0:	003cd606 	br	4026e4c <__flash_rwdata_start+0xffff5f24>
 4027af4:	d8801317 	ldw	r2,76(sp)
 4027af8:	d8800515 	stw	r2,20(sp)
 4027afc:	003c2a06 	br	4026ba8 <__flash_rwdata_start+0xffff5c80>
 4027b00:	d9800317 	ldw	r6,12(sp)
 4027b04:	00800084 	movi	r2,2
 4027b08:	11801516 	blt	r2,r6,4027b60 <_dtoa_r+0x1660>
 4027b0c:	d9c00c17 	ldw	r7,48(sp)
 4027b10:	d9c00615 	stw	r7,24(sp)
 4027b14:	003df706 	br	40272f4 <__flash_rwdata_start+0xffff63cc>
 4027b18:	193d3926 	beq	r3,r4,4027000 <__flash_rwdata_start+0xffff60d8>
 4027b1c:	00c00f04 	movi	r3,60
 4027b20:	1885c83a 	sub	r2,r3,r2
 4027b24:	003ddf06 	br	40272a4 <__flash_rwdata_start+0xffff637c>
 4027b28:	e009883a 	mov	r4,fp
 4027b2c:	e0001115 	stw	zero,68(fp)
 4027b30:	000b883a 	mov	r5,zero
 4027b34:	4029bf80 	call	4029bf8 <_Balloc>
 4027b38:	d8800715 	stw	r2,28(sp)
 4027b3c:	d8c00717 	ldw	r3,28(sp)
 4027b40:	00bfffc4 	movi	r2,-1
 4027b44:	01000044 	movi	r4,1
 4027b48:	d8800c15 	stw	r2,48(sp)
 4027b4c:	e0c01015 	stw	r3,64(fp)
 4027b50:	d9000b15 	stw	r4,44(sp)
 4027b54:	d8800615 	stw	r2,24(sp)
 4027b58:	d8002215 	stw	zero,136(sp)
 4027b5c:	003c4106 	br	4026c64 <__flash_rwdata_start+0xffff5d3c>
 4027b60:	d8c00c17 	ldw	r3,48(sp)
 4027b64:	d8c00615 	stw	r3,24(sp)
 4027b68:	003e7006 	br	402752c <__flash_rwdata_start+0xffff6604>
 4027b6c:	04400044 	movi	r17,1
 4027b70:	003b2006 	br	40267f4 <__flash_rwdata_start+0xffff58cc>
 4027b74:	000b883a 	mov	r5,zero
 4027b78:	003b3d06 	br	4026870 <__flash_rwdata_start+0xffff5948>
 4027b7c:	d8800c17 	ldw	r2,48(sp)
 4027b80:	d8800615 	stw	r2,24(sp)
 4027b84:	003e6906 	br	402752c <__flash_rwdata_start+0xffff6604>

04027b88 <__sflush_r>:
 4027b88:	2880030b 	ldhu	r2,12(r5)
 4027b8c:	defffb04 	addi	sp,sp,-20
 4027b90:	dcc00315 	stw	r19,12(sp)
 4027b94:	dc400115 	stw	r17,4(sp)
 4027b98:	dfc00415 	stw	ra,16(sp)
 4027b9c:	dc800215 	stw	r18,8(sp)
 4027ba0:	dc000015 	stw	r16,0(sp)
 4027ba4:	10c0020c 	andi	r3,r2,8
 4027ba8:	2823883a 	mov	r17,r5
 4027bac:	2027883a 	mov	r19,r4
 4027bb0:	1800311e 	bne	r3,zero,4027c78 <__sflush_r+0xf0>
 4027bb4:	28c00117 	ldw	r3,4(r5)
 4027bb8:	10820014 	ori	r2,r2,2048
 4027bbc:	2880030d 	sth	r2,12(r5)
 4027bc0:	00c04b0e 	bge	zero,r3,4027cf0 <__sflush_r+0x168>
 4027bc4:	8a000a17 	ldw	r8,40(r17)
 4027bc8:	40002326 	beq	r8,zero,4027c58 <__sflush_r+0xd0>
 4027bcc:	9c000017 	ldw	r16,0(r19)
 4027bd0:	10c4000c 	andi	r3,r2,4096
 4027bd4:	98000015 	stw	zero,0(r19)
 4027bd8:	18004826 	beq	r3,zero,4027cfc <__sflush_r+0x174>
 4027bdc:	89801417 	ldw	r6,80(r17)
 4027be0:	10c0010c 	andi	r3,r2,4
 4027be4:	18000626 	beq	r3,zero,4027c00 <__sflush_r+0x78>
 4027be8:	88c00117 	ldw	r3,4(r17)
 4027bec:	88800c17 	ldw	r2,48(r17)
 4027bf0:	30cdc83a 	sub	r6,r6,r3
 4027bf4:	10000226 	beq	r2,zero,4027c00 <__sflush_r+0x78>
 4027bf8:	88800f17 	ldw	r2,60(r17)
 4027bfc:	308dc83a 	sub	r6,r6,r2
 4027c00:	89400717 	ldw	r5,28(r17)
 4027c04:	000f883a 	mov	r7,zero
 4027c08:	9809883a 	mov	r4,r19
 4027c0c:	403ee83a 	callr	r8
 4027c10:	00ffffc4 	movi	r3,-1
 4027c14:	10c04426 	beq	r2,r3,4027d28 <__sflush_r+0x1a0>
 4027c18:	88c0030b 	ldhu	r3,12(r17)
 4027c1c:	89000417 	ldw	r4,16(r17)
 4027c20:	88000115 	stw	zero,4(r17)
 4027c24:	197dffcc 	andi	r5,r3,63487
 4027c28:	8940030d 	sth	r5,12(r17)
 4027c2c:	89000015 	stw	r4,0(r17)
 4027c30:	18c4000c 	andi	r3,r3,4096
 4027c34:	18002c1e 	bne	r3,zero,4027ce8 <__sflush_r+0x160>
 4027c38:	89400c17 	ldw	r5,48(r17)
 4027c3c:	9c000015 	stw	r16,0(r19)
 4027c40:	28000526 	beq	r5,zero,4027c58 <__sflush_r+0xd0>
 4027c44:	88801004 	addi	r2,r17,64
 4027c48:	28800226 	beq	r5,r2,4027c54 <__sflush_r+0xcc>
 4027c4c:	9809883a 	mov	r4,r19
 4027c50:	40282f40 	call	40282f4 <_free_r>
 4027c54:	88000c15 	stw	zero,48(r17)
 4027c58:	0005883a 	mov	r2,zero
 4027c5c:	dfc00417 	ldw	ra,16(sp)
 4027c60:	dcc00317 	ldw	r19,12(sp)
 4027c64:	dc800217 	ldw	r18,8(sp)
 4027c68:	dc400117 	ldw	r17,4(sp)
 4027c6c:	dc000017 	ldw	r16,0(sp)
 4027c70:	dec00504 	addi	sp,sp,20
 4027c74:	f800283a 	ret
 4027c78:	2c800417 	ldw	r18,16(r5)
 4027c7c:	903ff626 	beq	r18,zero,4027c58 <__flash_rwdata_start+0xffff6d30>
 4027c80:	2c000017 	ldw	r16,0(r5)
 4027c84:	108000cc 	andi	r2,r2,3
 4027c88:	2c800015 	stw	r18,0(r5)
 4027c8c:	84a1c83a 	sub	r16,r16,r18
 4027c90:	1000131e 	bne	r2,zero,4027ce0 <__sflush_r+0x158>
 4027c94:	28800517 	ldw	r2,20(r5)
 4027c98:	88800215 	stw	r2,8(r17)
 4027c9c:	04000316 	blt	zero,r16,4027cac <__sflush_r+0x124>
 4027ca0:	003fed06 	br	4027c58 <__flash_rwdata_start+0xffff6d30>
 4027ca4:	90a5883a 	add	r18,r18,r2
 4027ca8:	043feb0e 	bge	zero,r16,4027c58 <__flash_rwdata_start+0xffff6d30>
 4027cac:	88800917 	ldw	r2,36(r17)
 4027cb0:	89400717 	ldw	r5,28(r17)
 4027cb4:	800f883a 	mov	r7,r16
 4027cb8:	900d883a 	mov	r6,r18
 4027cbc:	9809883a 	mov	r4,r19
 4027cc0:	103ee83a 	callr	r2
 4027cc4:	80a1c83a 	sub	r16,r16,r2
 4027cc8:	00bff616 	blt	zero,r2,4027ca4 <__flash_rwdata_start+0xffff6d7c>
 4027ccc:	88c0030b 	ldhu	r3,12(r17)
 4027cd0:	00bfffc4 	movi	r2,-1
 4027cd4:	18c01014 	ori	r3,r3,64
 4027cd8:	88c0030d 	sth	r3,12(r17)
 4027cdc:	003fdf06 	br	4027c5c <__flash_rwdata_start+0xffff6d34>
 4027ce0:	0005883a 	mov	r2,zero
 4027ce4:	003fec06 	br	4027c98 <__flash_rwdata_start+0xffff6d70>
 4027ce8:	88801415 	stw	r2,80(r17)
 4027cec:	003fd206 	br	4027c38 <__flash_rwdata_start+0xffff6d10>
 4027cf0:	28c00f17 	ldw	r3,60(r5)
 4027cf4:	00ffb316 	blt	zero,r3,4027bc4 <__flash_rwdata_start+0xffff6c9c>
 4027cf8:	003fd706 	br	4027c58 <__flash_rwdata_start+0xffff6d30>
 4027cfc:	89400717 	ldw	r5,28(r17)
 4027d00:	000d883a 	mov	r6,zero
 4027d04:	01c00044 	movi	r7,1
 4027d08:	9809883a 	mov	r4,r19
 4027d0c:	403ee83a 	callr	r8
 4027d10:	100d883a 	mov	r6,r2
 4027d14:	00bfffc4 	movi	r2,-1
 4027d18:	30801426 	beq	r6,r2,4027d6c <__sflush_r+0x1e4>
 4027d1c:	8880030b 	ldhu	r2,12(r17)
 4027d20:	8a000a17 	ldw	r8,40(r17)
 4027d24:	003fae06 	br	4027be0 <__flash_rwdata_start+0xffff6cb8>
 4027d28:	98c00017 	ldw	r3,0(r19)
 4027d2c:	183fba26 	beq	r3,zero,4027c18 <__flash_rwdata_start+0xffff6cf0>
 4027d30:	01000744 	movi	r4,29
 4027d34:	19000626 	beq	r3,r4,4027d50 <__sflush_r+0x1c8>
 4027d38:	01000584 	movi	r4,22
 4027d3c:	19000426 	beq	r3,r4,4027d50 <__sflush_r+0x1c8>
 4027d40:	88c0030b 	ldhu	r3,12(r17)
 4027d44:	18c01014 	ori	r3,r3,64
 4027d48:	88c0030d 	sth	r3,12(r17)
 4027d4c:	003fc306 	br	4027c5c <__flash_rwdata_start+0xffff6d34>
 4027d50:	8880030b 	ldhu	r2,12(r17)
 4027d54:	88c00417 	ldw	r3,16(r17)
 4027d58:	88000115 	stw	zero,4(r17)
 4027d5c:	10bdffcc 	andi	r2,r2,63487
 4027d60:	8880030d 	sth	r2,12(r17)
 4027d64:	88c00015 	stw	r3,0(r17)
 4027d68:	003fb306 	br	4027c38 <__flash_rwdata_start+0xffff6d10>
 4027d6c:	98800017 	ldw	r2,0(r19)
 4027d70:	103fea26 	beq	r2,zero,4027d1c <__flash_rwdata_start+0xffff6df4>
 4027d74:	00c00744 	movi	r3,29
 4027d78:	10c00226 	beq	r2,r3,4027d84 <__sflush_r+0x1fc>
 4027d7c:	00c00584 	movi	r3,22
 4027d80:	10c0031e 	bne	r2,r3,4027d90 <__sflush_r+0x208>
 4027d84:	9c000015 	stw	r16,0(r19)
 4027d88:	0005883a 	mov	r2,zero
 4027d8c:	003fb306 	br	4027c5c <__flash_rwdata_start+0xffff6d34>
 4027d90:	88c0030b 	ldhu	r3,12(r17)
 4027d94:	3005883a 	mov	r2,r6
 4027d98:	18c01014 	ori	r3,r3,64
 4027d9c:	88c0030d 	sth	r3,12(r17)
 4027da0:	003fae06 	br	4027c5c <__flash_rwdata_start+0xffff6d34>

04027da4 <_fflush_r>:
 4027da4:	defffd04 	addi	sp,sp,-12
 4027da8:	dc000115 	stw	r16,4(sp)
 4027dac:	dfc00215 	stw	ra,8(sp)
 4027db0:	2021883a 	mov	r16,r4
 4027db4:	20000226 	beq	r4,zero,4027dc0 <_fflush_r+0x1c>
 4027db8:	20800e17 	ldw	r2,56(r4)
 4027dbc:	10000c26 	beq	r2,zero,4027df0 <_fflush_r+0x4c>
 4027dc0:	2880030f 	ldh	r2,12(r5)
 4027dc4:	1000051e 	bne	r2,zero,4027ddc <_fflush_r+0x38>
 4027dc8:	0005883a 	mov	r2,zero
 4027dcc:	dfc00217 	ldw	ra,8(sp)
 4027dd0:	dc000117 	ldw	r16,4(sp)
 4027dd4:	dec00304 	addi	sp,sp,12
 4027dd8:	f800283a 	ret
 4027ddc:	8009883a 	mov	r4,r16
 4027de0:	dfc00217 	ldw	ra,8(sp)
 4027de4:	dc000117 	ldw	r16,4(sp)
 4027de8:	dec00304 	addi	sp,sp,12
 4027dec:	4027b881 	jmpi	4027b88 <__sflush_r>
 4027df0:	d9400015 	stw	r5,0(sp)
 4027df4:	40281800 	call	4028180 <__sinit>
 4027df8:	d9400017 	ldw	r5,0(sp)
 4027dfc:	003ff006 	br	4027dc0 <__flash_rwdata_start+0xffff6e98>

04027e00 <fflush>:
 4027e00:	20000526 	beq	r4,zero,4027e18 <fflush+0x18>
 4027e04:	00800034 	movhi	r2,0
 4027e08:	10878f04 	addi	r2,r2,7740
 4027e0c:	200b883a 	mov	r5,r4
 4027e10:	11000017 	ldw	r4,0(r2)
 4027e14:	4027da41 	jmpi	4027da4 <_fflush_r>
 4027e18:	00800034 	movhi	r2,0
 4027e1c:	10878e04 	addi	r2,r2,7736
 4027e20:	11000017 	ldw	r4,0(r2)
 4027e24:	014100b4 	movhi	r5,1026
 4027e28:	295f6904 	addi	r5,r5,32164
 4027e2c:	4028b841 	jmpi	4028b84 <_fwalk_reent>

04027e30 <__fp_unlock>:
 4027e30:	0005883a 	mov	r2,zero
 4027e34:	f800283a 	ret

04027e38 <_cleanup_r>:
 4027e38:	014100f4 	movhi	r5,1027
 4027e3c:	2972e104 	addi	r5,r5,-13436
 4027e40:	4028b841 	jmpi	4028b84 <_fwalk_reent>

04027e44 <__sinit.part.1>:
 4027e44:	defff704 	addi	sp,sp,-36
 4027e48:	00c100b4 	movhi	r3,1026
 4027e4c:	dfc00815 	stw	ra,32(sp)
 4027e50:	ddc00715 	stw	r23,28(sp)
 4027e54:	dd800615 	stw	r22,24(sp)
 4027e58:	dd400515 	stw	r21,20(sp)
 4027e5c:	dd000415 	stw	r20,16(sp)
 4027e60:	dcc00315 	stw	r19,12(sp)
 4027e64:	dc800215 	stw	r18,8(sp)
 4027e68:	dc400115 	stw	r17,4(sp)
 4027e6c:	dc000015 	stw	r16,0(sp)
 4027e70:	18df8e04 	addi	r3,r3,32312
 4027e74:	24000117 	ldw	r16,4(r4)
 4027e78:	20c00f15 	stw	r3,60(r4)
 4027e7c:	2080bb04 	addi	r2,r4,748
 4027e80:	00c000c4 	movi	r3,3
 4027e84:	20c0b915 	stw	r3,740(r4)
 4027e88:	2080ba15 	stw	r2,744(r4)
 4027e8c:	2000b815 	stw	zero,736(r4)
 4027e90:	05c00204 	movi	r23,8
 4027e94:	00800104 	movi	r2,4
 4027e98:	2025883a 	mov	r18,r4
 4027e9c:	b80d883a 	mov	r6,r23
 4027ea0:	81001704 	addi	r4,r16,92
 4027ea4:	000b883a 	mov	r5,zero
 4027ea8:	80000015 	stw	zero,0(r16)
 4027eac:	80000115 	stw	zero,4(r16)
 4027eb0:	80000215 	stw	zero,8(r16)
 4027eb4:	8080030d 	sth	r2,12(r16)
 4027eb8:	80001915 	stw	zero,100(r16)
 4027ebc:	8000038d 	sth	zero,14(r16)
 4027ec0:	80000415 	stw	zero,16(r16)
 4027ec4:	80000515 	stw	zero,20(r16)
 4027ec8:	80000615 	stw	zero,24(r16)
 4027ecc:	4029ad00 	call	4029ad0 <memset>
 4027ed0:	058100f4 	movhi	r22,1027
 4027ed4:	94400217 	ldw	r17,8(r18)
 4027ed8:	054100f4 	movhi	r21,1027
 4027edc:	050100f4 	movhi	r20,1027
 4027ee0:	04c100f4 	movhi	r19,1027
 4027ee4:	b5ac6b04 	addi	r22,r22,-20052
 4027ee8:	ad6c8204 	addi	r21,r21,-19960
 4027eec:	a52ca104 	addi	r20,r20,-19836
 4027ef0:	9cecb804 	addi	r19,r19,-19744
 4027ef4:	85800815 	stw	r22,32(r16)
 4027ef8:	85400915 	stw	r21,36(r16)
 4027efc:	85000a15 	stw	r20,40(r16)
 4027f00:	84c00b15 	stw	r19,44(r16)
 4027f04:	84000715 	stw	r16,28(r16)
 4027f08:	00800284 	movi	r2,10
 4027f0c:	8880030d 	sth	r2,12(r17)
 4027f10:	00800044 	movi	r2,1
 4027f14:	b80d883a 	mov	r6,r23
 4027f18:	89001704 	addi	r4,r17,92
 4027f1c:	000b883a 	mov	r5,zero
 4027f20:	88000015 	stw	zero,0(r17)
 4027f24:	88000115 	stw	zero,4(r17)
 4027f28:	88000215 	stw	zero,8(r17)
 4027f2c:	88001915 	stw	zero,100(r17)
 4027f30:	8880038d 	sth	r2,14(r17)
 4027f34:	88000415 	stw	zero,16(r17)
 4027f38:	88000515 	stw	zero,20(r17)
 4027f3c:	88000615 	stw	zero,24(r17)
 4027f40:	4029ad00 	call	4029ad0 <memset>
 4027f44:	94000317 	ldw	r16,12(r18)
 4027f48:	00800484 	movi	r2,18
 4027f4c:	8c400715 	stw	r17,28(r17)
 4027f50:	8d800815 	stw	r22,32(r17)
 4027f54:	8d400915 	stw	r21,36(r17)
 4027f58:	8d000a15 	stw	r20,40(r17)
 4027f5c:	8cc00b15 	stw	r19,44(r17)
 4027f60:	8080030d 	sth	r2,12(r16)
 4027f64:	00800084 	movi	r2,2
 4027f68:	80000015 	stw	zero,0(r16)
 4027f6c:	80000115 	stw	zero,4(r16)
 4027f70:	80000215 	stw	zero,8(r16)
 4027f74:	80001915 	stw	zero,100(r16)
 4027f78:	8080038d 	sth	r2,14(r16)
 4027f7c:	80000415 	stw	zero,16(r16)
 4027f80:	80000515 	stw	zero,20(r16)
 4027f84:	80000615 	stw	zero,24(r16)
 4027f88:	b80d883a 	mov	r6,r23
 4027f8c:	000b883a 	mov	r5,zero
 4027f90:	81001704 	addi	r4,r16,92
 4027f94:	4029ad00 	call	4029ad0 <memset>
 4027f98:	00800044 	movi	r2,1
 4027f9c:	84000715 	stw	r16,28(r16)
 4027fa0:	85800815 	stw	r22,32(r16)
 4027fa4:	85400915 	stw	r21,36(r16)
 4027fa8:	85000a15 	stw	r20,40(r16)
 4027fac:	84c00b15 	stw	r19,44(r16)
 4027fb0:	90800e15 	stw	r2,56(r18)
 4027fb4:	dfc00817 	ldw	ra,32(sp)
 4027fb8:	ddc00717 	ldw	r23,28(sp)
 4027fbc:	dd800617 	ldw	r22,24(sp)
 4027fc0:	dd400517 	ldw	r21,20(sp)
 4027fc4:	dd000417 	ldw	r20,16(sp)
 4027fc8:	dcc00317 	ldw	r19,12(sp)
 4027fcc:	dc800217 	ldw	r18,8(sp)
 4027fd0:	dc400117 	ldw	r17,4(sp)
 4027fd4:	dc000017 	ldw	r16,0(sp)
 4027fd8:	dec00904 	addi	sp,sp,36
 4027fdc:	f800283a 	ret

04027fe0 <__fp_lock>:
 4027fe0:	0005883a 	mov	r2,zero
 4027fe4:	f800283a 	ret

04027fe8 <__sfmoreglue>:
 4027fe8:	defffc04 	addi	sp,sp,-16
 4027fec:	dc400115 	stw	r17,4(sp)
 4027ff0:	2c7fffc4 	addi	r17,r5,-1
 4027ff4:	8c401a24 	muli	r17,r17,104
 4027ff8:	dc800215 	stw	r18,8(sp)
 4027ffc:	2825883a 	mov	r18,r5
 4028000:	89401d04 	addi	r5,r17,116
 4028004:	dc000015 	stw	r16,0(sp)
 4028008:	dfc00315 	stw	ra,12(sp)
 402800c:	4028f3c0 	call	4028f3c <_malloc_r>
 4028010:	1021883a 	mov	r16,r2
 4028014:	10000726 	beq	r2,zero,4028034 <__sfmoreglue+0x4c>
 4028018:	11000304 	addi	r4,r2,12
 402801c:	10000015 	stw	zero,0(r2)
 4028020:	14800115 	stw	r18,4(r2)
 4028024:	11000215 	stw	r4,8(r2)
 4028028:	89801a04 	addi	r6,r17,104
 402802c:	000b883a 	mov	r5,zero
 4028030:	4029ad00 	call	4029ad0 <memset>
 4028034:	8005883a 	mov	r2,r16
 4028038:	dfc00317 	ldw	ra,12(sp)
 402803c:	dc800217 	ldw	r18,8(sp)
 4028040:	dc400117 	ldw	r17,4(sp)
 4028044:	dc000017 	ldw	r16,0(sp)
 4028048:	dec00404 	addi	sp,sp,16
 402804c:	f800283a 	ret

04028050 <__sfp>:
 4028050:	defffb04 	addi	sp,sp,-20
 4028054:	dc000015 	stw	r16,0(sp)
 4028058:	04000034 	movhi	r16,0
 402805c:	84078e04 	addi	r16,r16,7736
 4028060:	dcc00315 	stw	r19,12(sp)
 4028064:	2027883a 	mov	r19,r4
 4028068:	81000017 	ldw	r4,0(r16)
 402806c:	dfc00415 	stw	ra,16(sp)
 4028070:	dc800215 	stw	r18,8(sp)
 4028074:	20800e17 	ldw	r2,56(r4)
 4028078:	dc400115 	stw	r17,4(sp)
 402807c:	1000021e 	bne	r2,zero,4028088 <__sfp+0x38>
 4028080:	4027e440 	call	4027e44 <__sinit.part.1>
 4028084:	81000017 	ldw	r4,0(r16)
 4028088:	2480b804 	addi	r18,r4,736
 402808c:	047fffc4 	movi	r17,-1
 4028090:	91000117 	ldw	r4,4(r18)
 4028094:	94000217 	ldw	r16,8(r18)
 4028098:	213fffc4 	addi	r4,r4,-1
 402809c:	20000a16 	blt	r4,zero,40280c8 <__sfp+0x78>
 40280a0:	8080030f 	ldh	r2,12(r16)
 40280a4:	10000c26 	beq	r2,zero,40280d8 <__sfp+0x88>
 40280a8:	80c01d04 	addi	r3,r16,116
 40280ac:	00000206 	br	40280b8 <__sfp+0x68>
 40280b0:	18bfe60f 	ldh	r2,-104(r3)
 40280b4:	10000826 	beq	r2,zero,40280d8 <__sfp+0x88>
 40280b8:	213fffc4 	addi	r4,r4,-1
 40280bc:	1c3ffd04 	addi	r16,r3,-12
 40280c0:	18c01a04 	addi	r3,r3,104
 40280c4:	247ffa1e 	bne	r4,r17,40280b0 <__flash_rwdata_start+0xffff7188>
 40280c8:	90800017 	ldw	r2,0(r18)
 40280cc:	10001d26 	beq	r2,zero,4028144 <__sfp+0xf4>
 40280d0:	1025883a 	mov	r18,r2
 40280d4:	003fee06 	br	4028090 <__flash_rwdata_start+0xffff7168>
 40280d8:	00bfffc4 	movi	r2,-1
 40280dc:	8080038d 	sth	r2,14(r16)
 40280e0:	00800044 	movi	r2,1
 40280e4:	8080030d 	sth	r2,12(r16)
 40280e8:	80001915 	stw	zero,100(r16)
 40280ec:	80000015 	stw	zero,0(r16)
 40280f0:	80000215 	stw	zero,8(r16)
 40280f4:	80000115 	stw	zero,4(r16)
 40280f8:	80000415 	stw	zero,16(r16)
 40280fc:	80000515 	stw	zero,20(r16)
 4028100:	80000615 	stw	zero,24(r16)
 4028104:	01800204 	movi	r6,8
 4028108:	000b883a 	mov	r5,zero
 402810c:	81001704 	addi	r4,r16,92
 4028110:	4029ad00 	call	4029ad0 <memset>
 4028114:	8005883a 	mov	r2,r16
 4028118:	80000c15 	stw	zero,48(r16)
 402811c:	80000d15 	stw	zero,52(r16)
 4028120:	80001115 	stw	zero,68(r16)
 4028124:	80001215 	stw	zero,72(r16)
 4028128:	dfc00417 	ldw	ra,16(sp)
 402812c:	dcc00317 	ldw	r19,12(sp)
 4028130:	dc800217 	ldw	r18,8(sp)
 4028134:	dc400117 	ldw	r17,4(sp)
 4028138:	dc000017 	ldw	r16,0(sp)
 402813c:	dec00504 	addi	sp,sp,20
 4028140:	f800283a 	ret
 4028144:	01400104 	movi	r5,4
 4028148:	9809883a 	mov	r4,r19
 402814c:	4027fe80 	call	4027fe8 <__sfmoreglue>
 4028150:	90800015 	stw	r2,0(r18)
 4028154:	103fde1e 	bne	r2,zero,40280d0 <__flash_rwdata_start+0xffff71a8>
 4028158:	00800304 	movi	r2,12
 402815c:	98800015 	stw	r2,0(r19)
 4028160:	0005883a 	mov	r2,zero
 4028164:	003ff006 	br	4028128 <__flash_rwdata_start+0xffff7200>

04028168 <_cleanup>:
 4028168:	00800034 	movhi	r2,0
 402816c:	10878e04 	addi	r2,r2,7736
 4028170:	11000017 	ldw	r4,0(r2)
 4028174:	014100f4 	movhi	r5,1027
 4028178:	2972e104 	addi	r5,r5,-13436
 402817c:	4028b841 	jmpi	4028b84 <_fwalk_reent>

04028180 <__sinit>:
 4028180:	20800e17 	ldw	r2,56(r4)
 4028184:	10000126 	beq	r2,zero,402818c <__sinit+0xc>
 4028188:	f800283a 	ret
 402818c:	4027e441 	jmpi	4027e44 <__sinit.part.1>

04028190 <__sfp_lock_acquire>:
 4028190:	f800283a 	ret

04028194 <__sfp_lock_release>:
 4028194:	f800283a 	ret

04028198 <__sinit_lock_acquire>:
 4028198:	f800283a 	ret

0402819c <__sinit_lock_release>:
 402819c:	f800283a 	ret

040281a0 <__fp_lock_all>:
 40281a0:	00800034 	movhi	r2,0
 40281a4:	10878f04 	addi	r2,r2,7740
 40281a8:	11000017 	ldw	r4,0(r2)
 40281ac:	014100b4 	movhi	r5,1026
 40281b0:	295ff804 	addi	r5,r5,32736
 40281b4:	4028ac01 	jmpi	4028ac0 <_fwalk>

040281b8 <__fp_unlock_all>:
 40281b8:	00800034 	movhi	r2,0
 40281bc:	10878f04 	addi	r2,r2,7740
 40281c0:	11000017 	ldw	r4,0(r2)
 40281c4:	014100b4 	movhi	r5,1026
 40281c8:	295f8c04 	addi	r5,r5,32304
 40281cc:	4028ac01 	jmpi	4028ac0 <_fwalk>

040281d0 <_malloc_trim_r>:
 40281d0:	defffb04 	addi	sp,sp,-20
 40281d4:	dcc00315 	stw	r19,12(sp)
 40281d8:	04c00034 	movhi	r19,0
 40281dc:	dc800215 	stw	r18,8(sp)
 40281e0:	dc400115 	stw	r17,4(sp)
 40281e4:	dc000015 	stw	r16,0(sp)
 40281e8:	dfc00415 	stw	ra,16(sp)
 40281ec:	2821883a 	mov	r16,r5
 40281f0:	9cc20904 	addi	r19,r19,2084
 40281f4:	2025883a 	mov	r18,r4
 40281f8:	402e7e80 	call	402e7e8 <__malloc_lock>
 40281fc:	98800217 	ldw	r2,8(r19)
 4028200:	14400117 	ldw	r17,4(r2)
 4028204:	00bfff04 	movi	r2,-4
 4028208:	88a2703a 	and	r17,r17,r2
 402820c:	8c21c83a 	sub	r16,r17,r16
 4028210:	8403fbc4 	addi	r16,r16,4079
 4028214:	8020d33a 	srli	r16,r16,12
 4028218:	0083ffc4 	movi	r2,4095
 402821c:	843fffc4 	addi	r16,r16,-1
 4028220:	8020933a 	slli	r16,r16,12
 4028224:	1400060e 	bge	r2,r16,4028240 <_malloc_trim_r+0x70>
 4028228:	000b883a 	mov	r5,zero
 402822c:	9009883a 	mov	r4,r18
 4028230:	402b1580 	call	402b158 <_sbrk_r>
 4028234:	98c00217 	ldw	r3,8(r19)
 4028238:	1c47883a 	add	r3,r3,r17
 402823c:	10c00a26 	beq	r2,r3,4028268 <_malloc_trim_r+0x98>
 4028240:	9009883a 	mov	r4,r18
 4028244:	402e80c0 	call	402e80c <__malloc_unlock>
 4028248:	0005883a 	mov	r2,zero
 402824c:	dfc00417 	ldw	ra,16(sp)
 4028250:	dcc00317 	ldw	r19,12(sp)
 4028254:	dc800217 	ldw	r18,8(sp)
 4028258:	dc400117 	ldw	r17,4(sp)
 402825c:	dc000017 	ldw	r16,0(sp)
 4028260:	dec00504 	addi	sp,sp,20
 4028264:	f800283a 	ret
 4028268:	040bc83a 	sub	r5,zero,r16
 402826c:	9009883a 	mov	r4,r18
 4028270:	402b1580 	call	402b158 <_sbrk_r>
 4028274:	00ffffc4 	movi	r3,-1
 4028278:	10c00d26 	beq	r2,r3,40282b0 <_malloc_trim_r+0xe0>
 402827c:	00c00034 	movhi	r3,0
 4028280:	18c7b304 	addi	r3,r3,7884
 4028284:	18800017 	ldw	r2,0(r3)
 4028288:	99000217 	ldw	r4,8(r19)
 402828c:	8c23c83a 	sub	r17,r17,r16
 4028290:	8c400054 	ori	r17,r17,1
 4028294:	1421c83a 	sub	r16,r2,r16
 4028298:	24400115 	stw	r17,4(r4)
 402829c:	9009883a 	mov	r4,r18
 40282a0:	1c000015 	stw	r16,0(r3)
 40282a4:	402e80c0 	call	402e80c <__malloc_unlock>
 40282a8:	00800044 	movi	r2,1
 40282ac:	003fe706 	br	402824c <__flash_rwdata_start+0xffff7324>
 40282b0:	000b883a 	mov	r5,zero
 40282b4:	9009883a 	mov	r4,r18
 40282b8:	402b1580 	call	402b158 <_sbrk_r>
 40282bc:	99000217 	ldw	r4,8(r19)
 40282c0:	014003c4 	movi	r5,15
 40282c4:	1107c83a 	sub	r3,r2,r4
 40282c8:	28ffdd0e 	bge	r5,r3,4028240 <__flash_rwdata_start+0xffff7318>
 40282cc:	01400034 	movhi	r5,0
 40282d0:	29479104 	addi	r5,r5,7748
 40282d4:	29400017 	ldw	r5,0(r5)
 40282d8:	18c00054 	ori	r3,r3,1
 40282dc:	20c00115 	stw	r3,4(r4)
 40282e0:	00c00034 	movhi	r3,0
 40282e4:	1145c83a 	sub	r2,r2,r5
 40282e8:	18c7b304 	addi	r3,r3,7884
 40282ec:	18800015 	stw	r2,0(r3)
 40282f0:	003fd306 	br	4028240 <__flash_rwdata_start+0xffff7318>

040282f4 <_free_r>:
 40282f4:	28004126 	beq	r5,zero,40283fc <_free_r+0x108>
 40282f8:	defffd04 	addi	sp,sp,-12
 40282fc:	dc400115 	stw	r17,4(sp)
 4028300:	dc000015 	stw	r16,0(sp)
 4028304:	2023883a 	mov	r17,r4
 4028308:	2821883a 	mov	r16,r5
 402830c:	dfc00215 	stw	ra,8(sp)
 4028310:	402e7e80 	call	402e7e8 <__malloc_lock>
 4028314:	81ffff17 	ldw	r7,-4(r16)
 4028318:	00bfff84 	movi	r2,-2
 402831c:	01000034 	movhi	r4,0
 4028320:	81bffe04 	addi	r6,r16,-8
 4028324:	3884703a 	and	r2,r7,r2
 4028328:	21020904 	addi	r4,r4,2084
 402832c:	308b883a 	add	r5,r6,r2
 4028330:	2a400117 	ldw	r9,4(r5)
 4028334:	22000217 	ldw	r8,8(r4)
 4028338:	00ffff04 	movi	r3,-4
 402833c:	48c6703a 	and	r3,r9,r3
 4028340:	2a005726 	beq	r5,r8,40284a0 <_free_r+0x1ac>
 4028344:	28c00115 	stw	r3,4(r5)
 4028348:	39c0004c 	andi	r7,r7,1
 402834c:	3800091e 	bne	r7,zero,4028374 <_free_r+0x80>
 4028350:	823ffe17 	ldw	r8,-8(r16)
 4028354:	22400204 	addi	r9,r4,8
 4028358:	320dc83a 	sub	r6,r6,r8
 402835c:	31c00217 	ldw	r7,8(r6)
 4028360:	1205883a 	add	r2,r2,r8
 4028364:	3a406526 	beq	r7,r9,40284fc <_free_r+0x208>
 4028368:	32000317 	ldw	r8,12(r6)
 402836c:	3a000315 	stw	r8,12(r7)
 4028370:	41c00215 	stw	r7,8(r8)
 4028374:	28cf883a 	add	r7,r5,r3
 4028378:	39c00117 	ldw	r7,4(r7)
 402837c:	39c0004c 	andi	r7,r7,1
 4028380:	38003a26 	beq	r7,zero,402846c <_free_r+0x178>
 4028384:	10c00054 	ori	r3,r2,1
 4028388:	30c00115 	stw	r3,4(r6)
 402838c:	3087883a 	add	r3,r6,r2
 4028390:	18800015 	stw	r2,0(r3)
 4028394:	00c07fc4 	movi	r3,511
 4028398:	18801936 	bltu	r3,r2,4028400 <_free_r+0x10c>
 402839c:	1004d0fa 	srli	r2,r2,3
 40283a0:	01c00044 	movi	r7,1
 40283a4:	21400117 	ldw	r5,4(r4)
 40283a8:	10c00044 	addi	r3,r2,1
 40283ac:	18c7883a 	add	r3,r3,r3
 40283b0:	1005d0ba 	srai	r2,r2,2
 40283b4:	18c7883a 	add	r3,r3,r3
 40283b8:	18c7883a 	add	r3,r3,r3
 40283bc:	1907883a 	add	r3,r3,r4
 40283c0:	3884983a 	sll	r2,r7,r2
 40283c4:	19c00017 	ldw	r7,0(r3)
 40283c8:	1a3ffe04 	addi	r8,r3,-8
 40283cc:	1144b03a 	or	r2,r2,r5
 40283d0:	32000315 	stw	r8,12(r6)
 40283d4:	31c00215 	stw	r7,8(r6)
 40283d8:	20800115 	stw	r2,4(r4)
 40283dc:	19800015 	stw	r6,0(r3)
 40283e0:	39800315 	stw	r6,12(r7)
 40283e4:	8809883a 	mov	r4,r17
 40283e8:	dfc00217 	ldw	ra,8(sp)
 40283ec:	dc400117 	ldw	r17,4(sp)
 40283f0:	dc000017 	ldw	r16,0(sp)
 40283f4:	dec00304 	addi	sp,sp,12
 40283f8:	402e80c1 	jmpi	402e80c <__malloc_unlock>
 40283fc:	f800283a 	ret
 4028400:	100ad27a 	srli	r5,r2,9
 4028404:	00c00104 	movi	r3,4
 4028408:	19404a36 	bltu	r3,r5,4028534 <_free_r+0x240>
 402840c:	100ad1ba 	srli	r5,r2,6
 4028410:	28c00e44 	addi	r3,r5,57
 4028414:	18c7883a 	add	r3,r3,r3
 4028418:	29400e04 	addi	r5,r5,56
 402841c:	18c7883a 	add	r3,r3,r3
 4028420:	18c7883a 	add	r3,r3,r3
 4028424:	1909883a 	add	r4,r3,r4
 4028428:	20c00017 	ldw	r3,0(r4)
 402842c:	01c00034 	movhi	r7,0
 4028430:	213ffe04 	addi	r4,r4,-8
 4028434:	39c20904 	addi	r7,r7,2084
 4028438:	20c04426 	beq	r4,r3,402854c <_free_r+0x258>
 402843c:	01ffff04 	movi	r7,-4
 4028440:	19400117 	ldw	r5,4(r3)
 4028444:	29ca703a 	and	r5,r5,r7
 4028448:	1140022e 	bgeu	r2,r5,4028454 <_free_r+0x160>
 402844c:	18c00217 	ldw	r3,8(r3)
 4028450:	20fffb1e 	bne	r4,r3,4028440 <__flash_rwdata_start+0xffff7518>
 4028454:	19000317 	ldw	r4,12(r3)
 4028458:	31000315 	stw	r4,12(r6)
 402845c:	30c00215 	stw	r3,8(r6)
 4028460:	21800215 	stw	r6,8(r4)
 4028464:	19800315 	stw	r6,12(r3)
 4028468:	003fde06 	br	40283e4 <__flash_rwdata_start+0xffff74bc>
 402846c:	29c00217 	ldw	r7,8(r5)
 4028470:	10c5883a 	add	r2,r2,r3
 4028474:	00c00034 	movhi	r3,0
 4028478:	18c20b04 	addi	r3,r3,2092
 402847c:	38c03b26 	beq	r7,r3,402856c <_free_r+0x278>
 4028480:	2a000317 	ldw	r8,12(r5)
 4028484:	11400054 	ori	r5,r2,1
 4028488:	3087883a 	add	r3,r6,r2
 402848c:	3a000315 	stw	r8,12(r7)
 4028490:	41c00215 	stw	r7,8(r8)
 4028494:	31400115 	stw	r5,4(r6)
 4028498:	18800015 	stw	r2,0(r3)
 402849c:	003fbd06 	br	4028394 <__flash_rwdata_start+0xffff746c>
 40284a0:	39c0004c 	andi	r7,r7,1
 40284a4:	10c5883a 	add	r2,r2,r3
 40284a8:	3800071e 	bne	r7,zero,40284c8 <_free_r+0x1d4>
 40284ac:	81fffe17 	ldw	r7,-8(r16)
 40284b0:	31cdc83a 	sub	r6,r6,r7
 40284b4:	30c00317 	ldw	r3,12(r6)
 40284b8:	31400217 	ldw	r5,8(r6)
 40284bc:	11c5883a 	add	r2,r2,r7
 40284c0:	28c00315 	stw	r3,12(r5)
 40284c4:	19400215 	stw	r5,8(r3)
 40284c8:	10c00054 	ori	r3,r2,1
 40284cc:	30c00115 	stw	r3,4(r6)
 40284d0:	00c00034 	movhi	r3,0
 40284d4:	18c79204 	addi	r3,r3,7752
 40284d8:	18c00017 	ldw	r3,0(r3)
 40284dc:	21800215 	stw	r6,8(r4)
 40284e0:	10ffc036 	bltu	r2,r3,40283e4 <__flash_rwdata_start+0xffff74bc>
 40284e4:	00800034 	movhi	r2,0
 40284e8:	1087a504 	addi	r2,r2,7828
 40284ec:	11400017 	ldw	r5,0(r2)
 40284f0:	8809883a 	mov	r4,r17
 40284f4:	40281d00 	call	40281d0 <_malloc_trim_r>
 40284f8:	003fba06 	br	40283e4 <__flash_rwdata_start+0xffff74bc>
 40284fc:	28c9883a 	add	r4,r5,r3
 4028500:	21000117 	ldw	r4,4(r4)
 4028504:	2100004c 	andi	r4,r4,1
 4028508:	2000391e 	bne	r4,zero,40285f0 <_free_r+0x2fc>
 402850c:	29c00217 	ldw	r7,8(r5)
 4028510:	29000317 	ldw	r4,12(r5)
 4028514:	1885883a 	add	r2,r3,r2
 4028518:	10c00054 	ori	r3,r2,1
 402851c:	39000315 	stw	r4,12(r7)
 4028520:	21c00215 	stw	r7,8(r4)
 4028524:	30c00115 	stw	r3,4(r6)
 4028528:	308d883a 	add	r6,r6,r2
 402852c:	30800015 	stw	r2,0(r6)
 4028530:	003fac06 	br	40283e4 <__flash_rwdata_start+0xffff74bc>
 4028534:	00c00504 	movi	r3,20
 4028538:	19401536 	bltu	r3,r5,4028590 <_free_r+0x29c>
 402853c:	28c01704 	addi	r3,r5,92
 4028540:	18c7883a 	add	r3,r3,r3
 4028544:	294016c4 	addi	r5,r5,91
 4028548:	003fb406 	br	402841c <__flash_rwdata_start+0xffff74f4>
 402854c:	280bd0ba 	srai	r5,r5,2
 4028550:	00c00044 	movi	r3,1
 4028554:	38800117 	ldw	r2,4(r7)
 4028558:	194a983a 	sll	r5,r3,r5
 402855c:	2007883a 	mov	r3,r4
 4028560:	2884b03a 	or	r2,r5,r2
 4028564:	38800115 	stw	r2,4(r7)
 4028568:	003fbb06 	br	4028458 <__flash_rwdata_start+0xffff7530>
 402856c:	21800515 	stw	r6,20(r4)
 4028570:	21800415 	stw	r6,16(r4)
 4028574:	10c00054 	ori	r3,r2,1
 4028578:	31c00315 	stw	r7,12(r6)
 402857c:	31c00215 	stw	r7,8(r6)
 4028580:	30c00115 	stw	r3,4(r6)
 4028584:	308d883a 	add	r6,r6,r2
 4028588:	30800015 	stw	r2,0(r6)
 402858c:	003f9506 	br	40283e4 <__flash_rwdata_start+0xffff74bc>
 4028590:	00c01504 	movi	r3,84
 4028594:	19400536 	bltu	r3,r5,40285ac <_free_r+0x2b8>
 4028598:	100ad33a 	srli	r5,r2,12
 402859c:	28c01bc4 	addi	r3,r5,111
 40285a0:	18c7883a 	add	r3,r3,r3
 40285a4:	29401b84 	addi	r5,r5,110
 40285a8:	003f9c06 	br	402841c <__flash_rwdata_start+0xffff74f4>
 40285ac:	00c05504 	movi	r3,340
 40285b0:	19400536 	bltu	r3,r5,40285c8 <_free_r+0x2d4>
 40285b4:	100ad3fa 	srli	r5,r2,15
 40285b8:	28c01e04 	addi	r3,r5,120
 40285bc:	18c7883a 	add	r3,r3,r3
 40285c0:	29401dc4 	addi	r5,r5,119
 40285c4:	003f9506 	br	402841c <__flash_rwdata_start+0xffff74f4>
 40285c8:	00c15504 	movi	r3,1364
 40285cc:	19400536 	bltu	r3,r5,40285e4 <_free_r+0x2f0>
 40285d0:	100ad4ba 	srli	r5,r2,18
 40285d4:	28c01f44 	addi	r3,r5,125
 40285d8:	18c7883a 	add	r3,r3,r3
 40285dc:	29401f04 	addi	r5,r5,124
 40285e0:	003f8e06 	br	402841c <__flash_rwdata_start+0xffff74f4>
 40285e4:	00c03f84 	movi	r3,254
 40285e8:	01401f84 	movi	r5,126
 40285ec:	003f8b06 	br	402841c <__flash_rwdata_start+0xffff74f4>
 40285f0:	10c00054 	ori	r3,r2,1
 40285f4:	30c00115 	stw	r3,4(r6)
 40285f8:	308d883a 	add	r6,r6,r2
 40285fc:	30800015 	stw	r2,0(r6)
 4028600:	003f7806 	br	40283e4 <__flash_rwdata_start+0xffff74bc>

04028604 <__sfvwrite_r>:
 4028604:	30800217 	ldw	r2,8(r6)
 4028608:	10006726 	beq	r2,zero,40287a8 <__sfvwrite_r+0x1a4>
 402860c:	28c0030b 	ldhu	r3,12(r5)
 4028610:	defff404 	addi	sp,sp,-48
 4028614:	dd400715 	stw	r21,28(sp)
 4028618:	dd000615 	stw	r20,24(sp)
 402861c:	dc000215 	stw	r16,8(sp)
 4028620:	dfc00b15 	stw	ra,44(sp)
 4028624:	df000a15 	stw	fp,40(sp)
 4028628:	ddc00915 	stw	r23,36(sp)
 402862c:	dd800815 	stw	r22,32(sp)
 4028630:	dcc00515 	stw	r19,20(sp)
 4028634:	dc800415 	stw	r18,16(sp)
 4028638:	dc400315 	stw	r17,12(sp)
 402863c:	1880020c 	andi	r2,r3,8
 4028640:	2821883a 	mov	r16,r5
 4028644:	202b883a 	mov	r21,r4
 4028648:	3029883a 	mov	r20,r6
 402864c:	10002726 	beq	r2,zero,40286ec <__sfvwrite_r+0xe8>
 4028650:	28800417 	ldw	r2,16(r5)
 4028654:	10002526 	beq	r2,zero,40286ec <__sfvwrite_r+0xe8>
 4028658:	1880008c 	andi	r2,r3,2
 402865c:	a4400017 	ldw	r17,0(r20)
 4028660:	10002a26 	beq	r2,zero,402870c <__sfvwrite_r+0x108>
 4028664:	05a00034 	movhi	r22,32768
 4028668:	0027883a 	mov	r19,zero
 402866c:	0025883a 	mov	r18,zero
 4028670:	b5bf0004 	addi	r22,r22,-1024
 4028674:	980d883a 	mov	r6,r19
 4028678:	a809883a 	mov	r4,r21
 402867c:	90004626 	beq	r18,zero,4028798 <__sfvwrite_r+0x194>
 4028680:	900f883a 	mov	r7,r18
 4028684:	b480022e 	bgeu	r22,r18,4028690 <__sfvwrite_r+0x8c>
 4028688:	01e00034 	movhi	r7,32768
 402868c:	39ff0004 	addi	r7,r7,-1024
 4028690:	80800917 	ldw	r2,36(r16)
 4028694:	81400717 	ldw	r5,28(r16)
 4028698:	103ee83a 	callr	r2
 402869c:	0080570e 	bge	zero,r2,40287fc <__sfvwrite_r+0x1f8>
 40286a0:	a0c00217 	ldw	r3,8(r20)
 40286a4:	98a7883a 	add	r19,r19,r2
 40286a8:	90a5c83a 	sub	r18,r18,r2
 40286ac:	1885c83a 	sub	r2,r3,r2
 40286b0:	a0800215 	stw	r2,8(r20)
 40286b4:	103fef1e 	bne	r2,zero,4028674 <__flash_rwdata_start+0xffff774c>
 40286b8:	0005883a 	mov	r2,zero
 40286bc:	dfc00b17 	ldw	ra,44(sp)
 40286c0:	df000a17 	ldw	fp,40(sp)
 40286c4:	ddc00917 	ldw	r23,36(sp)
 40286c8:	dd800817 	ldw	r22,32(sp)
 40286cc:	dd400717 	ldw	r21,28(sp)
 40286d0:	dd000617 	ldw	r20,24(sp)
 40286d4:	dcc00517 	ldw	r19,20(sp)
 40286d8:	dc800417 	ldw	r18,16(sp)
 40286dc:	dc400317 	ldw	r17,12(sp)
 40286e0:	dc000217 	ldw	r16,8(sp)
 40286e4:	dec00c04 	addi	sp,sp,48
 40286e8:	f800283a 	ret
 40286ec:	800b883a 	mov	r5,r16
 40286f0:	a809883a 	mov	r4,r21
 40286f4:	40261ac0 	call	40261ac <__swsetup_r>
 40286f8:	1000eb1e 	bne	r2,zero,4028aa8 <__sfvwrite_r+0x4a4>
 40286fc:	80c0030b 	ldhu	r3,12(r16)
 4028700:	a4400017 	ldw	r17,0(r20)
 4028704:	1880008c 	andi	r2,r3,2
 4028708:	103fd61e 	bne	r2,zero,4028664 <__flash_rwdata_start+0xffff773c>
 402870c:	1880004c 	andi	r2,r3,1
 4028710:	10003f1e 	bne	r2,zero,4028810 <__sfvwrite_r+0x20c>
 4028714:	0039883a 	mov	fp,zero
 4028718:	0025883a 	mov	r18,zero
 402871c:	90001a26 	beq	r18,zero,4028788 <__sfvwrite_r+0x184>
 4028720:	1880800c 	andi	r2,r3,512
 4028724:	84c00217 	ldw	r19,8(r16)
 4028728:	10002126 	beq	r2,zero,40287b0 <__sfvwrite_r+0x1ac>
 402872c:	982f883a 	mov	r23,r19
 4028730:	94c09336 	bltu	r18,r19,4028980 <__sfvwrite_r+0x37c>
 4028734:	1881200c 	andi	r2,r3,1152
 4028738:	10009e1e 	bne	r2,zero,40289b4 <__sfvwrite_r+0x3b0>
 402873c:	81000017 	ldw	r4,0(r16)
 4028740:	b80d883a 	mov	r6,r23
 4028744:	e00b883a 	mov	r5,fp
 4028748:	40299740 	call	4029974 <memmove>
 402874c:	80c00217 	ldw	r3,8(r16)
 4028750:	81000017 	ldw	r4,0(r16)
 4028754:	9005883a 	mov	r2,r18
 4028758:	1ce7c83a 	sub	r19,r3,r19
 402875c:	25cf883a 	add	r7,r4,r23
 4028760:	84c00215 	stw	r19,8(r16)
 4028764:	81c00015 	stw	r7,0(r16)
 4028768:	a0c00217 	ldw	r3,8(r20)
 402876c:	e0b9883a 	add	fp,fp,r2
 4028770:	90a5c83a 	sub	r18,r18,r2
 4028774:	18a7c83a 	sub	r19,r3,r2
 4028778:	a4c00215 	stw	r19,8(r20)
 402877c:	983fce26 	beq	r19,zero,40286b8 <__flash_rwdata_start+0xffff7790>
 4028780:	80c0030b 	ldhu	r3,12(r16)
 4028784:	903fe61e 	bne	r18,zero,4028720 <__flash_rwdata_start+0xffff77f8>
 4028788:	8f000017 	ldw	fp,0(r17)
 402878c:	8c800117 	ldw	r18,4(r17)
 4028790:	8c400204 	addi	r17,r17,8
 4028794:	003fe106 	br	402871c <__flash_rwdata_start+0xffff77f4>
 4028798:	8cc00017 	ldw	r19,0(r17)
 402879c:	8c800117 	ldw	r18,4(r17)
 40287a0:	8c400204 	addi	r17,r17,8
 40287a4:	003fb306 	br	4028674 <__flash_rwdata_start+0xffff774c>
 40287a8:	0005883a 	mov	r2,zero
 40287ac:	f800283a 	ret
 40287b0:	81000017 	ldw	r4,0(r16)
 40287b4:	80800417 	ldw	r2,16(r16)
 40287b8:	11005736 	bltu	r2,r4,4028918 <__sfvwrite_r+0x314>
 40287bc:	85c00517 	ldw	r23,20(r16)
 40287c0:	95c05536 	bltu	r18,r23,4028918 <__sfvwrite_r+0x314>
 40287c4:	00a00034 	movhi	r2,32768
 40287c8:	10bfffc4 	addi	r2,r2,-1
 40287cc:	9009883a 	mov	r4,r18
 40287d0:	1480012e 	bgeu	r2,r18,40287d8 <__sfvwrite_r+0x1d4>
 40287d4:	1009883a 	mov	r4,r2
 40287d8:	b80b883a 	mov	r5,r23
 40287dc:	40214b40 	call	40214b4 <__divsi3>
 40287e0:	15cf383a 	mul	r7,r2,r23
 40287e4:	81400717 	ldw	r5,28(r16)
 40287e8:	80800917 	ldw	r2,36(r16)
 40287ec:	e00d883a 	mov	r6,fp
 40287f0:	a809883a 	mov	r4,r21
 40287f4:	103ee83a 	callr	r2
 40287f8:	00bfdb16 	blt	zero,r2,4028768 <__flash_rwdata_start+0xffff7840>
 40287fc:	8080030b 	ldhu	r2,12(r16)
 4028800:	10801014 	ori	r2,r2,64
 4028804:	8080030d 	sth	r2,12(r16)
 4028808:	00bfffc4 	movi	r2,-1
 402880c:	003fab06 	br	40286bc <__flash_rwdata_start+0xffff7794>
 4028810:	0027883a 	mov	r19,zero
 4028814:	0011883a 	mov	r8,zero
 4028818:	0039883a 	mov	fp,zero
 402881c:	0025883a 	mov	r18,zero
 4028820:	90001f26 	beq	r18,zero,40288a0 <__sfvwrite_r+0x29c>
 4028824:	40005a26 	beq	r8,zero,4028990 <__sfvwrite_r+0x38c>
 4028828:	982d883a 	mov	r22,r19
 402882c:	94c0012e 	bgeu	r18,r19,4028834 <__sfvwrite_r+0x230>
 4028830:	902d883a 	mov	r22,r18
 4028834:	81000017 	ldw	r4,0(r16)
 4028838:	80800417 	ldw	r2,16(r16)
 402883c:	b02f883a 	mov	r23,r22
 4028840:	81c00517 	ldw	r7,20(r16)
 4028844:	1100032e 	bgeu	r2,r4,4028854 <__sfvwrite_r+0x250>
 4028848:	80c00217 	ldw	r3,8(r16)
 402884c:	38c7883a 	add	r3,r7,r3
 4028850:	1d801816 	blt	r3,r22,40288b4 <__sfvwrite_r+0x2b0>
 4028854:	b1c03e16 	blt	r22,r7,4028950 <__sfvwrite_r+0x34c>
 4028858:	80800917 	ldw	r2,36(r16)
 402885c:	81400717 	ldw	r5,28(r16)
 4028860:	e00d883a 	mov	r6,fp
 4028864:	da000115 	stw	r8,4(sp)
 4028868:	a809883a 	mov	r4,r21
 402886c:	103ee83a 	callr	r2
 4028870:	102f883a 	mov	r23,r2
 4028874:	da000117 	ldw	r8,4(sp)
 4028878:	00bfe00e 	bge	zero,r2,40287fc <__flash_rwdata_start+0xffff78d4>
 402887c:	9de7c83a 	sub	r19,r19,r23
 4028880:	98001f26 	beq	r19,zero,4028900 <__sfvwrite_r+0x2fc>
 4028884:	a0800217 	ldw	r2,8(r20)
 4028888:	e5f9883a 	add	fp,fp,r23
 402888c:	95e5c83a 	sub	r18,r18,r23
 4028890:	15efc83a 	sub	r23,r2,r23
 4028894:	a5c00215 	stw	r23,8(r20)
 4028898:	b83f8726 	beq	r23,zero,40286b8 <__flash_rwdata_start+0xffff7790>
 402889c:	903fe11e 	bne	r18,zero,4028824 <__flash_rwdata_start+0xffff78fc>
 40288a0:	8f000017 	ldw	fp,0(r17)
 40288a4:	8c800117 	ldw	r18,4(r17)
 40288a8:	0011883a 	mov	r8,zero
 40288ac:	8c400204 	addi	r17,r17,8
 40288b0:	003fdb06 	br	4028820 <__flash_rwdata_start+0xffff78f8>
 40288b4:	180d883a 	mov	r6,r3
 40288b8:	e00b883a 	mov	r5,fp
 40288bc:	da000115 	stw	r8,4(sp)
 40288c0:	d8c00015 	stw	r3,0(sp)
 40288c4:	40299740 	call	4029974 <memmove>
 40288c8:	d8c00017 	ldw	r3,0(sp)
 40288cc:	80800017 	ldw	r2,0(r16)
 40288d0:	800b883a 	mov	r5,r16
 40288d4:	a809883a 	mov	r4,r21
 40288d8:	10c5883a 	add	r2,r2,r3
 40288dc:	80800015 	stw	r2,0(r16)
 40288e0:	d8c00015 	stw	r3,0(sp)
 40288e4:	4027da40 	call	4027da4 <_fflush_r>
 40288e8:	d8c00017 	ldw	r3,0(sp)
 40288ec:	da000117 	ldw	r8,4(sp)
 40288f0:	103fc21e 	bne	r2,zero,40287fc <__flash_rwdata_start+0xffff78d4>
 40288f4:	182f883a 	mov	r23,r3
 40288f8:	9de7c83a 	sub	r19,r19,r23
 40288fc:	983fe11e 	bne	r19,zero,4028884 <__flash_rwdata_start+0xffff795c>
 4028900:	800b883a 	mov	r5,r16
 4028904:	a809883a 	mov	r4,r21
 4028908:	4027da40 	call	4027da4 <_fflush_r>
 402890c:	103fbb1e 	bne	r2,zero,40287fc <__flash_rwdata_start+0xffff78d4>
 4028910:	0011883a 	mov	r8,zero
 4028914:	003fdb06 	br	4028884 <__flash_rwdata_start+0xffff795c>
 4028918:	94c0012e 	bgeu	r18,r19,4028920 <__sfvwrite_r+0x31c>
 402891c:	9027883a 	mov	r19,r18
 4028920:	980d883a 	mov	r6,r19
 4028924:	e00b883a 	mov	r5,fp
 4028928:	40299740 	call	4029974 <memmove>
 402892c:	80800217 	ldw	r2,8(r16)
 4028930:	80c00017 	ldw	r3,0(r16)
 4028934:	14c5c83a 	sub	r2,r2,r19
 4028938:	1cc7883a 	add	r3,r3,r19
 402893c:	80800215 	stw	r2,8(r16)
 4028940:	80c00015 	stw	r3,0(r16)
 4028944:	10004326 	beq	r2,zero,4028a54 <__sfvwrite_r+0x450>
 4028948:	9805883a 	mov	r2,r19
 402894c:	003f8606 	br	4028768 <__flash_rwdata_start+0xffff7840>
 4028950:	b00d883a 	mov	r6,r22
 4028954:	e00b883a 	mov	r5,fp
 4028958:	da000115 	stw	r8,4(sp)
 402895c:	40299740 	call	4029974 <memmove>
 4028960:	80800217 	ldw	r2,8(r16)
 4028964:	80c00017 	ldw	r3,0(r16)
 4028968:	da000117 	ldw	r8,4(sp)
 402896c:	1585c83a 	sub	r2,r2,r22
 4028970:	1dad883a 	add	r22,r3,r22
 4028974:	80800215 	stw	r2,8(r16)
 4028978:	85800015 	stw	r22,0(r16)
 402897c:	003fbf06 	br	402887c <__flash_rwdata_start+0xffff7954>
 4028980:	81000017 	ldw	r4,0(r16)
 4028984:	9027883a 	mov	r19,r18
 4028988:	902f883a 	mov	r23,r18
 402898c:	003f6c06 	br	4028740 <__flash_rwdata_start+0xffff7818>
 4028990:	900d883a 	mov	r6,r18
 4028994:	01400284 	movi	r5,10
 4028998:	e009883a 	mov	r4,fp
 402899c:	40297480 	call	4029748 <memchr>
 40289a0:	10003e26 	beq	r2,zero,4028a9c <__sfvwrite_r+0x498>
 40289a4:	10800044 	addi	r2,r2,1
 40289a8:	1727c83a 	sub	r19,r2,fp
 40289ac:	02000044 	movi	r8,1
 40289b0:	003f9d06 	br	4028828 <__flash_rwdata_start+0xffff7900>
 40289b4:	80800517 	ldw	r2,20(r16)
 40289b8:	81400417 	ldw	r5,16(r16)
 40289bc:	81c00017 	ldw	r7,0(r16)
 40289c0:	10a7883a 	add	r19,r2,r2
 40289c4:	9885883a 	add	r2,r19,r2
 40289c8:	1026d7fa 	srli	r19,r2,31
 40289cc:	396dc83a 	sub	r22,r7,r5
 40289d0:	b1000044 	addi	r4,r22,1
 40289d4:	9885883a 	add	r2,r19,r2
 40289d8:	1027d07a 	srai	r19,r2,1
 40289dc:	2485883a 	add	r2,r4,r18
 40289e0:	980d883a 	mov	r6,r19
 40289e4:	9880022e 	bgeu	r19,r2,40289f0 <__sfvwrite_r+0x3ec>
 40289e8:	1027883a 	mov	r19,r2
 40289ec:	100d883a 	mov	r6,r2
 40289f0:	18c1000c 	andi	r3,r3,1024
 40289f4:	18001c26 	beq	r3,zero,4028a68 <__sfvwrite_r+0x464>
 40289f8:	300b883a 	mov	r5,r6
 40289fc:	a809883a 	mov	r4,r21
 4028a00:	4028f3c0 	call	4028f3c <_malloc_r>
 4028a04:	102f883a 	mov	r23,r2
 4028a08:	10002926 	beq	r2,zero,4028ab0 <__sfvwrite_r+0x4ac>
 4028a0c:	81400417 	ldw	r5,16(r16)
 4028a10:	b00d883a 	mov	r6,r22
 4028a14:	1009883a 	mov	r4,r2
 4028a18:	402982c0 	call	402982c <memcpy>
 4028a1c:	8080030b 	ldhu	r2,12(r16)
 4028a20:	00fedfc4 	movi	r3,-1153
 4028a24:	10c4703a 	and	r2,r2,r3
 4028a28:	10802014 	ori	r2,r2,128
 4028a2c:	8080030d 	sth	r2,12(r16)
 4028a30:	bd89883a 	add	r4,r23,r22
 4028a34:	9d8fc83a 	sub	r7,r19,r22
 4028a38:	85c00415 	stw	r23,16(r16)
 4028a3c:	84c00515 	stw	r19,20(r16)
 4028a40:	81000015 	stw	r4,0(r16)
 4028a44:	9027883a 	mov	r19,r18
 4028a48:	81c00215 	stw	r7,8(r16)
 4028a4c:	902f883a 	mov	r23,r18
 4028a50:	003f3b06 	br	4028740 <__flash_rwdata_start+0xffff7818>
 4028a54:	800b883a 	mov	r5,r16
 4028a58:	a809883a 	mov	r4,r21
 4028a5c:	4027da40 	call	4027da4 <_fflush_r>
 4028a60:	103fb926 	beq	r2,zero,4028948 <__flash_rwdata_start+0xffff7a20>
 4028a64:	003f6506 	br	40287fc <__flash_rwdata_start+0xffff78d4>
 4028a68:	a809883a 	mov	r4,r21
 4028a6c:	402abf40 	call	402abf4 <_realloc_r>
 4028a70:	102f883a 	mov	r23,r2
 4028a74:	103fee1e 	bne	r2,zero,4028a30 <__flash_rwdata_start+0xffff7b08>
 4028a78:	81400417 	ldw	r5,16(r16)
 4028a7c:	a809883a 	mov	r4,r21
 4028a80:	40282f40 	call	40282f4 <_free_r>
 4028a84:	8080030b 	ldhu	r2,12(r16)
 4028a88:	00ffdfc4 	movi	r3,-129
 4028a8c:	1884703a 	and	r2,r3,r2
 4028a90:	00c00304 	movi	r3,12
 4028a94:	a8c00015 	stw	r3,0(r21)
 4028a98:	003f5906 	br	4028800 <__flash_rwdata_start+0xffff78d8>
 4028a9c:	94c00044 	addi	r19,r18,1
 4028aa0:	02000044 	movi	r8,1
 4028aa4:	003f6006 	br	4028828 <__flash_rwdata_start+0xffff7900>
 4028aa8:	00bfffc4 	movi	r2,-1
 4028aac:	003f0306 	br	40286bc <__flash_rwdata_start+0xffff7794>
 4028ab0:	00800304 	movi	r2,12
 4028ab4:	a8800015 	stw	r2,0(r21)
 4028ab8:	8080030b 	ldhu	r2,12(r16)
 4028abc:	003f5006 	br	4028800 <__flash_rwdata_start+0xffff78d8>

04028ac0 <_fwalk>:
 4028ac0:	defff704 	addi	sp,sp,-36
 4028ac4:	dd000415 	stw	r20,16(sp)
 4028ac8:	dfc00815 	stw	ra,32(sp)
 4028acc:	ddc00715 	stw	r23,28(sp)
 4028ad0:	dd800615 	stw	r22,24(sp)
 4028ad4:	dd400515 	stw	r21,20(sp)
 4028ad8:	dcc00315 	stw	r19,12(sp)
 4028adc:	dc800215 	stw	r18,8(sp)
 4028ae0:	dc400115 	stw	r17,4(sp)
 4028ae4:	dc000015 	stw	r16,0(sp)
 4028ae8:	2500b804 	addi	r20,r4,736
 4028aec:	a0002326 	beq	r20,zero,4028b7c <_fwalk+0xbc>
 4028af0:	282b883a 	mov	r21,r5
 4028af4:	002f883a 	mov	r23,zero
 4028af8:	05800044 	movi	r22,1
 4028afc:	04ffffc4 	movi	r19,-1
 4028b00:	a4400117 	ldw	r17,4(r20)
 4028b04:	a4800217 	ldw	r18,8(r20)
 4028b08:	8c7fffc4 	addi	r17,r17,-1
 4028b0c:	88000d16 	blt	r17,zero,4028b44 <_fwalk+0x84>
 4028b10:	94000304 	addi	r16,r18,12
 4028b14:	94800384 	addi	r18,r18,14
 4028b18:	8080000b 	ldhu	r2,0(r16)
 4028b1c:	8c7fffc4 	addi	r17,r17,-1
 4028b20:	813ffd04 	addi	r4,r16,-12
 4028b24:	b080042e 	bgeu	r22,r2,4028b38 <_fwalk+0x78>
 4028b28:	9080000f 	ldh	r2,0(r18)
 4028b2c:	14c00226 	beq	r2,r19,4028b38 <_fwalk+0x78>
 4028b30:	a83ee83a 	callr	r21
 4028b34:	b8aeb03a 	or	r23,r23,r2
 4028b38:	84001a04 	addi	r16,r16,104
 4028b3c:	94801a04 	addi	r18,r18,104
 4028b40:	8cfff51e 	bne	r17,r19,4028b18 <__flash_rwdata_start+0xffff7bf0>
 4028b44:	a5000017 	ldw	r20,0(r20)
 4028b48:	a03fed1e 	bne	r20,zero,4028b00 <__flash_rwdata_start+0xffff7bd8>
 4028b4c:	b805883a 	mov	r2,r23
 4028b50:	dfc00817 	ldw	ra,32(sp)
 4028b54:	ddc00717 	ldw	r23,28(sp)
 4028b58:	dd800617 	ldw	r22,24(sp)
 4028b5c:	dd400517 	ldw	r21,20(sp)
 4028b60:	dd000417 	ldw	r20,16(sp)
 4028b64:	dcc00317 	ldw	r19,12(sp)
 4028b68:	dc800217 	ldw	r18,8(sp)
 4028b6c:	dc400117 	ldw	r17,4(sp)
 4028b70:	dc000017 	ldw	r16,0(sp)
 4028b74:	dec00904 	addi	sp,sp,36
 4028b78:	f800283a 	ret
 4028b7c:	002f883a 	mov	r23,zero
 4028b80:	003ff206 	br	4028b4c <__flash_rwdata_start+0xffff7c24>

04028b84 <_fwalk_reent>:
 4028b84:	defff704 	addi	sp,sp,-36
 4028b88:	dd000415 	stw	r20,16(sp)
 4028b8c:	dfc00815 	stw	ra,32(sp)
 4028b90:	ddc00715 	stw	r23,28(sp)
 4028b94:	dd800615 	stw	r22,24(sp)
 4028b98:	dd400515 	stw	r21,20(sp)
 4028b9c:	dcc00315 	stw	r19,12(sp)
 4028ba0:	dc800215 	stw	r18,8(sp)
 4028ba4:	dc400115 	stw	r17,4(sp)
 4028ba8:	dc000015 	stw	r16,0(sp)
 4028bac:	2500b804 	addi	r20,r4,736
 4028bb0:	a0002326 	beq	r20,zero,4028c40 <_fwalk_reent+0xbc>
 4028bb4:	282b883a 	mov	r21,r5
 4028bb8:	2027883a 	mov	r19,r4
 4028bbc:	002f883a 	mov	r23,zero
 4028bc0:	05800044 	movi	r22,1
 4028bc4:	04bfffc4 	movi	r18,-1
 4028bc8:	a4400117 	ldw	r17,4(r20)
 4028bcc:	a4000217 	ldw	r16,8(r20)
 4028bd0:	8c7fffc4 	addi	r17,r17,-1
 4028bd4:	88000c16 	blt	r17,zero,4028c08 <_fwalk_reent+0x84>
 4028bd8:	84000304 	addi	r16,r16,12
 4028bdc:	8080000b 	ldhu	r2,0(r16)
 4028be0:	8c7fffc4 	addi	r17,r17,-1
 4028be4:	817ffd04 	addi	r5,r16,-12
 4028be8:	b080052e 	bgeu	r22,r2,4028c00 <_fwalk_reent+0x7c>
 4028bec:	8080008f 	ldh	r2,2(r16)
 4028bf0:	9809883a 	mov	r4,r19
 4028bf4:	14800226 	beq	r2,r18,4028c00 <_fwalk_reent+0x7c>
 4028bf8:	a83ee83a 	callr	r21
 4028bfc:	b8aeb03a 	or	r23,r23,r2
 4028c00:	84001a04 	addi	r16,r16,104
 4028c04:	8cbff51e 	bne	r17,r18,4028bdc <__flash_rwdata_start+0xffff7cb4>
 4028c08:	a5000017 	ldw	r20,0(r20)
 4028c0c:	a03fee1e 	bne	r20,zero,4028bc8 <__flash_rwdata_start+0xffff7ca0>
 4028c10:	b805883a 	mov	r2,r23
 4028c14:	dfc00817 	ldw	ra,32(sp)
 4028c18:	ddc00717 	ldw	r23,28(sp)
 4028c1c:	dd800617 	ldw	r22,24(sp)
 4028c20:	dd400517 	ldw	r21,20(sp)
 4028c24:	dd000417 	ldw	r20,16(sp)
 4028c28:	dcc00317 	ldw	r19,12(sp)
 4028c2c:	dc800217 	ldw	r18,8(sp)
 4028c30:	dc400117 	ldw	r17,4(sp)
 4028c34:	dc000017 	ldw	r16,0(sp)
 4028c38:	dec00904 	addi	sp,sp,36
 4028c3c:	f800283a 	ret
 4028c40:	002f883a 	mov	r23,zero
 4028c44:	003ff206 	br	4028c10 <__flash_rwdata_start+0xffff7ce8>

04028c48 <_gettimeofday_r>:
 4028c48:	defffd04 	addi	sp,sp,-12
 4028c4c:	2805883a 	mov	r2,r5
 4028c50:	dc000015 	stw	r16,0(sp)
 4028c54:	04000034 	movhi	r16,0
 4028c58:	dc400115 	stw	r17,4(sp)
 4028c5c:	84079f04 	addi	r16,r16,7804
 4028c60:	2023883a 	mov	r17,r4
 4028c64:	300b883a 	mov	r5,r6
 4028c68:	1009883a 	mov	r4,r2
 4028c6c:	dfc00215 	stw	ra,8(sp)
 4028c70:	80000015 	stw	zero,0(r16)
 4028c74:	402e11c0 	call	402e11c <gettimeofday>
 4028c78:	00ffffc4 	movi	r3,-1
 4028c7c:	10c00526 	beq	r2,r3,4028c94 <_gettimeofday_r+0x4c>
 4028c80:	dfc00217 	ldw	ra,8(sp)
 4028c84:	dc400117 	ldw	r17,4(sp)
 4028c88:	dc000017 	ldw	r16,0(sp)
 4028c8c:	dec00304 	addi	sp,sp,12
 4028c90:	f800283a 	ret
 4028c94:	80c00017 	ldw	r3,0(r16)
 4028c98:	183ff926 	beq	r3,zero,4028c80 <__flash_rwdata_start+0xffff7d58>
 4028c9c:	88c00015 	stw	r3,0(r17)
 4028ca0:	003ff706 	br	4028c80 <__flash_rwdata_start+0xffff7d58>

04028ca4 <_setlocale_r>:
 4028ca4:	30001b26 	beq	r6,zero,4028d14 <_setlocale_r+0x70>
 4028ca8:	01400034 	movhi	r5,0
 4028cac:	defffe04 	addi	sp,sp,-8
 4028cb0:	29407904 	addi	r5,r5,484
 4028cb4:	3009883a 	mov	r4,r6
 4028cb8:	dc000015 	stw	r16,0(sp)
 4028cbc:	dfc00115 	stw	ra,4(sp)
 4028cc0:	3021883a 	mov	r16,r6
 4028cc4:	402b2e80 	call	402b2e8 <strcmp>
 4028cc8:	1000061e 	bne	r2,zero,4028ce4 <_setlocale_r+0x40>
 4028ccc:	00800034 	movhi	r2,0
 4028cd0:	10805b04 	addi	r2,r2,364
 4028cd4:	dfc00117 	ldw	ra,4(sp)
 4028cd8:	dc000017 	ldw	r16,0(sp)
 4028cdc:	dec00204 	addi	sp,sp,8
 4028ce0:	f800283a 	ret
 4028ce4:	01400034 	movhi	r5,0
 4028ce8:	29405b04 	addi	r5,r5,364
 4028cec:	8009883a 	mov	r4,r16
 4028cf0:	402b2e80 	call	402b2e8 <strcmp>
 4028cf4:	103ff526 	beq	r2,zero,4028ccc <__flash_rwdata_start+0xffff7da4>
 4028cf8:	01400034 	movhi	r5,0
 4028cfc:	29406504 	addi	r5,r5,404
 4028d00:	8009883a 	mov	r4,r16
 4028d04:	402b2e80 	call	402b2e8 <strcmp>
 4028d08:	103ff026 	beq	r2,zero,4028ccc <__flash_rwdata_start+0xffff7da4>
 4028d0c:	0005883a 	mov	r2,zero
 4028d10:	003ff006 	br	4028cd4 <__flash_rwdata_start+0xffff7dac>
 4028d14:	00800034 	movhi	r2,0
 4028d18:	10805b04 	addi	r2,r2,364
 4028d1c:	f800283a 	ret

04028d20 <__locale_charset>:
 4028d20:	00800034 	movhi	r2,0
 4028d24:	1081f304 	addi	r2,r2,1996
 4028d28:	f800283a 	ret

04028d2c <__locale_mb_cur_max>:
 4028d2c:	00800034 	movhi	r2,0
 4028d30:	10879004 	addi	r2,r2,7744
 4028d34:	10800017 	ldw	r2,0(r2)
 4028d38:	f800283a 	ret

04028d3c <__locale_msgcharset>:
 4028d3c:	00800034 	movhi	r2,0
 4028d40:	1081eb04 	addi	r2,r2,1964
 4028d44:	f800283a 	ret

04028d48 <__locale_cjk_lang>:
 4028d48:	0005883a 	mov	r2,zero
 4028d4c:	f800283a 	ret

04028d50 <_localeconv_r>:
 4028d50:	00800034 	movhi	r2,0
 4028d54:	1081fb04 	addi	r2,r2,2028
 4028d58:	f800283a 	ret

04028d5c <setlocale>:
 4028d5c:	00800034 	movhi	r2,0
 4028d60:	10878f04 	addi	r2,r2,7740
 4028d64:	280d883a 	mov	r6,r5
 4028d68:	200b883a 	mov	r5,r4
 4028d6c:	11000017 	ldw	r4,0(r2)
 4028d70:	4028ca41 	jmpi	4028ca4 <_setlocale_r>

04028d74 <localeconv>:
 4028d74:	00800034 	movhi	r2,0
 4028d78:	1081fb04 	addi	r2,r2,2028
 4028d7c:	f800283a 	ret

04028d80 <__smakebuf_r>:
 4028d80:	2880030b 	ldhu	r2,12(r5)
 4028d84:	10c0008c 	andi	r3,r2,2
 4028d88:	1800411e 	bne	r3,zero,4028e90 <__smakebuf_r+0x110>
 4028d8c:	deffec04 	addi	sp,sp,-80
 4028d90:	dc000f15 	stw	r16,60(sp)
 4028d94:	2821883a 	mov	r16,r5
 4028d98:	2940038f 	ldh	r5,14(r5)
 4028d9c:	dc401015 	stw	r17,64(sp)
 4028da0:	dfc01315 	stw	ra,76(sp)
 4028da4:	dcc01215 	stw	r19,72(sp)
 4028da8:	dc801115 	stw	r18,68(sp)
 4028dac:	2023883a 	mov	r17,r4
 4028db0:	28001c16 	blt	r5,zero,4028e24 <__smakebuf_r+0xa4>
 4028db4:	d80d883a 	mov	r6,sp
 4028db8:	402ce900 	call	402ce90 <_fstat_r>
 4028dbc:	10001816 	blt	r2,zero,4028e20 <__smakebuf_r+0xa0>
 4028dc0:	d8800117 	ldw	r2,4(sp)
 4028dc4:	00e00014 	movui	r3,32768
 4028dc8:	10bc000c 	andi	r2,r2,61440
 4028dcc:	14c80020 	cmpeqi	r19,r2,8192
 4028dd0:	10c03726 	beq	r2,r3,4028eb0 <__smakebuf_r+0x130>
 4028dd4:	80c0030b 	ldhu	r3,12(r16)
 4028dd8:	18c20014 	ori	r3,r3,2048
 4028ddc:	80c0030d 	sth	r3,12(r16)
 4028de0:	00c80004 	movi	r3,8192
 4028de4:	10c0521e 	bne	r2,r3,4028f30 <__smakebuf_r+0x1b0>
 4028de8:	8140038f 	ldh	r5,14(r16)
 4028dec:	8809883a 	mov	r4,r17
 4028df0:	402ceec0 	call	402ceec <_isatty_r>
 4028df4:	10004c26 	beq	r2,zero,4028f28 <__smakebuf_r+0x1a8>
 4028df8:	8080030b 	ldhu	r2,12(r16)
 4028dfc:	80c010c4 	addi	r3,r16,67
 4028e00:	80c00015 	stw	r3,0(r16)
 4028e04:	10800054 	ori	r2,r2,1
 4028e08:	8080030d 	sth	r2,12(r16)
 4028e0c:	00800044 	movi	r2,1
 4028e10:	80c00415 	stw	r3,16(r16)
 4028e14:	80800515 	stw	r2,20(r16)
 4028e18:	04810004 	movi	r18,1024
 4028e1c:	00000706 	br	4028e3c <__smakebuf_r+0xbc>
 4028e20:	8080030b 	ldhu	r2,12(r16)
 4028e24:	10c0200c 	andi	r3,r2,128
 4028e28:	18001f1e 	bne	r3,zero,4028ea8 <__smakebuf_r+0x128>
 4028e2c:	04810004 	movi	r18,1024
 4028e30:	10820014 	ori	r2,r2,2048
 4028e34:	8080030d 	sth	r2,12(r16)
 4028e38:	0027883a 	mov	r19,zero
 4028e3c:	900b883a 	mov	r5,r18
 4028e40:	8809883a 	mov	r4,r17
 4028e44:	4028f3c0 	call	4028f3c <_malloc_r>
 4028e48:	10002c26 	beq	r2,zero,4028efc <__smakebuf_r+0x17c>
 4028e4c:	80c0030b 	ldhu	r3,12(r16)
 4028e50:	010100b4 	movhi	r4,1026
 4028e54:	211f8e04 	addi	r4,r4,32312
 4028e58:	89000f15 	stw	r4,60(r17)
 4028e5c:	18c02014 	ori	r3,r3,128
 4028e60:	80c0030d 	sth	r3,12(r16)
 4028e64:	80800015 	stw	r2,0(r16)
 4028e68:	80800415 	stw	r2,16(r16)
 4028e6c:	84800515 	stw	r18,20(r16)
 4028e70:	98001a1e 	bne	r19,zero,4028edc <__smakebuf_r+0x15c>
 4028e74:	dfc01317 	ldw	ra,76(sp)
 4028e78:	dcc01217 	ldw	r19,72(sp)
 4028e7c:	dc801117 	ldw	r18,68(sp)
 4028e80:	dc401017 	ldw	r17,64(sp)
 4028e84:	dc000f17 	ldw	r16,60(sp)
 4028e88:	dec01404 	addi	sp,sp,80
 4028e8c:	f800283a 	ret
 4028e90:	288010c4 	addi	r2,r5,67
 4028e94:	28800015 	stw	r2,0(r5)
 4028e98:	28800415 	stw	r2,16(r5)
 4028e9c:	00800044 	movi	r2,1
 4028ea0:	28800515 	stw	r2,20(r5)
 4028ea4:	f800283a 	ret
 4028ea8:	04801004 	movi	r18,64
 4028eac:	003fe006 	br	4028e30 <__flash_rwdata_start+0xffff7f08>
 4028eb0:	81000a17 	ldw	r4,40(r16)
 4028eb4:	00c100f4 	movhi	r3,1027
 4028eb8:	18eca104 	addi	r3,r3,-19836
 4028ebc:	20ffc51e 	bne	r4,r3,4028dd4 <__flash_rwdata_start+0xffff7eac>
 4028ec0:	8080030b 	ldhu	r2,12(r16)
 4028ec4:	04810004 	movi	r18,1024
 4028ec8:	84801315 	stw	r18,76(r16)
 4028ecc:	1484b03a 	or	r2,r2,r18
 4028ed0:	8080030d 	sth	r2,12(r16)
 4028ed4:	0027883a 	mov	r19,zero
 4028ed8:	003fd806 	br	4028e3c <__flash_rwdata_start+0xffff7f14>
 4028edc:	8140038f 	ldh	r5,14(r16)
 4028ee0:	8809883a 	mov	r4,r17
 4028ee4:	402ceec0 	call	402ceec <_isatty_r>
 4028ee8:	103fe226 	beq	r2,zero,4028e74 <__flash_rwdata_start+0xffff7f4c>
 4028eec:	8080030b 	ldhu	r2,12(r16)
 4028ef0:	10800054 	ori	r2,r2,1
 4028ef4:	8080030d 	sth	r2,12(r16)
 4028ef8:	003fde06 	br	4028e74 <__flash_rwdata_start+0xffff7f4c>
 4028efc:	8080030b 	ldhu	r2,12(r16)
 4028f00:	10c0800c 	andi	r3,r2,512
 4028f04:	183fdb1e 	bne	r3,zero,4028e74 <__flash_rwdata_start+0xffff7f4c>
 4028f08:	10800094 	ori	r2,r2,2
 4028f0c:	80c010c4 	addi	r3,r16,67
 4028f10:	8080030d 	sth	r2,12(r16)
 4028f14:	00800044 	movi	r2,1
 4028f18:	80c00015 	stw	r3,0(r16)
 4028f1c:	80c00415 	stw	r3,16(r16)
 4028f20:	80800515 	stw	r2,20(r16)
 4028f24:	003fd306 	br	4028e74 <__flash_rwdata_start+0xffff7f4c>
 4028f28:	04810004 	movi	r18,1024
 4028f2c:	003fc306 	br	4028e3c <__flash_rwdata_start+0xffff7f14>
 4028f30:	0027883a 	mov	r19,zero
 4028f34:	04810004 	movi	r18,1024
 4028f38:	003fc006 	br	4028e3c <__flash_rwdata_start+0xffff7f14>

04028f3c <_malloc_r>:
 4028f3c:	defff504 	addi	sp,sp,-44
 4028f40:	dc800315 	stw	r18,12(sp)
 4028f44:	dfc00a15 	stw	ra,40(sp)
 4028f48:	df000915 	stw	fp,36(sp)
 4028f4c:	ddc00815 	stw	r23,32(sp)
 4028f50:	dd800715 	stw	r22,28(sp)
 4028f54:	dd400615 	stw	r21,24(sp)
 4028f58:	dd000515 	stw	r20,20(sp)
 4028f5c:	dcc00415 	stw	r19,16(sp)
 4028f60:	dc400215 	stw	r17,8(sp)
 4028f64:	dc000115 	stw	r16,4(sp)
 4028f68:	288002c4 	addi	r2,r5,11
 4028f6c:	00c00584 	movi	r3,22
 4028f70:	2025883a 	mov	r18,r4
 4028f74:	18807f2e 	bgeu	r3,r2,4029174 <_malloc_r+0x238>
 4028f78:	047ffe04 	movi	r17,-8
 4028f7c:	1462703a 	and	r17,r2,r17
 4028f80:	8800a316 	blt	r17,zero,4029210 <_malloc_r+0x2d4>
 4028f84:	8940a236 	bltu	r17,r5,4029210 <_malloc_r+0x2d4>
 4028f88:	402e7e80 	call	402e7e8 <__malloc_lock>
 4028f8c:	00807dc4 	movi	r2,503
 4028f90:	1441e92e 	bgeu	r2,r17,4029738 <_malloc_r+0x7fc>
 4028f94:	8804d27a 	srli	r2,r17,9
 4028f98:	1000a126 	beq	r2,zero,4029220 <_malloc_r+0x2e4>
 4028f9c:	00c00104 	movi	r3,4
 4028fa0:	18811e36 	bltu	r3,r2,402941c <_malloc_r+0x4e0>
 4028fa4:	8804d1ba 	srli	r2,r17,6
 4028fa8:	12000e44 	addi	r8,r2,57
 4028fac:	11c00e04 	addi	r7,r2,56
 4028fb0:	4209883a 	add	r4,r8,r8
 4028fb4:	04c00034 	movhi	r19,0
 4028fb8:	2109883a 	add	r4,r4,r4
 4028fbc:	9cc20904 	addi	r19,r19,2084
 4028fc0:	2109883a 	add	r4,r4,r4
 4028fc4:	9909883a 	add	r4,r19,r4
 4028fc8:	24000117 	ldw	r16,4(r4)
 4028fcc:	213ffe04 	addi	r4,r4,-8
 4028fd0:	24009726 	beq	r4,r16,4029230 <_malloc_r+0x2f4>
 4028fd4:	80800117 	ldw	r2,4(r16)
 4028fd8:	01bfff04 	movi	r6,-4
 4028fdc:	014003c4 	movi	r5,15
 4028fe0:	1184703a 	and	r2,r2,r6
 4028fe4:	1447c83a 	sub	r3,r2,r17
 4028fe8:	28c00716 	blt	r5,r3,4029008 <_malloc_r+0xcc>
 4028fec:	1800920e 	bge	r3,zero,4029238 <_malloc_r+0x2fc>
 4028ff0:	84000317 	ldw	r16,12(r16)
 4028ff4:	24008e26 	beq	r4,r16,4029230 <_malloc_r+0x2f4>
 4028ff8:	80800117 	ldw	r2,4(r16)
 4028ffc:	1184703a 	and	r2,r2,r6
 4029000:	1447c83a 	sub	r3,r2,r17
 4029004:	28fff90e 	bge	r5,r3,4028fec <__flash_rwdata_start+0xffff80c4>
 4029008:	3809883a 	mov	r4,r7
 402900c:	01800034 	movhi	r6,0
 4029010:	9c000417 	ldw	r16,16(r19)
 4029014:	31820904 	addi	r6,r6,2084
 4029018:	32000204 	addi	r8,r6,8
 402901c:	82013426 	beq	r16,r8,40294f0 <_malloc_r+0x5b4>
 4029020:	80c00117 	ldw	r3,4(r16)
 4029024:	00bfff04 	movi	r2,-4
 4029028:	188e703a 	and	r7,r3,r2
 402902c:	3c45c83a 	sub	r2,r7,r17
 4029030:	00c003c4 	movi	r3,15
 4029034:	18811f16 	blt	r3,r2,40294b4 <_malloc_r+0x578>
 4029038:	32000515 	stw	r8,20(r6)
 402903c:	32000415 	stw	r8,16(r6)
 4029040:	10007f0e 	bge	r2,zero,4029240 <_malloc_r+0x304>
 4029044:	00807fc4 	movi	r2,511
 4029048:	11c0fd36 	bltu	r2,r7,4029440 <_malloc_r+0x504>
 402904c:	3806d0fa 	srli	r3,r7,3
 4029050:	01c00044 	movi	r7,1
 4029054:	30800117 	ldw	r2,4(r6)
 4029058:	19400044 	addi	r5,r3,1
 402905c:	294b883a 	add	r5,r5,r5
 4029060:	1807d0ba 	srai	r3,r3,2
 4029064:	294b883a 	add	r5,r5,r5
 4029068:	294b883a 	add	r5,r5,r5
 402906c:	298b883a 	add	r5,r5,r6
 4029070:	38c6983a 	sll	r3,r7,r3
 4029074:	29c00017 	ldw	r7,0(r5)
 4029078:	2a7ffe04 	addi	r9,r5,-8
 402907c:	1886b03a 	or	r3,r3,r2
 4029080:	82400315 	stw	r9,12(r16)
 4029084:	81c00215 	stw	r7,8(r16)
 4029088:	30c00115 	stw	r3,4(r6)
 402908c:	2c000015 	stw	r16,0(r5)
 4029090:	3c000315 	stw	r16,12(r7)
 4029094:	2005d0ba 	srai	r2,r4,2
 4029098:	01400044 	movi	r5,1
 402909c:	288a983a 	sll	r5,r5,r2
 40290a0:	19406f36 	bltu	r3,r5,4029260 <_malloc_r+0x324>
 40290a4:	28c4703a 	and	r2,r5,r3
 40290a8:	10000a1e 	bne	r2,zero,40290d4 <_malloc_r+0x198>
 40290ac:	00bfff04 	movi	r2,-4
 40290b0:	294b883a 	add	r5,r5,r5
 40290b4:	2088703a 	and	r4,r4,r2
 40290b8:	28c4703a 	and	r2,r5,r3
 40290bc:	21000104 	addi	r4,r4,4
 40290c0:	1000041e 	bne	r2,zero,40290d4 <_malloc_r+0x198>
 40290c4:	294b883a 	add	r5,r5,r5
 40290c8:	28c4703a 	and	r2,r5,r3
 40290cc:	21000104 	addi	r4,r4,4
 40290d0:	103ffc26 	beq	r2,zero,40290c4 <__flash_rwdata_start+0xffff819c>
 40290d4:	02bfff04 	movi	r10,-4
 40290d8:	024003c4 	movi	r9,15
 40290dc:	21800044 	addi	r6,r4,1
 40290e0:	318d883a 	add	r6,r6,r6
 40290e4:	318d883a 	add	r6,r6,r6
 40290e8:	318d883a 	add	r6,r6,r6
 40290ec:	998d883a 	add	r6,r19,r6
 40290f0:	333ffe04 	addi	r12,r6,-8
 40290f4:	2017883a 	mov	r11,r4
 40290f8:	31800104 	addi	r6,r6,4
 40290fc:	34000017 	ldw	r16,0(r6)
 4029100:	31fffd04 	addi	r7,r6,-12
 4029104:	81c0041e 	bne	r16,r7,4029118 <_malloc_r+0x1dc>
 4029108:	0000fb06 	br	40294f8 <_malloc_r+0x5bc>
 402910c:	1801030e 	bge	r3,zero,402951c <_malloc_r+0x5e0>
 4029110:	84000317 	ldw	r16,12(r16)
 4029114:	81c0f826 	beq	r16,r7,40294f8 <_malloc_r+0x5bc>
 4029118:	80800117 	ldw	r2,4(r16)
 402911c:	1284703a 	and	r2,r2,r10
 4029120:	1447c83a 	sub	r3,r2,r17
 4029124:	48fff90e 	bge	r9,r3,402910c <__flash_rwdata_start+0xffff81e4>
 4029128:	80800317 	ldw	r2,12(r16)
 402912c:	81000217 	ldw	r4,8(r16)
 4029130:	89400054 	ori	r5,r17,1
 4029134:	81400115 	stw	r5,4(r16)
 4029138:	20800315 	stw	r2,12(r4)
 402913c:	11000215 	stw	r4,8(r2)
 4029140:	8463883a 	add	r17,r16,r17
 4029144:	9c400515 	stw	r17,20(r19)
 4029148:	9c400415 	stw	r17,16(r19)
 402914c:	18800054 	ori	r2,r3,1
 4029150:	88800115 	stw	r2,4(r17)
 4029154:	8a000315 	stw	r8,12(r17)
 4029158:	8a000215 	stw	r8,8(r17)
 402915c:	88e3883a 	add	r17,r17,r3
 4029160:	88c00015 	stw	r3,0(r17)
 4029164:	9009883a 	mov	r4,r18
 4029168:	402e80c0 	call	402e80c <__malloc_unlock>
 402916c:	80800204 	addi	r2,r16,8
 4029170:	00001b06 	br	40291e0 <_malloc_r+0x2a4>
 4029174:	04400404 	movi	r17,16
 4029178:	89402536 	bltu	r17,r5,4029210 <_malloc_r+0x2d4>
 402917c:	402e7e80 	call	402e7e8 <__malloc_lock>
 4029180:	00800184 	movi	r2,6
 4029184:	01000084 	movi	r4,2
 4029188:	04c00034 	movhi	r19,0
 402918c:	1085883a 	add	r2,r2,r2
 4029190:	9cc20904 	addi	r19,r19,2084
 4029194:	1085883a 	add	r2,r2,r2
 4029198:	9885883a 	add	r2,r19,r2
 402919c:	14000117 	ldw	r16,4(r2)
 40291a0:	10fffe04 	addi	r3,r2,-8
 40291a4:	80c0d926 	beq	r16,r3,402950c <_malloc_r+0x5d0>
 40291a8:	80c00117 	ldw	r3,4(r16)
 40291ac:	81000317 	ldw	r4,12(r16)
 40291b0:	00bfff04 	movi	r2,-4
 40291b4:	1884703a 	and	r2,r3,r2
 40291b8:	81400217 	ldw	r5,8(r16)
 40291bc:	8085883a 	add	r2,r16,r2
 40291c0:	10c00117 	ldw	r3,4(r2)
 40291c4:	29000315 	stw	r4,12(r5)
 40291c8:	21400215 	stw	r5,8(r4)
 40291cc:	18c00054 	ori	r3,r3,1
 40291d0:	10c00115 	stw	r3,4(r2)
 40291d4:	9009883a 	mov	r4,r18
 40291d8:	402e80c0 	call	402e80c <__malloc_unlock>
 40291dc:	80800204 	addi	r2,r16,8
 40291e0:	dfc00a17 	ldw	ra,40(sp)
 40291e4:	df000917 	ldw	fp,36(sp)
 40291e8:	ddc00817 	ldw	r23,32(sp)
 40291ec:	dd800717 	ldw	r22,28(sp)
 40291f0:	dd400617 	ldw	r21,24(sp)
 40291f4:	dd000517 	ldw	r20,20(sp)
 40291f8:	dcc00417 	ldw	r19,16(sp)
 40291fc:	dc800317 	ldw	r18,12(sp)
 4029200:	dc400217 	ldw	r17,8(sp)
 4029204:	dc000117 	ldw	r16,4(sp)
 4029208:	dec00b04 	addi	sp,sp,44
 402920c:	f800283a 	ret
 4029210:	00800304 	movi	r2,12
 4029214:	90800015 	stw	r2,0(r18)
 4029218:	0005883a 	mov	r2,zero
 402921c:	003ff006 	br	40291e0 <__flash_rwdata_start+0xffff82b8>
 4029220:	01002004 	movi	r4,128
 4029224:	02001004 	movi	r8,64
 4029228:	01c00fc4 	movi	r7,63
 402922c:	003f6106 	br	4028fb4 <__flash_rwdata_start+0xffff808c>
 4029230:	4009883a 	mov	r4,r8
 4029234:	003f7506 	br	402900c <__flash_rwdata_start+0xffff80e4>
 4029238:	81000317 	ldw	r4,12(r16)
 402923c:	003fde06 	br	40291b8 <__flash_rwdata_start+0xffff8290>
 4029240:	81c5883a 	add	r2,r16,r7
 4029244:	11400117 	ldw	r5,4(r2)
 4029248:	9009883a 	mov	r4,r18
 402924c:	29400054 	ori	r5,r5,1
 4029250:	11400115 	stw	r5,4(r2)
 4029254:	402e80c0 	call	402e80c <__malloc_unlock>
 4029258:	80800204 	addi	r2,r16,8
 402925c:	003fe006 	br	40291e0 <__flash_rwdata_start+0xffff82b8>
 4029260:	9c000217 	ldw	r16,8(r19)
 4029264:	00bfff04 	movi	r2,-4
 4029268:	85800117 	ldw	r22,4(r16)
 402926c:	b0ac703a 	and	r22,r22,r2
 4029270:	b4400336 	bltu	r22,r17,4029280 <_malloc_r+0x344>
 4029274:	b445c83a 	sub	r2,r22,r17
 4029278:	00c003c4 	movi	r3,15
 402927c:	18805d16 	blt	r3,r2,40293f4 <_malloc_r+0x4b8>
 4029280:	05c00034 	movhi	r23,0
 4029284:	00800034 	movhi	r2,0
 4029288:	1087a504 	addi	r2,r2,7828
 402928c:	bdc79104 	addi	r23,r23,7748
 4029290:	15400017 	ldw	r21,0(r2)
 4029294:	b8c00017 	ldw	r3,0(r23)
 4029298:	00bfffc4 	movi	r2,-1
 402929c:	858d883a 	add	r6,r16,r22
 40292a0:	8d6b883a 	add	r21,r17,r21
 40292a4:	1880ea26 	beq	r3,r2,4029650 <_malloc_r+0x714>
 40292a8:	ad4403c4 	addi	r21,r21,4111
 40292ac:	00bc0004 	movi	r2,-4096
 40292b0:	a8aa703a 	and	r21,r21,r2
 40292b4:	a80b883a 	mov	r5,r21
 40292b8:	9009883a 	mov	r4,r18
 40292bc:	d9800015 	stw	r6,0(sp)
 40292c0:	402b1580 	call	402b158 <_sbrk_r>
 40292c4:	1029883a 	mov	r20,r2
 40292c8:	00bfffc4 	movi	r2,-1
 40292cc:	d9800017 	ldw	r6,0(sp)
 40292d0:	a080e826 	beq	r20,r2,4029674 <_malloc_r+0x738>
 40292d4:	a180a636 	bltu	r20,r6,4029570 <_malloc_r+0x634>
 40292d8:	07000034 	movhi	fp,0
 40292dc:	e707b304 	addi	fp,fp,7884
 40292e0:	e0800017 	ldw	r2,0(fp)
 40292e4:	a887883a 	add	r3,r21,r2
 40292e8:	e0c00015 	stw	r3,0(fp)
 40292ec:	3500e626 	beq	r6,r20,4029688 <_malloc_r+0x74c>
 40292f0:	b9000017 	ldw	r4,0(r23)
 40292f4:	00bfffc4 	movi	r2,-1
 40292f8:	2080ee26 	beq	r4,r2,40296b4 <_malloc_r+0x778>
 40292fc:	a185c83a 	sub	r2,r20,r6
 4029300:	10c5883a 	add	r2,r2,r3
 4029304:	e0800015 	stw	r2,0(fp)
 4029308:	a0c001cc 	andi	r3,r20,7
 402930c:	1800bc26 	beq	r3,zero,4029600 <_malloc_r+0x6c4>
 4029310:	a0e9c83a 	sub	r20,r20,r3
 4029314:	00840204 	movi	r2,4104
 4029318:	a5000204 	addi	r20,r20,8
 402931c:	10c7c83a 	sub	r3,r2,r3
 4029320:	a545883a 	add	r2,r20,r21
 4029324:	1083ffcc 	andi	r2,r2,4095
 4029328:	18abc83a 	sub	r21,r3,r2
 402932c:	a80b883a 	mov	r5,r21
 4029330:	9009883a 	mov	r4,r18
 4029334:	402b1580 	call	402b158 <_sbrk_r>
 4029338:	00ffffc4 	movi	r3,-1
 402933c:	10c0e126 	beq	r2,r3,40296c4 <_malloc_r+0x788>
 4029340:	1505c83a 	sub	r2,r2,r20
 4029344:	1545883a 	add	r2,r2,r21
 4029348:	10800054 	ori	r2,r2,1
 402934c:	e0c00017 	ldw	r3,0(fp)
 4029350:	9d000215 	stw	r20,8(r19)
 4029354:	a0800115 	stw	r2,4(r20)
 4029358:	a8c7883a 	add	r3,r21,r3
 402935c:	e0c00015 	stw	r3,0(fp)
 4029360:	84c00e26 	beq	r16,r19,402939c <_malloc_r+0x460>
 4029364:	018003c4 	movi	r6,15
 4029368:	3580a72e 	bgeu	r6,r22,4029608 <_malloc_r+0x6cc>
 402936c:	81400117 	ldw	r5,4(r16)
 4029370:	013ffe04 	movi	r4,-8
 4029374:	b0bffd04 	addi	r2,r22,-12
 4029378:	1104703a 	and	r2,r2,r4
 402937c:	2900004c 	andi	r4,r5,1
 4029380:	2088b03a 	or	r4,r4,r2
 4029384:	81000115 	stw	r4,4(r16)
 4029388:	01400144 	movi	r5,5
 402938c:	8089883a 	add	r4,r16,r2
 4029390:	21400115 	stw	r5,4(r4)
 4029394:	21400215 	stw	r5,8(r4)
 4029398:	3080cd36 	bltu	r6,r2,40296d0 <_malloc_r+0x794>
 402939c:	00800034 	movhi	r2,0
 40293a0:	1087a404 	addi	r2,r2,7824
 40293a4:	11000017 	ldw	r4,0(r2)
 40293a8:	20c0012e 	bgeu	r4,r3,40293b0 <_malloc_r+0x474>
 40293ac:	10c00015 	stw	r3,0(r2)
 40293b0:	00800034 	movhi	r2,0
 40293b4:	1087a304 	addi	r2,r2,7820
 40293b8:	11000017 	ldw	r4,0(r2)
 40293bc:	9c000217 	ldw	r16,8(r19)
 40293c0:	20c0012e 	bgeu	r4,r3,40293c8 <_malloc_r+0x48c>
 40293c4:	10c00015 	stw	r3,0(r2)
 40293c8:	80c00117 	ldw	r3,4(r16)
 40293cc:	00bfff04 	movi	r2,-4
 40293d0:	1886703a 	and	r3,r3,r2
 40293d4:	1c45c83a 	sub	r2,r3,r17
 40293d8:	1c400236 	bltu	r3,r17,40293e4 <_malloc_r+0x4a8>
 40293dc:	00c003c4 	movi	r3,15
 40293e0:	18800416 	blt	r3,r2,40293f4 <_malloc_r+0x4b8>
 40293e4:	9009883a 	mov	r4,r18
 40293e8:	402e80c0 	call	402e80c <__malloc_unlock>
 40293ec:	0005883a 	mov	r2,zero
 40293f0:	003f7b06 	br	40291e0 <__flash_rwdata_start+0xffff82b8>
 40293f4:	88c00054 	ori	r3,r17,1
 40293f8:	80c00115 	stw	r3,4(r16)
 40293fc:	8463883a 	add	r17,r16,r17
 4029400:	10800054 	ori	r2,r2,1
 4029404:	9c400215 	stw	r17,8(r19)
 4029408:	88800115 	stw	r2,4(r17)
 402940c:	9009883a 	mov	r4,r18
 4029410:	402e80c0 	call	402e80c <__malloc_unlock>
 4029414:	80800204 	addi	r2,r16,8
 4029418:	003f7106 	br	40291e0 <__flash_rwdata_start+0xffff82b8>
 402941c:	00c00504 	movi	r3,20
 4029420:	18804a2e 	bgeu	r3,r2,402954c <_malloc_r+0x610>
 4029424:	00c01504 	movi	r3,84
 4029428:	18806e36 	bltu	r3,r2,40295e4 <_malloc_r+0x6a8>
 402942c:	8804d33a 	srli	r2,r17,12
 4029430:	12001bc4 	addi	r8,r2,111
 4029434:	11c01b84 	addi	r7,r2,110
 4029438:	4209883a 	add	r4,r8,r8
 402943c:	003edd06 	br	4028fb4 <__flash_rwdata_start+0xffff808c>
 4029440:	3804d27a 	srli	r2,r7,9
 4029444:	00c00104 	movi	r3,4
 4029448:	1880442e 	bgeu	r3,r2,402955c <_malloc_r+0x620>
 402944c:	00c00504 	movi	r3,20
 4029450:	18808136 	bltu	r3,r2,4029658 <_malloc_r+0x71c>
 4029454:	11401704 	addi	r5,r2,92
 4029458:	10c016c4 	addi	r3,r2,91
 402945c:	294b883a 	add	r5,r5,r5
 4029460:	294b883a 	add	r5,r5,r5
 4029464:	294b883a 	add	r5,r5,r5
 4029468:	994b883a 	add	r5,r19,r5
 402946c:	28800017 	ldw	r2,0(r5)
 4029470:	01800034 	movhi	r6,0
 4029474:	297ffe04 	addi	r5,r5,-8
 4029478:	31820904 	addi	r6,r6,2084
 402947c:	28806526 	beq	r5,r2,4029614 <_malloc_r+0x6d8>
 4029480:	01bfff04 	movi	r6,-4
 4029484:	10c00117 	ldw	r3,4(r2)
 4029488:	1986703a 	and	r3,r3,r6
 402948c:	38c0022e 	bgeu	r7,r3,4029498 <_malloc_r+0x55c>
 4029490:	10800217 	ldw	r2,8(r2)
 4029494:	28bffb1e 	bne	r5,r2,4029484 <__flash_rwdata_start+0xffff855c>
 4029498:	11400317 	ldw	r5,12(r2)
 402949c:	98c00117 	ldw	r3,4(r19)
 40294a0:	81400315 	stw	r5,12(r16)
 40294a4:	80800215 	stw	r2,8(r16)
 40294a8:	2c000215 	stw	r16,8(r5)
 40294ac:	14000315 	stw	r16,12(r2)
 40294b0:	003ef806 	br	4029094 <__flash_rwdata_start+0xffff816c>
 40294b4:	88c00054 	ori	r3,r17,1
 40294b8:	80c00115 	stw	r3,4(r16)
 40294bc:	8463883a 	add	r17,r16,r17
 40294c0:	34400515 	stw	r17,20(r6)
 40294c4:	34400415 	stw	r17,16(r6)
 40294c8:	10c00054 	ori	r3,r2,1
 40294cc:	8a000315 	stw	r8,12(r17)
 40294d0:	8a000215 	stw	r8,8(r17)
 40294d4:	88c00115 	stw	r3,4(r17)
 40294d8:	88a3883a 	add	r17,r17,r2
 40294dc:	88800015 	stw	r2,0(r17)
 40294e0:	9009883a 	mov	r4,r18
 40294e4:	402e80c0 	call	402e80c <__malloc_unlock>
 40294e8:	80800204 	addi	r2,r16,8
 40294ec:	003f3c06 	br	40291e0 <__flash_rwdata_start+0xffff82b8>
 40294f0:	30c00117 	ldw	r3,4(r6)
 40294f4:	003ee706 	br	4029094 <__flash_rwdata_start+0xffff816c>
 40294f8:	5ac00044 	addi	r11,r11,1
 40294fc:	588000cc 	andi	r2,r11,3
 4029500:	31800204 	addi	r6,r6,8
 4029504:	103efd1e 	bne	r2,zero,40290fc <__flash_rwdata_start+0xffff81d4>
 4029508:	00002406 	br	402959c <_malloc_r+0x660>
 402950c:	14000317 	ldw	r16,12(r2)
 4029510:	143f251e 	bne	r2,r16,40291a8 <__flash_rwdata_start+0xffff8280>
 4029514:	21000084 	addi	r4,r4,2
 4029518:	003ebc06 	br	402900c <__flash_rwdata_start+0xffff80e4>
 402951c:	8085883a 	add	r2,r16,r2
 4029520:	10c00117 	ldw	r3,4(r2)
 4029524:	81000317 	ldw	r4,12(r16)
 4029528:	81400217 	ldw	r5,8(r16)
 402952c:	18c00054 	ori	r3,r3,1
 4029530:	10c00115 	stw	r3,4(r2)
 4029534:	29000315 	stw	r4,12(r5)
 4029538:	21400215 	stw	r5,8(r4)
 402953c:	9009883a 	mov	r4,r18
 4029540:	402e80c0 	call	402e80c <__malloc_unlock>
 4029544:	80800204 	addi	r2,r16,8
 4029548:	003f2506 	br	40291e0 <__flash_rwdata_start+0xffff82b8>
 402954c:	12001704 	addi	r8,r2,92
 4029550:	11c016c4 	addi	r7,r2,91
 4029554:	4209883a 	add	r4,r8,r8
 4029558:	003e9606 	br	4028fb4 <__flash_rwdata_start+0xffff808c>
 402955c:	3804d1ba 	srli	r2,r7,6
 4029560:	11400e44 	addi	r5,r2,57
 4029564:	10c00e04 	addi	r3,r2,56
 4029568:	294b883a 	add	r5,r5,r5
 402956c:	003fbc06 	br	4029460 <__flash_rwdata_start+0xffff8538>
 4029570:	84ff5926 	beq	r16,r19,40292d8 <__flash_rwdata_start+0xffff83b0>
 4029574:	00800034 	movhi	r2,0
 4029578:	10820904 	addi	r2,r2,2084
 402957c:	14000217 	ldw	r16,8(r2)
 4029580:	00bfff04 	movi	r2,-4
 4029584:	80c00117 	ldw	r3,4(r16)
 4029588:	1886703a 	and	r3,r3,r2
 402958c:	003f9106 	br	40293d4 <__flash_rwdata_start+0xffff84ac>
 4029590:	60800217 	ldw	r2,8(r12)
 4029594:	213fffc4 	addi	r4,r4,-1
 4029598:	1300651e 	bne	r2,r12,4029730 <_malloc_r+0x7f4>
 402959c:	208000cc 	andi	r2,r4,3
 40295a0:	633ffe04 	addi	r12,r12,-8
 40295a4:	103ffa1e 	bne	r2,zero,4029590 <__flash_rwdata_start+0xffff8668>
 40295a8:	98800117 	ldw	r2,4(r19)
 40295ac:	0146303a 	nor	r3,zero,r5
 40295b0:	1884703a 	and	r2,r3,r2
 40295b4:	98800115 	stw	r2,4(r19)
 40295b8:	294b883a 	add	r5,r5,r5
 40295bc:	117f2836 	bltu	r2,r5,4029260 <__flash_rwdata_start+0xffff8338>
 40295c0:	283f2726 	beq	r5,zero,4029260 <__flash_rwdata_start+0xffff8338>
 40295c4:	2886703a 	and	r3,r5,r2
 40295c8:	5809883a 	mov	r4,r11
 40295cc:	183ec31e 	bne	r3,zero,40290dc <__flash_rwdata_start+0xffff81b4>
 40295d0:	294b883a 	add	r5,r5,r5
 40295d4:	2886703a 	and	r3,r5,r2
 40295d8:	21000104 	addi	r4,r4,4
 40295dc:	183ffc26 	beq	r3,zero,40295d0 <__flash_rwdata_start+0xffff86a8>
 40295e0:	003ebe06 	br	40290dc <__flash_rwdata_start+0xffff81b4>
 40295e4:	00c05504 	movi	r3,340
 40295e8:	18801236 	bltu	r3,r2,4029634 <_malloc_r+0x6f8>
 40295ec:	8804d3fa 	srli	r2,r17,15
 40295f0:	12001e04 	addi	r8,r2,120
 40295f4:	11c01dc4 	addi	r7,r2,119
 40295f8:	4209883a 	add	r4,r8,r8
 40295fc:	003e6d06 	br	4028fb4 <__flash_rwdata_start+0xffff808c>
 4029600:	00c40004 	movi	r3,4096
 4029604:	003f4606 	br	4029320 <__flash_rwdata_start+0xffff83f8>
 4029608:	00800044 	movi	r2,1
 402960c:	a0800115 	stw	r2,4(r20)
 4029610:	003f7406 	br	40293e4 <__flash_rwdata_start+0xffff84bc>
 4029614:	1805d0ba 	srai	r2,r3,2
 4029618:	01c00044 	movi	r7,1
 402961c:	30c00117 	ldw	r3,4(r6)
 4029620:	388e983a 	sll	r7,r7,r2
 4029624:	2805883a 	mov	r2,r5
 4029628:	38c6b03a 	or	r3,r7,r3
 402962c:	30c00115 	stw	r3,4(r6)
 4029630:	003f9b06 	br	40294a0 <__flash_rwdata_start+0xffff8578>
 4029634:	00c15504 	movi	r3,1364
 4029638:	18801a36 	bltu	r3,r2,40296a4 <_malloc_r+0x768>
 402963c:	8804d4ba 	srli	r2,r17,18
 4029640:	12001f44 	addi	r8,r2,125
 4029644:	11c01f04 	addi	r7,r2,124
 4029648:	4209883a 	add	r4,r8,r8
 402964c:	003e5906 	br	4028fb4 <__flash_rwdata_start+0xffff808c>
 4029650:	ad400404 	addi	r21,r21,16
 4029654:	003f1706 	br	40292b4 <__flash_rwdata_start+0xffff838c>
 4029658:	00c01504 	movi	r3,84
 402965c:	18802336 	bltu	r3,r2,40296ec <_malloc_r+0x7b0>
 4029660:	3804d33a 	srli	r2,r7,12
 4029664:	11401bc4 	addi	r5,r2,111
 4029668:	10c01b84 	addi	r3,r2,110
 402966c:	294b883a 	add	r5,r5,r5
 4029670:	003f7b06 	br	4029460 <__flash_rwdata_start+0xffff8538>
 4029674:	9c000217 	ldw	r16,8(r19)
 4029678:	00bfff04 	movi	r2,-4
 402967c:	80c00117 	ldw	r3,4(r16)
 4029680:	1886703a 	and	r3,r3,r2
 4029684:	003f5306 	br	40293d4 <__flash_rwdata_start+0xffff84ac>
 4029688:	3083ffcc 	andi	r2,r6,4095
 402968c:	103f181e 	bne	r2,zero,40292f0 <__flash_rwdata_start+0xffff83c8>
 4029690:	99000217 	ldw	r4,8(r19)
 4029694:	b545883a 	add	r2,r22,r21
 4029698:	10800054 	ori	r2,r2,1
 402969c:	20800115 	stw	r2,4(r4)
 40296a0:	003f3e06 	br	402939c <__flash_rwdata_start+0xffff8474>
 40296a4:	01003f84 	movi	r4,254
 40296a8:	02001fc4 	movi	r8,127
 40296ac:	01c01f84 	movi	r7,126
 40296b0:	003e4006 	br	4028fb4 <__flash_rwdata_start+0xffff808c>
 40296b4:	00800034 	movhi	r2,0
 40296b8:	10879104 	addi	r2,r2,7748
 40296bc:	15000015 	stw	r20,0(r2)
 40296c0:	003f1106 	br	4029308 <__flash_rwdata_start+0xffff83e0>
 40296c4:	00800044 	movi	r2,1
 40296c8:	002b883a 	mov	r21,zero
 40296cc:	003f1f06 	br	402934c <__flash_rwdata_start+0xffff8424>
 40296d0:	81400204 	addi	r5,r16,8
 40296d4:	9009883a 	mov	r4,r18
 40296d8:	40282f40 	call	40282f4 <_free_r>
 40296dc:	00800034 	movhi	r2,0
 40296e0:	1087b304 	addi	r2,r2,7884
 40296e4:	10c00017 	ldw	r3,0(r2)
 40296e8:	003f2c06 	br	402939c <__flash_rwdata_start+0xffff8474>
 40296ec:	00c05504 	movi	r3,340
 40296f0:	18800536 	bltu	r3,r2,4029708 <_malloc_r+0x7cc>
 40296f4:	3804d3fa 	srli	r2,r7,15
 40296f8:	11401e04 	addi	r5,r2,120
 40296fc:	10c01dc4 	addi	r3,r2,119
 4029700:	294b883a 	add	r5,r5,r5
 4029704:	003f5606 	br	4029460 <__flash_rwdata_start+0xffff8538>
 4029708:	00c15504 	movi	r3,1364
 402970c:	18800536 	bltu	r3,r2,4029724 <_malloc_r+0x7e8>
 4029710:	3804d4ba 	srli	r2,r7,18
 4029714:	11401f44 	addi	r5,r2,125
 4029718:	10c01f04 	addi	r3,r2,124
 402971c:	294b883a 	add	r5,r5,r5
 4029720:	003f4f06 	br	4029460 <__flash_rwdata_start+0xffff8538>
 4029724:	01403f84 	movi	r5,254
 4029728:	00c01f84 	movi	r3,126
 402972c:	003f4c06 	br	4029460 <__flash_rwdata_start+0xffff8538>
 4029730:	98800117 	ldw	r2,4(r19)
 4029734:	003fa006 	br	40295b8 <__flash_rwdata_start+0xffff8690>
 4029738:	8808d0fa 	srli	r4,r17,3
 402973c:	20800044 	addi	r2,r4,1
 4029740:	1085883a 	add	r2,r2,r2
 4029744:	003e9006 	br	4029188 <__flash_rwdata_start+0xffff8260>

04029748 <memchr>:
 4029748:	208000cc 	andi	r2,r4,3
 402974c:	280f883a 	mov	r7,r5
 4029750:	10003426 	beq	r2,zero,4029824 <memchr+0xdc>
 4029754:	30bfffc4 	addi	r2,r6,-1
 4029758:	30001a26 	beq	r6,zero,40297c4 <memchr+0x7c>
 402975c:	20c00003 	ldbu	r3,0(r4)
 4029760:	29803fcc 	andi	r6,r5,255
 4029764:	30c0051e 	bne	r6,r3,402977c <memchr+0x34>
 4029768:	00001806 	br	40297cc <memchr+0x84>
 402976c:	10001526 	beq	r2,zero,40297c4 <memchr+0x7c>
 4029770:	20c00003 	ldbu	r3,0(r4)
 4029774:	10bfffc4 	addi	r2,r2,-1
 4029778:	30c01426 	beq	r6,r3,40297cc <memchr+0x84>
 402977c:	21000044 	addi	r4,r4,1
 4029780:	20c000cc 	andi	r3,r4,3
 4029784:	183ff91e 	bne	r3,zero,402976c <__flash_rwdata_start+0xffff8844>
 4029788:	020000c4 	movi	r8,3
 402978c:	40801136 	bltu	r8,r2,40297d4 <memchr+0x8c>
 4029790:	10000c26 	beq	r2,zero,40297c4 <memchr+0x7c>
 4029794:	20c00003 	ldbu	r3,0(r4)
 4029798:	29403fcc 	andi	r5,r5,255
 402979c:	28c00b26 	beq	r5,r3,40297cc <memchr+0x84>
 40297a0:	20c00044 	addi	r3,r4,1
 40297a4:	39803fcc 	andi	r6,r7,255
 40297a8:	2089883a 	add	r4,r4,r2
 40297ac:	00000306 	br	40297bc <memchr+0x74>
 40297b0:	18c00044 	addi	r3,r3,1
 40297b4:	197fffc3 	ldbu	r5,-1(r3)
 40297b8:	31400526 	beq	r6,r5,40297d0 <memchr+0x88>
 40297bc:	1805883a 	mov	r2,r3
 40297c0:	20fffb1e 	bne	r4,r3,40297b0 <__flash_rwdata_start+0xffff8888>
 40297c4:	0005883a 	mov	r2,zero
 40297c8:	f800283a 	ret
 40297cc:	2005883a 	mov	r2,r4
 40297d0:	f800283a 	ret
 40297d4:	28c03fcc 	andi	r3,r5,255
 40297d8:	1812923a 	slli	r9,r3,8
 40297dc:	02ffbff4 	movhi	r11,65279
 40297e0:	02a02074 	movhi	r10,32897
 40297e4:	48d2b03a 	or	r9,r9,r3
 40297e8:	4806943a 	slli	r3,r9,16
 40297ec:	5affbfc4 	addi	r11,r11,-257
 40297f0:	52a02004 	addi	r10,r10,-32640
 40297f4:	48d2b03a 	or	r9,r9,r3
 40297f8:	20c00017 	ldw	r3,0(r4)
 40297fc:	48c6f03a 	xor	r3,r9,r3
 4029800:	1acd883a 	add	r6,r3,r11
 4029804:	00c6303a 	nor	r3,zero,r3
 4029808:	30c6703a 	and	r3,r6,r3
 402980c:	1a86703a 	and	r3,r3,r10
 4029810:	183fe01e 	bne	r3,zero,4029794 <__flash_rwdata_start+0xffff886c>
 4029814:	10bfff04 	addi	r2,r2,-4
 4029818:	21000104 	addi	r4,r4,4
 402981c:	40bff636 	bltu	r8,r2,40297f8 <__flash_rwdata_start+0xffff88d0>
 4029820:	003fdb06 	br	4029790 <__flash_rwdata_start+0xffff8868>
 4029824:	3005883a 	mov	r2,r6
 4029828:	003fd706 	br	4029788 <__flash_rwdata_start+0xffff8860>

0402982c <memcpy>:
 402982c:	defffd04 	addi	sp,sp,-12
 4029830:	dfc00215 	stw	ra,8(sp)
 4029834:	dc400115 	stw	r17,4(sp)
 4029838:	dc000015 	stw	r16,0(sp)
 402983c:	00c003c4 	movi	r3,15
 4029840:	2005883a 	mov	r2,r4
 4029844:	1980452e 	bgeu	r3,r6,402995c <memcpy+0x130>
 4029848:	2906b03a 	or	r3,r5,r4
 402984c:	18c000cc 	andi	r3,r3,3
 4029850:	1800441e 	bne	r3,zero,4029964 <memcpy+0x138>
 4029854:	347ffc04 	addi	r17,r6,-16
 4029858:	8822d13a 	srli	r17,r17,4
 402985c:	28c00104 	addi	r3,r5,4
 4029860:	23400104 	addi	r13,r4,4
 4029864:	8820913a 	slli	r16,r17,4
 4029868:	2b000204 	addi	r12,r5,8
 402986c:	22c00204 	addi	r11,r4,8
 4029870:	84000504 	addi	r16,r16,20
 4029874:	2a800304 	addi	r10,r5,12
 4029878:	22400304 	addi	r9,r4,12
 402987c:	2c21883a 	add	r16,r5,r16
 4029880:	2811883a 	mov	r8,r5
 4029884:	200f883a 	mov	r7,r4
 4029888:	41000017 	ldw	r4,0(r8)
 402988c:	1fc00017 	ldw	ra,0(r3)
 4029890:	63c00017 	ldw	r15,0(r12)
 4029894:	39000015 	stw	r4,0(r7)
 4029898:	53800017 	ldw	r14,0(r10)
 402989c:	6fc00015 	stw	ra,0(r13)
 40298a0:	5bc00015 	stw	r15,0(r11)
 40298a4:	4b800015 	stw	r14,0(r9)
 40298a8:	18c00404 	addi	r3,r3,16
 40298ac:	39c00404 	addi	r7,r7,16
 40298b0:	42000404 	addi	r8,r8,16
 40298b4:	6b400404 	addi	r13,r13,16
 40298b8:	63000404 	addi	r12,r12,16
 40298bc:	5ac00404 	addi	r11,r11,16
 40298c0:	52800404 	addi	r10,r10,16
 40298c4:	4a400404 	addi	r9,r9,16
 40298c8:	1c3fef1e 	bne	r3,r16,4029888 <__flash_rwdata_start+0xffff8960>
 40298cc:	89c00044 	addi	r7,r17,1
 40298d0:	380e913a 	slli	r7,r7,4
 40298d4:	310003cc 	andi	r4,r6,15
 40298d8:	02c000c4 	movi	r11,3
 40298dc:	11c7883a 	add	r3,r2,r7
 40298e0:	29cb883a 	add	r5,r5,r7
 40298e4:	5900212e 	bgeu	r11,r4,402996c <memcpy+0x140>
 40298e8:	1813883a 	mov	r9,r3
 40298ec:	2811883a 	mov	r8,r5
 40298f0:	200f883a 	mov	r7,r4
 40298f4:	42800017 	ldw	r10,0(r8)
 40298f8:	4a400104 	addi	r9,r9,4
 40298fc:	39ffff04 	addi	r7,r7,-4
 4029900:	4abfff15 	stw	r10,-4(r9)
 4029904:	42000104 	addi	r8,r8,4
 4029908:	59fffa36 	bltu	r11,r7,40298f4 <__flash_rwdata_start+0xffff89cc>
 402990c:	213fff04 	addi	r4,r4,-4
 4029910:	2008d0ba 	srli	r4,r4,2
 4029914:	318000cc 	andi	r6,r6,3
 4029918:	21000044 	addi	r4,r4,1
 402991c:	2109883a 	add	r4,r4,r4
 4029920:	2109883a 	add	r4,r4,r4
 4029924:	1907883a 	add	r3,r3,r4
 4029928:	290b883a 	add	r5,r5,r4
 402992c:	30000626 	beq	r6,zero,4029948 <memcpy+0x11c>
 4029930:	198d883a 	add	r6,r3,r6
 4029934:	29c00003 	ldbu	r7,0(r5)
 4029938:	18c00044 	addi	r3,r3,1
 402993c:	29400044 	addi	r5,r5,1
 4029940:	19ffffc5 	stb	r7,-1(r3)
 4029944:	19bffb1e 	bne	r3,r6,4029934 <__flash_rwdata_start+0xffff8a0c>
 4029948:	dfc00217 	ldw	ra,8(sp)
 402994c:	dc400117 	ldw	r17,4(sp)
 4029950:	dc000017 	ldw	r16,0(sp)
 4029954:	dec00304 	addi	sp,sp,12
 4029958:	f800283a 	ret
 402995c:	2007883a 	mov	r3,r4
 4029960:	003ff206 	br	402992c <__flash_rwdata_start+0xffff8a04>
 4029964:	2007883a 	mov	r3,r4
 4029968:	003ff106 	br	4029930 <__flash_rwdata_start+0xffff8a08>
 402996c:	200d883a 	mov	r6,r4
 4029970:	003fee06 	br	402992c <__flash_rwdata_start+0xffff8a04>

04029974 <memmove>:
 4029974:	2005883a 	mov	r2,r4
 4029978:	29000b2e 	bgeu	r5,r4,40299a8 <memmove+0x34>
 402997c:	298f883a 	add	r7,r5,r6
 4029980:	21c0092e 	bgeu	r4,r7,40299a8 <memmove+0x34>
 4029984:	2187883a 	add	r3,r4,r6
 4029988:	198bc83a 	sub	r5,r3,r6
 402998c:	30004826 	beq	r6,zero,4029ab0 <memmove+0x13c>
 4029990:	39ffffc4 	addi	r7,r7,-1
 4029994:	39000003 	ldbu	r4,0(r7)
 4029998:	18ffffc4 	addi	r3,r3,-1
 402999c:	19000005 	stb	r4,0(r3)
 40299a0:	28fffb1e 	bne	r5,r3,4029990 <__flash_rwdata_start+0xffff8a68>
 40299a4:	f800283a 	ret
 40299a8:	00c003c4 	movi	r3,15
 40299ac:	1980412e 	bgeu	r3,r6,4029ab4 <memmove+0x140>
 40299b0:	2886b03a 	or	r3,r5,r2
 40299b4:	18c000cc 	andi	r3,r3,3
 40299b8:	1800401e 	bne	r3,zero,4029abc <memmove+0x148>
 40299bc:	33fffc04 	addi	r15,r6,-16
 40299c0:	781ed13a 	srli	r15,r15,4
 40299c4:	28c00104 	addi	r3,r5,4
 40299c8:	13400104 	addi	r13,r2,4
 40299cc:	781c913a 	slli	r14,r15,4
 40299d0:	2b000204 	addi	r12,r5,8
 40299d4:	12c00204 	addi	r11,r2,8
 40299d8:	73800504 	addi	r14,r14,20
 40299dc:	2a800304 	addi	r10,r5,12
 40299e0:	12400304 	addi	r9,r2,12
 40299e4:	2b9d883a 	add	r14,r5,r14
 40299e8:	2811883a 	mov	r8,r5
 40299ec:	100f883a 	mov	r7,r2
 40299f0:	41000017 	ldw	r4,0(r8)
 40299f4:	39c00404 	addi	r7,r7,16
 40299f8:	18c00404 	addi	r3,r3,16
 40299fc:	393ffc15 	stw	r4,-16(r7)
 4029a00:	193ffc17 	ldw	r4,-16(r3)
 4029a04:	6b400404 	addi	r13,r13,16
 4029a08:	5ac00404 	addi	r11,r11,16
 4029a0c:	693ffc15 	stw	r4,-16(r13)
 4029a10:	61000017 	ldw	r4,0(r12)
 4029a14:	4a400404 	addi	r9,r9,16
 4029a18:	42000404 	addi	r8,r8,16
 4029a1c:	593ffc15 	stw	r4,-16(r11)
 4029a20:	51000017 	ldw	r4,0(r10)
 4029a24:	63000404 	addi	r12,r12,16
 4029a28:	52800404 	addi	r10,r10,16
 4029a2c:	493ffc15 	stw	r4,-16(r9)
 4029a30:	1bbfef1e 	bne	r3,r14,40299f0 <__flash_rwdata_start+0xffff8ac8>
 4029a34:	79000044 	addi	r4,r15,1
 4029a38:	2008913a 	slli	r4,r4,4
 4029a3c:	328003cc 	andi	r10,r6,15
 4029a40:	02c000c4 	movi	r11,3
 4029a44:	1107883a 	add	r3,r2,r4
 4029a48:	290b883a 	add	r5,r5,r4
 4029a4c:	5a801e2e 	bgeu	r11,r10,4029ac8 <memmove+0x154>
 4029a50:	1813883a 	mov	r9,r3
 4029a54:	2811883a 	mov	r8,r5
 4029a58:	500f883a 	mov	r7,r10
 4029a5c:	41000017 	ldw	r4,0(r8)
 4029a60:	4a400104 	addi	r9,r9,4
 4029a64:	39ffff04 	addi	r7,r7,-4
 4029a68:	493fff15 	stw	r4,-4(r9)
 4029a6c:	42000104 	addi	r8,r8,4
 4029a70:	59fffa36 	bltu	r11,r7,4029a5c <__flash_rwdata_start+0xffff8b34>
 4029a74:	513fff04 	addi	r4,r10,-4
 4029a78:	2008d0ba 	srli	r4,r4,2
 4029a7c:	318000cc 	andi	r6,r6,3
 4029a80:	21000044 	addi	r4,r4,1
 4029a84:	2109883a 	add	r4,r4,r4
 4029a88:	2109883a 	add	r4,r4,r4
 4029a8c:	1907883a 	add	r3,r3,r4
 4029a90:	290b883a 	add	r5,r5,r4
 4029a94:	30000b26 	beq	r6,zero,4029ac4 <memmove+0x150>
 4029a98:	198d883a 	add	r6,r3,r6
 4029a9c:	29c00003 	ldbu	r7,0(r5)
 4029aa0:	18c00044 	addi	r3,r3,1
 4029aa4:	29400044 	addi	r5,r5,1
 4029aa8:	19ffffc5 	stb	r7,-1(r3)
 4029aac:	19bffb1e 	bne	r3,r6,4029a9c <__flash_rwdata_start+0xffff8b74>
 4029ab0:	f800283a 	ret
 4029ab4:	1007883a 	mov	r3,r2
 4029ab8:	003ff606 	br	4029a94 <__flash_rwdata_start+0xffff8b6c>
 4029abc:	1007883a 	mov	r3,r2
 4029ac0:	003ff506 	br	4029a98 <__flash_rwdata_start+0xffff8b70>
 4029ac4:	f800283a 	ret
 4029ac8:	500d883a 	mov	r6,r10
 4029acc:	003ff106 	br	4029a94 <__flash_rwdata_start+0xffff8b6c>

04029ad0 <memset>:
 4029ad0:	20c000cc 	andi	r3,r4,3
 4029ad4:	2005883a 	mov	r2,r4
 4029ad8:	18004426 	beq	r3,zero,4029bec <memset+0x11c>
 4029adc:	31ffffc4 	addi	r7,r6,-1
 4029ae0:	30004026 	beq	r6,zero,4029be4 <memset+0x114>
 4029ae4:	2813883a 	mov	r9,r5
 4029ae8:	200d883a 	mov	r6,r4
 4029aec:	2007883a 	mov	r3,r4
 4029af0:	00000406 	br	4029b04 <memset+0x34>
 4029af4:	3a3fffc4 	addi	r8,r7,-1
 4029af8:	31800044 	addi	r6,r6,1
 4029afc:	38003926 	beq	r7,zero,4029be4 <memset+0x114>
 4029b00:	400f883a 	mov	r7,r8
 4029b04:	18c00044 	addi	r3,r3,1
 4029b08:	32400005 	stb	r9,0(r6)
 4029b0c:	1a0000cc 	andi	r8,r3,3
 4029b10:	403ff81e 	bne	r8,zero,4029af4 <__flash_rwdata_start+0xffff8bcc>
 4029b14:	010000c4 	movi	r4,3
 4029b18:	21c02d2e 	bgeu	r4,r7,4029bd0 <memset+0x100>
 4029b1c:	29003fcc 	andi	r4,r5,255
 4029b20:	200c923a 	slli	r6,r4,8
 4029b24:	3108b03a 	or	r4,r6,r4
 4029b28:	200c943a 	slli	r6,r4,16
 4029b2c:	218cb03a 	or	r6,r4,r6
 4029b30:	010003c4 	movi	r4,15
 4029b34:	21c0182e 	bgeu	r4,r7,4029b98 <memset+0xc8>
 4029b38:	3b3ffc04 	addi	r12,r7,-16
 4029b3c:	6018d13a 	srli	r12,r12,4
 4029b40:	1a000104 	addi	r8,r3,4
 4029b44:	1ac00204 	addi	r11,r3,8
 4029b48:	6008913a 	slli	r4,r12,4
 4029b4c:	1a800304 	addi	r10,r3,12
 4029b50:	1813883a 	mov	r9,r3
 4029b54:	21000504 	addi	r4,r4,20
 4029b58:	1909883a 	add	r4,r3,r4
 4029b5c:	49800015 	stw	r6,0(r9)
 4029b60:	41800015 	stw	r6,0(r8)
 4029b64:	59800015 	stw	r6,0(r11)
 4029b68:	51800015 	stw	r6,0(r10)
 4029b6c:	42000404 	addi	r8,r8,16
 4029b70:	4a400404 	addi	r9,r9,16
 4029b74:	5ac00404 	addi	r11,r11,16
 4029b78:	52800404 	addi	r10,r10,16
 4029b7c:	413ff71e 	bne	r8,r4,4029b5c <__flash_rwdata_start+0xffff8c34>
 4029b80:	63000044 	addi	r12,r12,1
 4029b84:	6018913a 	slli	r12,r12,4
 4029b88:	39c003cc 	andi	r7,r7,15
 4029b8c:	010000c4 	movi	r4,3
 4029b90:	1b07883a 	add	r3,r3,r12
 4029b94:	21c00e2e 	bgeu	r4,r7,4029bd0 <memset+0x100>
 4029b98:	1813883a 	mov	r9,r3
 4029b9c:	3811883a 	mov	r8,r7
 4029ba0:	010000c4 	movi	r4,3
 4029ba4:	49800015 	stw	r6,0(r9)
 4029ba8:	423fff04 	addi	r8,r8,-4
 4029bac:	4a400104 	addi	r9,r9,4
 4029bb0:	223ffc36 	bltu	r4,r8,4029ba4 <__flash_rwdata_start+0xffff8c7c>
 4029bb4:	393fff04 	addi	r4,r7,-4
 4029bb8:	2008d0ba 	srli	r4,r4,2
 4029bbc:	39c000cc 	andi	r7,r7,3
 4029bc0:	21000044 	addi	r4,r4,1
 4029bc4:	2109883a 	add	r4,r4,r4
 4029bc8:	2109883a 	add	r4,r4,r4
 4029bcc:	1907883a 	add	r3,r3,r4
 4029bd0:	38000526 	beq	r7,zero,4029be8 <memset+0x118>
 4029bd4:	19cf883a 	add	r7,r3,r7
 4029bd8:	19400005 	stb	r5,0(r3)
 4029bdc:	18c00044 	addi	r3,r3,1
 4029be0:	38fffd1e 	bne	r7,r3,4029bd8 <__flash_rwdata_start+0xffff8cb0>
 4029be4:	f800283a 	ret
 4029be8:	f800283a 	ret
 4029bec:	2007883a 	mov	r3,r4
 4029bf0:	300f883a 	mov	r7,r6
 4029bf4:	003fc706 	br	4029b14 <__flash_rwdata_start+0xffff8bec>

04029bf8 <_Balloc>:
 4029bf8:	20801317 	ldw	r2,76(r4)
 4029bfc:	defffc04 	addi	sp,sp,-16
 4029c00:	dc400115 	stw	r17,4(sp)
 4029c04:	dc000015 	stw	r16,0(sp)
 4029c08:	dfc00315 	stw	ra,12(sp)
 4029c0c:	dc800215 	stw	r18,8(sp)
 4029c10:	2023883a 	mov	r17,r4
 4029c14:	2821883a 	mov	r16,r5
 4029c18:	10000f26 	beq	r2,zero,4029c58 <_Balloc+0x60>
 4029c1c:	8407883a 	add	r3,r16,r16
 4029c20:	18c7883a 	add	r3,r3,r3
 4029c24:	10c7883a 	add	r3,r2,r3
 4029c28:	18800017 	ldw	r2,0(r3)
 4029c2c:	10001126 	beq	r2,zero,4029c74 <_Balloc+0x7c>
 4029c30:	11000017 	ldw	r4,0(r2)
 4029c34:	19000015 	stw	r4,0(r3)
 4029c38:	10000415 	stw	zero,16(r2)
 4029c3c:	10000315 	stw	zero,12(r2)
 4029c40:	dfc00317 	ldw	ra,12(sp)
 4029c44:	dc800217 	ldw	r18,8(sp)
 4029c48:	dc400117 	ldw	r17,4(sp)
 4029c4c:	dc000017 	ldw	r16,0(sp)
 4029c50:	dec00404 	addi	sp,sp,16
 4029c54:	f800283a 	ret
 4029c58:	01800844 	movi	r6,33
 4029c5c:	01400104 	movi	r5,4
 4029c60:	402cac00 	call	402cac0 <_calloc_r>
 4029c64:	88801315 	stw	r2,76(r17)
 4029c68:	103fec1e 	bne	r2,zero,4029c1c <__flash_rwdata_start+0xffff8cf4>
 4029c6c:	0005883a 	mov	r2,zero
 4029c70:	003ff306 	br	4029c40 <__flash_rwdata_start+0xffff8d18>
 4029c74:	01400044 	movi	r5,1
 4029c78:	2c24983a 	sll	r18,r5,r16
 4029c7c:	8809883a 	mov	r4,r17
 4029c80:	91800144 	addi	r6,r18,5
 4029c84:	318d883a 	add	r6,r6,r6
 4029c88:	318d883a 	add	r6,r6,r6
 4029c8c:	402cac00 	call	402cac0 <_calloc_r>
 4029c90:	103ff626 	beq	r2,zero,4029c6c <__flash_rwdata_start+0xffff8d44>
 4029c94:	14000115 	stw	r16,4(r2)
 4029c98:	14800215 	stw	r18,8(r2)
 4029c9c:	003fe606 	br	4029c38 <__flash_rwdata_start+0xffff8d10>

04029ca0 <_Bfree>:
 4029ca0:	28000826 	beq	r5,zero,4029cc4 <_Bfree+0x24>
 4029ca4:	28c00117 	ldw	r3,4(r5)
 4029ca8:	20801317 	ldw	r2,76(r4)
 4029cac:	18c7883a 	add	r3,r3,r3
 4029cb0:	18c7883a 	add	r3,r3,r3
 4029cb4:	10c5883a 	add	r2,r2,r3
 4029cb8:	10c00017 	ldw	r3,0(r2)
 4029cbc:	28c00015 	stw	r3,0(r5)
 4029cc0:	11400015 	stw	r5,0(r2)
 4029cc4:	f800283a 	ret

04029cc8 <__multadd>:
 4029cc8:	defffa04 	addi	sp,sp,-24
 4029ccc:	dc800315 	stw	r18,12(sp)
 4029cd0:	dc400215 	stw	r17,8(sp)
 4029cd4:	dc000115 	stw	r16,4(sp)
 4029cd8:	2823883a 	mov	r17,r5
 4029cdc:	2c000417 	ldw	r16,16(r5)
 4029ce0:	dfc00515 	stw	ra,20(sp)
 4029ce4:	dcc00415 	stw	r19,16(sp)
 4029ce8:	2025883a 	mov	r18,r4
 4029cec:	29400504 	addi	r5,r5,20
 4029cf0:	0011883a 	mov	r8,zero
 4029cf4:	28c00017 	ldw	r3,0(r5)
 4029cf8:	29400104 	addi	r5,r5,4
 4029cfc:	42000044 	addi	r8,r8,1
 4029d00:	18bfffcc 	andi	r2,r3,65535
 4029d04:	1185383a 	mul	r2,r2,r6
 4029d08:	1806d43a 	srli	r3,r3,16
 4029d0c:	11cf883a 	add	r7,r2,r7
 4029d10:	3808d43a 	srli	r4,r7,16
 4029d14:	1987383a 	mul	r3,r3,r6
 4029d18:	38bfffcc 	andi	r2,r7,65535
 4029d1c:	1907883a 	add	r3,r3,r4
 4029d20:	1808943a 	slli	r4,r3,16
 4029d24:	180ed43a 	srli	r7,r3,16
 4029d28:	2085883a 	add	r2,r4,r2
 4029d2c:	28bfff15 	stw	r2,-4(r5)
 4029d30:	443ff016 	blt	r8,r16,4029cf4 <__flash_rwdata_start+0xffff8dcc>
 4029d34:	38000926 	beq	r7,zero,4029d5c <__multadd+0x94>
 4029d38:	88800217 	ldw	r2,8(r17)
 4029d3c:	80800f0e 	bge	r16,r2,4029d7c <__multadd+0xb4>
 4029d40:	80800144 	addi	r2,r16,5
 4029d44:	1085883a 	add	r2,r2,r2
 4029d48:	1085883a 	add	r2,r2,r2
 4029d4c:	8885883a 	add	r2,r17,r2
 4029d50:	11c00015 	stw	r7,0(r2)
 4029d54:	84000044 	addi	r16,r16,1
 4029d58:	8c000415 	stw	r16,16(r17)
 4029d5c:	8805883a 	mov	r2,r17
 4029d60:	dfc00517 	ldw	ra,20(sp)
 4029d64:	dcc00417 	ldw	r19,16(sp)
 4029d68:	dc800317 	ldw	r18,12(sp)
 4029d6c:	dc400217 	ldw	r17,8(sp)
 4029d70:	dc000117 	ldw	r16,4(sp)
 4029d74:	dec00604 	addi	sp,sp,24
 4029d78:	f800283a 	ret
 4029d7c:	89400117 	ldw	r5,4(r17)
 4029d80:	9009883a 	mov	r4,r18
 4029d84:	d9c00015 	stw	r7,0(sp)
 4029d88:	29400044 	addi	r5,r5,1
 4029d8c:	4029bf80 	call	4029bf8 <_Balloc>
 4029d90:	89800417 	ldw	r6,16(r17)
 4029d94:	89400304 	addi	r5,r17,12
 4029d98:	11000304 	addi	r4,r2,12
 4029d9c:	31800084 	addi	r6,r6,2
 4029da0:	318d883a 	add	r6,r6,r6
 4029da4:	318d883a 	add	r6,r6,r6
 4029da8:	1027883a 	mov	r19,r2
 4029dac:	402982c0 	call	402982c <memcpy>
 4029db0:	d9c00017 	ldw	r7,0(sp)
 4029db4:	88000a26 	beq	r17,zero,4029de0 <__multadd+0x118>
 4029db8:	88c00117 	ldw	r3,4(r17)
 4029dbc:	90801317 	ldw	r2,76(r18)
 4029dc0:	18c7883a 	add	r3,r3,r3
 4029dc4:	18c7883a 	add	r3,r3,r3
 4029dc8:	10c5883a 	add	r2,r2,r3
 4029dcc:	10c00017 	ldw	r3,0(r2)
 4029dd0:	88c00015 	stw	r3,0(r17)
 4029dd4:	14400015 	stw	r17,0(r2)
 4029dd8:	9823883a 	mov	r17,r19
 4029ddc:	003fd806 	br	4029d40 <__flash_rwdata_start+0xffff8e18>
 4029de0:	9823883a 	mov	r17,r19
 4029de4:	003fd606 	br	4029d40 <__flash_rwdata_start+0xffff8e18>

04029de8 <__s2b>:
 4029de8:	defff904 	addi	sp,sp,-28
 4029dec:	dc400115 	stw	r17,4(sp)
 4029df0:	dc000015 	stw	r16,0(sp)
 4029df4:	2023883a 	mov	r17,r4
 4029df8:	2821883a 	mov	r16,r5
 4029dfc:	39000204 	addi	r4,r7,8
 4029e00:	01400244 	movi	r5,9
 4029e04:	dcc00315 	stw	r19,12(sp)
 4029e08:	dc800215 	stw	r18,8(sp)
 4029e0c:	dfc00615 	stw	ra,24(sp)
 4029e10:	dd400515 	stw	r21,20(sp)
 4029e14:	dd000415 	stw	r20,16(sp)
 4029e18:	3825883a 	mov	r18,r7
 4029e1c:	3027883a 	mov	r19,r6
 4029e20:	40214b40 	call	40214b4 <__divsi3>
 4029e24:	00c00044 	movi	r3,1
 4029e28:	000b883a 	mov	r5,zero
 4029e2c:	1880030e 	bge	r3,r2,4029e3c <__s2b+0x54>
 4029e30:	18c7883a 	add	r3,r3,r3
 4029e34:	29400044 	addi	r5,r5,1
 4029e38:	18bffd16 	blt	r3,r2,4029e30 <__flash_rwdata_start+0xffff8f08>
 4029e3c:	8809883a 	mov	r4,r17
 4029e40:	4029bf80 	call	4029bf8 <_Balloc>
 4029e44:	d8c00717 	ldw	r3,28(sp)
 4029e48:	10c00515 	stw	r3,20(r2)
 4029e4c:	00c00044 	movi	r3,1
 4029e50:	10c00415 	stw	r3,16(r2)
 4029e54:	00c00244 	movi	r3,9
 4029e58:	1cc0210e 	bge	r3,r19,4029ee0 <__s2b+0xf8>
 4029e5c:	80eb883a 	add	r21,r16,r3
 4029e60:	a829883a 	mov	r20,r21
 4029e64:	84e1883a 	add	r16,r16,r19
 4029e68:	a1c00007 	ldb	r7,0(r20)
 4029e6c:	01800284 	movi	r6,10
 4029e70:	a5000044 	addi	r20,r20,1
 4029e74:	100b883a 	mov	r5,r2
 4029e78:	39fff404 	addi	r7,r7,-48
 4029e7c:	8809883a 	mov	r4,r17
 4029e80:	4029cc80 	call	4029cc8 <__multadd>
 4029e84:	a43ff81e 	bne	r20,r16,4029e68 <__flash_rwdata_start+0xffff8f40>
 4029e88:	ace1883a 	add	r16,r21,r19
 4029e8c:	843ffe04 	addi	r16,r16,-8
 4029e90:	9c800a0e 	bge	r19,r18,4029ebc <__s2b+0xd4>
 4029e94:	94e5c83a 	sub	r18,r18,r19
 4029e98:	84a5883a 	add	r18,r16,r18
 4029e9c:	81c00007 	ldb	r7,0(r16)
 4029ea0:	01800284 	movi	r6,10
 4029ea4:	84000044 	addi	r16,r16,1
 4029ea8:	100b883a 	mov	r5,r2
 4029eac:	39fff404 	addi	r7,r7,-48
 4029eb0:	8809883a 	mov	r4,r17
 4029eb4:	4029cc80 	call	4029cc8 <__multadd>
 4029eb8:	84bff81e 	bne	r16,r18,4029e9c <__flash_rwdata_start+0xffff8f74>
 4029ebc:	dfc00617 	ldw	ra,24(sp)
 4029ec0:	dd400517 	ldw	r21,20(sp)
 4029ec4:	dd000417 	ldw	r20,16(sp)
 4029ec8:	dcc00317 	ldw	r19,12(sp)
 4029ecc:	dc800217 	ldw	r18,8(sp)
 4029ed0:	dc400117 	ldw	r17,4(sp)
 4029ed4:	dc000017 	ldw	r16,0(sp)
 4029ed8:	dec00704 	addi	sp,sp,28
 4029edc:	f800283a 	ret
 4029ee0:	84000284 	addi	r16,r16,10
 4029ee4:	1827883a 	mov	r19,r3
 4029ee8:	003fe906 	br	4029e90 <__flash_rwdata_start+0xffff8f68>

04029eec <__hi0bits>:
 4029eec:	20bfffec 	andhi	r2,r4,65535
 4029ef0:	1000141e 	bne	r2,zero,4029f44 <__hi0bits+0x58>
 4029ef4:	2008943a 	slli	r4,r4,16
 4029ef8:	00800404 	movi	r2,16
 4029efc:	20ffc02c 	andhi	r3,r4,65280
 4029f00:	1800021e 	bne	r3,zero,4029f0c <__hi0bits+0x20>
 4029f04:	2008923a 	slli	r4,r4,8
 4029f08:	10800204 	addi	r2,r2,8
 4029f0c:	20fc002c 	andhi	r3,r4,61440
 4029f10:	1800021e 	bne	r3,zero,4029f1c <__hi0bits+0x30>
 4029f14:	2008913a 	slli	r4,r4,4
 4029f18:	10800104 	addi	r2,r2,4
 4029f1c:	20f0002c 	andhi	r3,r4,49152
 4029f20:	1800031e 	bne	r3,zero,4029f30 <__hi0bits+0x44>
 4029f24:	2109883a 	add	r4,r4,r4
 4029f28:	10800084 	addi	r2,r2,2
 4029f2c:	2109883a 	add	r4,r4,r4
 4029f30:	20000316 	blt	r4,zero,4029f40 <__hi0bits+0x54>
 4029f34:	2110002c 	andhi	r4,r4,16384
 4029f38:	2000041e 	bne	r4,zero,4029f4c <__hi0bits+0x60>
 4029f3c:	00800804 	movi	r2,32
 4029f40:	f800283a 	ret
 4029f44:	0005883a 	mov	r2,zero
 4029f48:	003fec06 	br	4029efc <__flash_rwdata_start+0xffff8fd4>
 4029f4c:	10800044 	addi	r2,r2,1
 4029f50:	f800283a 	ret

04029f54 <__lo0bits>:
 4029f54:	20c00017 	ldw	r3,0(r4)
 4029f58:	188001cc 	andi	r2,r3,7
 4029f5c:	10000826 	beq	r2,zero,4029f80 <__lo0bits+0x2c>
 4029f60:	1880004c 	andi	r2,r3,1
 4029f64:	1000211e 	bne	r2,zero,4029fec <__lo0bits+0x98>
 4029f68:	1880008c 	andi	r2,r3,2
 4029f6c:	1000211e 	bne	r2,zero,4029ff4 <__lo0bits+0xa0>
 4029f70:	1806d0ba 	srli	r3,r3,2
 4029f74:	00800084 	movi	r2,2
 4029f78:	20c00015 	stw	r3,0(r4)
 4029f7c:	f800283a 	ret
 4029f80:	18bfffcc 	andi	r2,r3,65535
 4029f84:	10001326 	beq	r2,zero,4029fd4 <__lo0bits+0x80>
 4029f88:	0005883a 	mov	r2,zero
 4029f8c:	19403fcc 	andi	r5,r3,255
 4029f90:	2800021e 	bne	r5,zero,4029f9c <__lo0bits+0x48>
 4029f94:	1806d23a 	srli	r3,r3,8
 4029f98:	10800204 	addi	r2,r2,8
 4029f9c:	194003cc 	andi	r5,r3,15
 4029fa0:	2800021e 	bne	r5,zero,4029fac <__lo0bits+0x58>
 4029fa4:	1806d13a 	srli	r3,r3,4
 4029fa8:	10800104 	addi	r2,r2,4
 4029fac:	194000cc 	andi	r5,r3,3
 4029fb0:	2800021e 	bne	r5,zero,4029fbc <__lo0bits+0x68>
 4029fb4:	1806d0ba 	srli	r3,r3,2
 4029fb8:	10800084 	addi	r2,r2,2
 4029fbc:	1940004c 	andi	r5,r3,1
 4029fc0:	2800081e 	bne	r5,zero,4029fe4 <__lo0bits+0x90>
 4029fc4:	1806d07a 	srli	r3,r3,1
 4029fc8:	1800051e 	bne	r3,zero,4029fe0 <__lo0bits+0x8c>
 4029fcc:	00800804 	movi	r2,32
 4029fd0:	f800283a 	ret
 4029fd4:	1806d43a 	srli	r3,r3,16
 4029fd8:	00800404 	movi	r2,16
 4029fdc:	003feb06 	br	4029f8c <__flash_rwdata_start+0xffff9064>
 4029fe0:	10800044 	addi	r2,r2,1
 4029fe4:	20c00015 	stw	r3,0(r4)
 4029fe8:	f800283a 	ret
 4029fec:	0005883a 	mov	r2,zero
 4029ff0:	f800283a 	ret
 4029ff4:	1806d07a 	srli	r3,r3,1
 4029ff8:	00800044 	movi	r2,1
 4029ffc:	20c00015 	stw	r3,0(r4)
 402a000:	f800283a 	ret

0402a004 <__i2b>:
 402a004:	defffd04 	addi	sp,sp,-12
 402a008:	dc000015 	stw	r16,0(sp)
 402a00c:	04000044 	movi	r16,1
 402a010:	dc400115 	stw	r17,4(sp)
 402a014:	2823883a 	mov	r17,r5
 402a018:	800b883a 	mov	r5,r16
 402a01c:	dfc00215 	stw	ra,8(sp)
 402a020:	4029bf80 	call	4029bf8 <_Balloc>
 402a024:	14400515 	stw	r17,20(r2)
 402a028:	14000415 	stw	r16,16(r2)
 402a02c:	dfc00217 	ldw	ra,8(sp)
 402a030:	dc400117 	ldw	r17,4(sp)
 402a034:	dc000017 	ldw	r16,0(sp)
 402a038:	dec00304 	addi	sp,sp,12
 402a03c:	f800283a 	ret

0402a040 <__multiply>:
 402a040:	defffa04 	addi	sp,sp,-24
 402a044:	dcc00315 	stw	r19,12(sp)
 402a048:	dc800215 	stw	r18,8(sp)
 402a04c:	34c00417 	ldw	r19,16(r6)
 402a050:	2c800417 	ldw	r18,16(r5)
 402a054:	dd000415 	stw	r20,16(sp)
 402a058:	dc400115 	stw	r17,4(sp)
 402a05c:	dfc00515 	stw	ra,20(sp)
 402a060:	dc000015 	stw	r16,0(sp)
 402a064:	2829883a 	mov	r20,r5
 402a068:	3023883a 	mov	r17,r6
 402a06c:	94c0050e 	bge	r18,r19,402a084 <__multiply+0x44>
 402a070:	9007883a 	mov	r3,r18
 402a074:	3029883a 	mov	r20,r6
 402a078:	9825883a 	mov	r18,r19
 402a07c:	2823883a 	mov	r17,r5
 402a080:	1827883a 	mov	r19,r3
 402a084:	a0800217 	ldw	r2,8(r20)
 402a088:	94e1883a 	add	r16,r18,r19
 402a08c:	a1400117 	ldw	r5,4(r20)
 402a090:	1400010e 	bge	r2,r16,402a098 <__multiply+0x58>
 402a094:	29400044 	addi	r5,r5,1
 402a098:	4029bf80 	call	4029bf8 <_Balloc>
 402a09c:	8415883a 	add	r10,r16,r16
 402a0a0:	12c00504 	addi	r11,r2,20
 402a0a4:	5295883a 	add	r10,r10,r10
 402a0a8:	5a95883a 	add	r10,r11,r10
 402a0ac:	5807883a 	mov	r3,r11
 402a0b0:	5a80032e 	bgeu	r11,r10,402a0c0 <__multiply+0x80>
 402a0b4:	18000015 	stw	zero,0(r3)
 402a0b8:	18c00104 	addi	r3,r3,4
 402a0bc:	1abffd36 	bltu	r3,r10,402a0b4 <__flash_rwdata_start+0xffff918c>
 402a0c0:	9ce7883a 	add	r19,r19,r19
 402a0c4:	94a5883a 	add	r18,r18,r18
 402a0c8:	89800504 	addi	r6,r17,20
 402a0cc:	9ce7883a 	add	r19,r19,r19
 402a0d0:	a3400504 	addi	r13,r20,20
 402a0d4:	94a5883a 	add	r18,r18,r18
 402a0d8:	34d9883a 	add	r12,r6,r19
 402a0dc:	6c93883a 	add	r9,r13,r18
 402a0e0:	3300422e 	bgeu	r6,r12,402a1ec <__multiply+0x1ac>
 402a0e4:	37c00017 	ldw	ra,0(r6)
 402a0e8:	fbffffcc 	andi	r15,ra,65535
 402a0ec:	78001b26 	beq	r15,zero,402a15c <__multiply+0x11c>
 402a0f0:	5811883a 	mov	r8,r11
 402a0f4:	681d883a 	mov	r14,r13
 402a0f8:	000f883a 	mov	r7,zero
 402a0fc:	71000017 	ldw	r4,0(r14)
 402a100:	40c00017 	ldw	r3,0(r8)
 402a104:	73800104 	addi	r14,r14,4
 402a108:	217fffcc 	andi	r5,r4,65535
 402a10c:	2bcb383a 	mul	r5,r5,r15
 402a110:	2008d43a 	srli	r4,r4,16
 402a114:	1c7fffcc 	andi	r17,r3,65535
 402a118:	2c4b883a 	add	r5,r5,r17
 402a11c:	29cb883a 	add	r5,r5,r7
 402a120:	23c9383a 	mul	r4,r4,r15
 402a124:	1806d43a 	srli	r3,r3,16
 402a128:	280ed43a 	srli	r7,r5,16
 402a12c:	297fffcc 	andi	r5,r5,65535
 402a130:	20c7883a 	add	r3,r4,r3
 402a134:	19c7883a 	add	r3,r3,r7
 402a138:	1808943a 	slli	r4,r3,16
 402a13c:	4023883a 	mov	r17,r8
 402a140:	180ed43a 	srli	r7,r3,16
 402a144:	214ab03a 	or	r5,r4,r5
 402a148:	41400015 	stw	r5,0(r8)
 402a14c:	42000104 	addi	r8,r8,4
 402a150:	727fea36 	bltu	r14,r9,402a0fc <__flash_rwdata_start+0xffff91d4>
 402a154:	89c00115 	stw	r7,4(r17)
 402a158:	37c00017 	ldw	ra,0(r6)
 402a15c:	f83ed43a 	srli	ra,ra,16
 402a160:	f8001f26 	beq	ra,zero,402a1e0 <__multiply+0x1a0>
 402a164:	58c00017 	ldw	r3,0(r11)
 402a168:	681d883a 	mov	r14,r13
 402a16c:	581f883a 	mov	r15,r11
 402a170:	1811883a 	mov	r8,r3
 402a174:	5825883a 	mov	r18,r11
 402a178:	000f883a 	mov	r7,zero
 402a17c:	00000106 	br	402a184 <__multiply+0x144>
 402a180:	8825883a 	mov	r18,r17
 402a184:	7140000b 	ldhu	r5,0(r14)
 402a188:	4010d43a 	srli	r8,r8,16
 402a18c:	193fffcc 	andi	r4,r3,65535
 402a190:	2fcb383a 	mul	r5,r5,ra
 402a194:	7bc00104 	addi	r15,r15,4
 402a198:	73800104 	addi	r14,r14,4
 402a19c:	2a0b883a 	add	r5,r5,r8
 402a1a0:	29cb883a 	add	r5,r5,r7
 402a1a4:	2806943a 	slli	r3,r5,16
 402a1a8:	94400104 	addi	r17,r18,4
 402a1ac:	280ad43a 	srli	r5,r5,16
 402a1b0:	1908b03a 	or	r4,r3,r4
 402a1b4:	793fff15 	stw	r4,-4(r15)
 402a1b8:	70ffff17 	ldw	r3,-4(r14)
 402a1bc:	8a000017 	ldw	r8,0(r17)
 402a1c0:	1806d43a 	srli	r3,r3,16
 402a1c4:	413fffcc 	andi	r4,r8,65535
 402a1c8:	1fc7383a 	mul	r3,r3,ra
 402a1cc:	1907883a 	add	r3,r3,r4
 402a1d0:	1947883a 	add	r3,r3,r5
 402a1d4:	180ed43a 	srli	r7,r3,16
 402a1d8:	727fe936 	bltu	r14,r9,402a180 <__flash_rwdata_start+0xffff9258>
 402a1dc:	90c00115 	stw	r3,4(r18)
 402a1e0:	31800104 	addi	r6,r6,4
 402a1e4:	5ac00104 	addi	r11,r11,4
 402a1e8:	333fbe36 	bltu	r6,r12,402a0e4 <__flash_rwdata_start+0xffff91bc>
 402a1ec:	0400090e 	bge	zero,r16,402a214 <__multiply+0x1d4>
 402a1f0:	50ffff17 	ldw	r3,-4(r10)
 402a1f4:	52bfff04 	addi	r10,r10,-4
 402a1f8:	18000326 	beq	r3,zero,402a208 <__multiply+0x1c8>
 402a1fc:	00000506 	br	402a214 <__multiply+0x1d4>
 402a200:	50c00017 	ldw	r3,0(r10)
 402a204:	1800031e 	bne	r3,zero,402a214 <__multiply+0x1d4>
 402a208:	843fffc4 	addi	r16,r16,-1
 402a20c:	52bfff04 	addi	r10,r10,-4
 402a210:	803ffb1e 	bne	r16,zero,402a200 <__flash_rwdata_start+0xffff92d8>
 402a214:	14000415 	stw	r16,16(r2)
 402a218:	dfc00517 	ldw	ra,20(sp)
 402a21c:	dd000417 	ldw	r20,16(sp)
 402a220:	dcc00317 	ldw	r19,12(sp)
 402a224:	dc800217 	ldw	r18,8(sp)
 402a228:	dc400117 	ldw	r17,4(sp)
 402a22c:	dc000017 	ldw	r16,0(sp)
 402a230:	dec00604 	addi	sp,sp,24
 402a234:	f800283a 	ret

0402a238 <__pow5mult>:
 402a238:	defffa04 	addi	sp,sp,-24
 402a23c:	dcc00315 	stw	r19,12(sp)
 402a240:	dc000015 	stw	r16,0(sp)
 402a244:	dfc00515 	stw	ra,20(sp)
 402a248:	dd000415 	stw	r20,16(sp)
 402a24c:	dc800215 	stw	r18,8(sp)
 402a250:	dc400115 	stw	r17,4(sp)
 402a254:	308000cc 	andi	r2,r6,3
 402a258:	3021883a 	mov	r16,r6
 402a25c:	2027883a 	mov	r19,r4
 402a260:	10002f1e 	bne	r2,zero,402a320 <__pow5mult+0xe8>
 402a264:	2825883a 	mov	r18,r5
 402a268:	8021d0ba 	srai	r16,r16,2
 402a26c:	80001a26 	beq	r16,zero,402a2d8 <__pow5mult+0xa0>
 402a270:	9c401217 	ldw	r17,72(r19)
 402a274:	8800061e 	bne	r17,zero,402a290 <__pow5mult+0x58>
 402a278:	00003406 	br	402a34c <__pow5mult+0x114>
 402a27c:	8021d07a 	srai	r16,r16,1
 402a280:	80001526 	beq	r16,zero,402a2d8 <__pow5mult+0xa0>
 402a284:	88800017 	ldw	r2,0(r17)
 402a288:	10001c26 	beq	r2,zero,402a2fc <__pow5mult+0xc4>
 402a28c:	1023883a 	mov	r17,r2
 402a290:	8080004c 	andi	r2,r16,1
 402a294:	103ff926 	beq	r2,zero,402a27c <__flash_rwdata_start+0xffff9354>
 402a298:	880d883a 	mov	r6,r17
 402a29c:	900b883a 	mov	r5,r18
 402a2a0:	9809883a 	mov	r4,r19
 402a2a4:	402a0400 	call	402a040 <__multiply>
 402a2a8:	90001b26 	beq	r18,zero,402a318 <__pow5mult+0xe0>
 402a2ac:	91000117 	ldw	r4,4(r18)
 402a2b0:	98c01317 	ldw	r3,76(r19)
 402a2b4:	8021d07a 	srai	r16,r16,1
 402a2b8:	2109883a 	add	r4,r4,r4
 402a2bc:	2109883a 	add	r4,r4,r4
 402a2c0:	1907883a 	add	r3,r3,r4
 402a2c4:	19000017 	ldw	r4,0(r3)
 402a2c8:	91000015 	stw	r4,0(r18)
 402a2cc:	1c800015 	stw	r18,0(r3)
 402a2d0:	1025883a 	mov	r18,r2
 402a2d4:	803feb1e 	bne	r16,zero,402a284 <__flash_rwdata_start+0xffff935c>
 402a2d8:	9005883a 	mov	r2,r18
 402a2dc:	dfc00517 	ldw	ra,20(sp)
 402a2e0:	dd000417 	ldw	r20,16(sp)
 402a2e4:	dcc00317 	ldw	r19,12(sp)
 402a2e8:	dc800217 	ldw	r18,8(sp)
 402a2ec:	dc400117 	ldw	r17,4(sp)
 402a2f0:	dc000017 	ldw	r16,0(sp)
 402a2f4:	dec00604 	addi	sp,sp,24
 402a2f8:	f800283a 	ret
 402a2fc:	880d883a 	mov	r6,r17
 402a300:	880b883a 	mov	r5,r17
 402a304:	9809883a 	mov	r4,r19
 402a308:	402a0400 	call	402a040 <__multiply>
 402a30c:	88800015 	stw	r2,0(r17)
 402a310:	10000015 	stw	zero,0(r2)
 402a314:	003fdd06 	br	402a28c <__flash_rwdata_start+0xffff9364>
 402a318:	1025883a 	mov	r18,r2
 402a31c:	003fd706 	br	402a27c <__flash_rwdata_start+0xffff9354>
 402a320:	10bfffc4 	addi	r2,r2,-1
 402a324:	1085883a 	add	r2,r2,r2
 402a328:	00c00034 	movhi	r3,0
 402a32c:	18c07c04 	addi	r3,r3,496
 402a330:	1085883a 	add	r2,r2,r2
 402a334:	1885883a 	add	r2,r3,r2
 402a338:	11800017 	ldw	r6,0(r2)
 402a33c:	000f883a 	mov	r7,zero
 402a340:	4029cc80 	call	4029cc8 <__multadd>
 402a344:	1025883a 	mov	r18,r2
 402a348:	003fc706 	br	402a268 <__flash_rwdata_start+0xffff9340>
 402a34c:	05000044 	movi	r20,1
 402a350:	a00b883a 	mov	r5,r20
 402a354:	9809883a 	mov	r4,r19
 402a358:	4029bf80 	call	4029bf8 <_Balloc>
 402a35c:	1023883a 	mov	r17,r2
 402a360:	00809c44 	movi	r2,625
 402a364:	88800515 	stw	r2,20(r17)
 402a368:	8d000415 	stw	r20,16(r17)
 402a36c:	9c401215 	stw	r17,72(r19)
 402a370:	88000015 	stw	zero,0(r17)
 402a374:	003fc606 	br	402a290 <__flash_rwdata_start+0xffff9368>

0402a378 <__lshift>:
 402a378:	defff904 	addi	sp,sp,-28
 402a37c:	dd400515 	stw	r21,20(sp)
 402a380:	dcc00315 	stw	r19,12(sp)
 402a384:	302bd17a 	srai	r21,r6,5
 402a388:	2cc00417 	ldw	r19,16(r5)
 402a38c:	28800217 	ldw	r2,8(r5)
 402a390:	dd000415 	stw	r20,16(sp)
 402a394:	ace7883a 	add	r19,r21,r19
 402a398:	dc800215 	stw	r18,8(sp)
 402a39c:	dc400115 	stw	r17,4(sp)
 402a3a0:	dc000015 	stw	r16,0(sp)
 402a3a4:	dfc00615 	stw	ra,24(sp)
 402a3a8:	9c000044 	addi	r16,r19,1
 402a3ac:	2823883a 	mov	r17,r5
 402a3b0:	3029883a 	mov	r20,r6
 402a3b4:	2025883a 	mov	r18,r4
 402a3b8:	29400117 	ldw	r5,4(r5)
 402a3bc:	1400030e 	bge	r2,r16,402a3cc <__lshift+0x54>
 402a3c0:	1085883a 	add	r2,r2,r2
 402a3c4:	29400044 	addi	r5,r5,1
 402a3c8:	143ffd16 	blt	r2,r16,402a3c0 <__flash_rwdata_start+0xffff9498>
 402a3cc:	9009883a 	mov	r4,r18
 402a3d0:	4029bf80 	call	4029bf8 <_Balloc>
 402a3d4:	10c00504 	addi	r3,r2,20
 402a3d8:	0540070e 	bge	zero,r21,402a3f8 <__lshift+0x80>
 402a3dc:	ad6b883a 	add	r21,r21,r21
 402a3e0:	ad6b883a 	add	r21,r21,r21
 402a3e4:	1809883a 	mov	r4,r3
 402a3e8:	1d47883a 	add	r3,r3,r21
 402a3ec:	20000015 	stw	zero,0(r4)
 402a3f0:	21000104 	addi	r4,r4,4
 402a3f4:	193ffd1e 	bne	r3,r4,402a3ec <__flash_rwdata_start+0xffff94c4>
 402a3f8:	8a000417 	ldw	r8,16(r17)
 402a3fc:	89000504 	addi	r4,r17,20
 402a400:	a18007cc 	andi	r6,r20,31
 402a404:	4211883a 	add	r8,r8,r8
 402a408:	4211883a 	add	r8,r8,r8
 402a40c:	2211883a 	add	r8,r4,r8
 402a410:	30002326 	beq	r6,zero,402a4a0 <__lshift+0x128>
 402a414:	02400804 	movi	r9,32
 402a418:	4993c83a 	sub	r9,r9,r6
 402a41c:	000b883a 	mov	r5,zero
 402a420:	21c00017 	ldw	r7,0(r4)
 402a424:	1815883a 	mov	r10,r3
 402a428:	18c00104 	addi	r3,r3,4
 402a42c:	398e983a 	sll	r7,r7,r6
 402a430:	21000104 	addi	r4,r4,4
 402a434:	394ab03a 	or	r5,r7,r5
 402a438:	197fff15 	stw	r5,-4(r3)
 402a43c:	217fff17 	ldw	r5,-4(r4)
 402a440:	2a4ad83a 	srl	r5,r5,r9
 402a444:	223ff636 	bltu	r4,r8,402a420 <__flash_rwdata_start+0xffff94f8>
 402a448:	51400115 	stw	r5,4(r10)
 402a44c:	28001a1e 	bne	r5,zero,402a4b8 <__lshift+0x140>
 402a450:	843fffc4 	addi	r16,r16,-1
 402a454:	14000415 	stw	r16,16(r2)
 402a458:	88000826 	beq	r17,zero,402a47c <__lshift+0x104>
 402a45c:	89000117 	ldw	r4,4(r17)
 402a460:	90c01317 	ldw	r3,76(r18)
 402a464:	2109883a 	add	r4,r4,r4
 402a468:	2109883a 	add	r4,r4,r4
 402a46c:	1907883a 	add	r3,r3,r4
 402a470:	19000017 	ldw	r4,0(r3)
 402a474:	89000015 	stw	r4,0(r17)
 402a478:	1c400015 	stw	r17,0(r3)
 402a47c:	dfc00617 	ldw	ra,24(sp)
 402a480:	dd400517 	ldw	r21,20(sp)
 402a484:	dd000417 	ldw	r20,16(sp)
 402a488:	dcc00317 	ldw	r19,12(sp)
 402a48c:	dc800217 	ldw	r18,8(sp)
 402a490:	dc400117 	ldw	r17,4(sp)
 402a494:	dc000017 	ldw	r16,0(sp)
 402a498:	dec00704 	addi	sp,sp,28
 402a49c:	f800283a 	ret
 402a4a0:	21400017 	ldw	r5,0(r4)
 402a4a4:	18c00104 	addi	r3,r3,4
 402a4a8:	21000104 	addi	r4,r4,4
 402a4ac:	197fff15 	stw	r5,-4(r3)
 402a4b0:	223ffb36 	bltu	r4,r8,402a4a0 <__flash_rwdata_start+0xffff9578>
 402a4b4:	003fe606 	br	402a450 <__flash_rwdata_start+0xffff9528>
 402a4b8:	9c000084 	addi	r16,r19,2
 402a4bc:	003fe406 	br	402a450 <__flash_rwdata_start+0xffff9528>

0402a4c0 <__mcmp>:
 402a4c0:	20800417 	ldw	r2,16(r4)
 402a4c4:	28c00417 	ldw	r3,16(r5)
 402a4c8:	10c5c83a 	sub	r2,r2,r3
 402a4cc:	1000111e 	bne	r2,zero,402a514 <__mcmp+0x54>
 402a4d0:	18c7883a 	add	r3,r3,r3
 402a4d4:	18c7883a 	add	r3,r3,r3
 402a4d8:	21000504 	addi	r4,r4,20
 402a4dc:	29400504 	addi	r5,r5,20
 402a4e0:	20c5883a 	add	r2,r4,r3
 402a4e4:	28cb883a 	add	r5,r5,r3
 402a4e8:	00000106 	br	402a4f0 <__mcmp+0x30>
 402a4ec:	20800a2e 	bgeu	r4,r2,402a518 <__mcmp+0x58>
 402a4f0:	10bfff04 	addi	r2,r2,-4
 402a4f4:	297fff04 	addi	r5,r5,-4
 402a4f8:	11800017 	ldw	r6,0(r2)
 402a4fc:	28c00017 	ldw	r3,0(r5)
 402a500:	30fffa26 	beq	r6,r3,402a4ec <__flash_rwdata_start+0xffff95c4>
 402a504:	30c00236 	bltu	r6,r3,402a510 <__mcmp+0x50>
 402a508:	00800044 	movi	r2,1
 402a50c:	f800283a 	ret
 402a510:	00bfffc4 	movi	r2,-1
 402a514:	f800283a 	ret
 402a518:	0005883a 	mov	r2,zero
 402a51c:	f800283a 	ret

0402a520 <__mdiff>:
 402a520:	28c00417 	ldw	r3,16(r5)
 402a524:	30800417 	ldw	r2,16(r6)
 402a528:	defffa04 	addi	sp,sp,-24
 402a52c:	dcc00315 	stw	r19,12(sp)
 402a530:	dc800215 	stw	r18,8(sp)
 402a534:	dfc00515 	stw	ra,20(sp)
 402a538:	dd000415 	stw	r20,16(sp)
 402a53c:	dc400115 	stw	r17,4(sp)
 402a540:	dc000015 	stw	r16,0(sp)
 402a544:	1887c83a 	sub	r3,r3,r2
 402a548:	2825883a 	mov	r18,r5
 402a54c:	3027883a 	mov	r19,r6
 402a550:	1800141e 	bne	r3,zero,402a5a4 <__mdiff+0x84>
 402a554:	1085883a 	add	r2,r2,r2
 402a558:	1085883a 	add	r2,r2,r2
 402a55c:	2a000504 	addi	r8,r5,20
 402a560:	34000504 	addi	r16,r6,20
 402a564:	4087883a 	add	r3,r8,r2
 402a568:	8085883a 	add	r2,r16,r2
 402a56c:	00000106 	br	402a574 <__mdiff+0x54>
 402a570:	40c0592e 	bgeu	r8,r3,402a6d8 <__mdiff+0x1b8>
 402a574:	18ffff04 	addi	r3,r3,-4
 402a578:	10bfff04 	addi	r2,r2,-4
 402a57c:	19c00017 	ldw	r7,0(r3)
 402a580:	11400017 	ldw	r5,0(r2)
 402a584:	397ffa26 	beq	r7,r5,402a570 <__flash_rwdata_start+0xffff9648>
 402a588:	3940592e 	bgeu	r7,r5,402a6f0 <__mdiff+0x1d0>
 402a58c:	9005883a 	mov	r2,r18
 402a590:	4023883a 	mov	r17,r8
 402a594:	9825883a 	mov	r18,r19
 402a598:	05000044 	movi	r20,1
 402a59c:	1027883a 	mov	r19,r2
 402a5a0:	00000406 	br	402a5b4 <__mdiff+0x94>
 402a5a4:	18005616 	blt	r3,zero,402a700 <__mdiff+0x1e0>
 402a5a8:	34400504 	addi	r17,r6,20
 402a5ac:	2c000504 	addi	r16,r5,20
 402a5b0:	0029883a 	mov	r20,zero
 402a5b4:	91400117 	ldw	r5,4(r18)
 402a5b8:	4029bf80 	call	4029bf8 <_Balloc>
 402a5bc:	92400417 	ldw	r9,16(r18)
 402a5c0:	9b000417 	ldw	r12,16(r19)
 402a5c4:	12c00504 	addi	r11,r2,20
 402a5c8:	4a51883a 	add	r8,r9,r9
 402a5cc:	6319883a 	add	r12,r12,r12
 402a5d0:	4211883a 	add	r8,r8,r8
 402a5d4:	6319883a 	add	r12,r12,r12
 402a5d8:	15000315 	stw	r20,12(r2)
 402a5dc:	8211883a 	add	r8,r16,r8
 402a5e0:	8b19883a 	add	r12,r17,r12
 402a5e4:	0007883a 	mov	r3,zero
 402a5e8:	81400017 	ldw	r5,0(r16)
 402a5ec:	89c00017 	ldw	r7,0(r17)
 402a5f0:	59800104 	addi	r6,r11,4
 402a5f4:	293fffcc 	andi	r4,r5,65535
 402a5f8:	20c7883a 	add	r3,r4,r3
 402a5fc:	393fffcc 	andi	r4,r7,65535
 402a600:	1909c83a 	sub	r4,r3,r4
 402a604:	280ad43a 	srli	r5,r5,16
 402a608:	380ed43a 	srli	r7,r7,16
 402a60c:	2007d43a 	srai	r3,r4,16
 402a610:	213fffcc 	andi	r4,r4,65535
 402a614:	29cbc83a 	sub	r5,r5,r7
 402a618:	28c7883a 	add	r3,r5,r3
 402a61c:	180a943a 	slli	r5,r3,16
 402a620:	8c400104 	addi	r17,r17,4
 402a624:	84000104 	addi	r16,r16,4
 402a628:	2908b03a 	or	r4,r5,r4
 402a62c:	59000015 	stw	r4,0(r11)
 402a630:	1807d43a 	srai	r3,r3,16
 402a634:	3015883a 	mov	r10,r6
 402a638:	3017883a 	mov	r11,r6
 402a63c:	8b3fea36 	bltu	r17,r12,402a5e8 <__flash_rwdata_start+0xffff96c0>
 402a640:	8200162e 	bgeu	r16,r8,402a69c <__mdiff+0x17c>
 402a644:	8017883a 	mov	r11,r16
 402a648:	59400017 	ldw	r5,0(r11)
 402a64c:	31800104 	addi	r6,r6,4
 402a650:	5ac00104 	addi	r11,r11,4
 402a654:	293fffcc 	andi	r4,r5,65535
 402a658:	20c7883a 	add	r3,r4,r3
 402a65c:	280ed43a 	srli	r7,r5,16
 402a660:	180bd43a 	srai	r5,r3,16
 402a664:	193fffcc 	andi	r4,r3,65535
 402a668:	3947883a 	add	r3,r7,r5
 402a66c:	180a943a 	slli	r5,r3,16
 402a670:	1807d43a 	srai	r3,r3,16
 402a674:	2908b03a 	or	r4,r5,r4
 402a678:	313fff15 	stw	r4,-4(r6)
 402a67c:	5a3ff236 	bltu	r11,r8,402a648 <__flash_rwdata_start+0xffff9720>
 402a680:	0406303a 	nor	r3,zero,r16
 402a684:	1a07883a 	add	r3,r3,r8
 402a688:	1806d0ba 	srli	r3,r3,2
 402a68c:	18c00044 	addi	r3,r3,1
 402a690:	18c7883a 	add	r3,r3,r3
 402a694:	18c7883a 	add	r3,r3,r3
 402a698:	50d5883a 	add	r10,r10,r3
 402a69c:	50ffff04 	addi	r3,r10,-4
 402a6a0:	2000041e 	bne	r4,zero,402a6b4 <__mdiff+0x194>
 402a6a4:	18ffff04 	addi	r3,r3,-4
 402a6a8:	19000017 	ldw	r4,0(r3)
 402a6ac:	4a7fffc4 	addi	r9,r9,-1
 402a6b0:	203ffc26 	beq	r4,zero,402a6a4 <__flash_rwdata_start+0xffff977c>
 402a6b4:	12400415 	stw	r9,16(r2)
 402a6b8:	dfc00517 	ldw	ra,20(sp)
 402a6bc:	dd000417 	ldw	r20,16(sp)
 402a6c0:	dcc00317 	ldw	r19,12(sp)
 402a6c4:	dc800217 	ldw	r18,8(sp)
 402a6c8:	dc400117 	ldw	r17,4(sp)
 402a6cc:	dc000017 	ldw	r16,0(sp)
 402a6d0:	dec00604 	addi	sp,sp,24
 402a6d4:	f800283a 	ret
 402a6d8:	000b883a 	mov	r5,zero
 402a6dc:	4029bf80 	call	4029bf8 <_Balloc>
 402a6e0:	00c00044 	movi	r3,1
 402a6e4:	10c00415 	stw	r3,16(r2)
 402a6e8:	10000515 	stw	zero,20(r2)
 402a6ec:	003ff206 	br	402a6b8 <__flash_rwdata_start+0xffff9790>
 402a6f0:	8023883a 	mov	r17,r16
 402a6f4:	0029883a 	mov	r20,zero
 402a6f8:	4021883a 	mov	r16,r8
 402a6fc:	003fad06 	br	402a5b4 <__flash_rwdata_start+0xffff968c>
 402a700:	9005883a 	mov	r2,r18
 402a704:	94400504 	addi	r17,r18,20
 402a708:	9c000504 	addi	r16,r19,20
 402a70c:	9825883a 	mov	r18,r19
 402a710:	05000044 	movi	r20,1
 402a714:	1027883a 	mov	r19,r2
 402a718:	003fa606 	br	402a5b4 <__flash_rwdata_start+0xffff968c>

0402a71c <__ulp>:
 402a71c:	295ffc2c 	andhi	r5,r5,32752
 402a720:	00bf3034 	movhi	r2,64704
 402a724:	2887883a 	add	r3,r5,r2
 402a728:	00c0020e 	bge	zero,r3,402a734 <__ulp+0x18>
 402a72c:	0005883a 	mov	r2,zero
 402a730:	f800283a 	ret
 402a734:	00c7c83a 	sub	r3,zero,r3
 402a738:	1807d53a 	srai	r3,r3,20
 402a73c:	008004c4 	movi	r2,19
 402a740:	10c00b0e 	bge	r2,r3,402a770 <__ulp+0x54>
 402a744:	18bffb04 	addi	r2,r3,-20
 402a748:	01000784 	movi	r4,30
 402a74c:	0007883a 	mov	r3,zero
 402a750:	20800516 	blt	r4,r2,402a768 <__ulp+0x4c>
 402a754:	010007c4 	movi	r4,31
 402a758:	2089c83a 	sub	r4,r4,r2
 402a75c:	00800044 	movi	r2,1
 402a760:	1104983a 	sll	r2,r2,r4
 402a764:	f800283a 	ret
 402a768:	00800044 	movi	r2,1
 402a76c:	f800283a 	ret
 402a770:	01400234 	movhi	r5,8
 402a774:	28c7d83a 	sra	r3,r5,r3
 402a778:	0005883a 	mov	r2,zero
 402a77c:	f800283a 	ret

0402a780 <__b2d>:
 402a780:	defffa04 	addi	sp,sp,-24
 402a784:	dc000015 	stw	r16,0(sp)
 402a788:	24000417 	ldw	r16,16(r4)
 402a78c:	dc400115 	stw	r17,4(sp)
 402a790:	24400504 	addi	r17,r4,20
 402a794:	8421883a 	add	r16,r16,r16
 402a798:	8421883a 	add	r16,r16,r16
 402a79c:	8c21883a 	add	r16,r17,r16
 402a7a0:	dc800215 	stw	r18,8(sp)
 402a7a4:	84bfff17 	ldw	r18,-4(r16)
 402a7a8:	dd000415 	stw	r20,16(sp)
 402a7ac:	dcc00315 	stw	r19,12(sp)
 402a7b0:	9009883a 	mov	r4,r18
 402a7b4:	2829883a 	mov	r20,r5
 402a7b8:	dfc00515 	stw	ra,20(sp)
 402a7bc:	4029eec0 	call	4029eec <__hi0bits>
 402a7c0:	00c00804 	movi	r3,32
 402a7c4:	1889c83a 	sub	r4,r3,r2
 402a7c8:	a1000015 	stw	r4,0(r20)
 402a7cc:	01000284 	movi	r4,10
 402a7d0:	84ffff04 	addi	r19,r16,-4
 402a7d4:	20801216 	blt	r4,r2,402a820 <__b2d+0xa0>
 402a7d8:	018002c4 	movi	r6,11
 402a7dc:	308dc83a 	sub	r6,r6,r2
 402a7e0:	9186d83a 	srl	r3,r18,r6
 402a7e4:	18cffc34 	orhi	r3,r3,16368
 402a7e8:	8cc0212e 	bgeu	r17,r19,402a870 <__b2d+0xf0>
 402a7ec:	813ffe17 	ldw	r4,-8(r16)
 402a7f0:	218cd83a 	srl	r6,r4,r6
 402a7f4:	10800544 	addi	r2,r2,21
 402a7f8:	9084983a 	sll	r2,r18,r2
 402a7fc:	1184b03a 	or	r2,r2,r6
 402a800:	dfc00517 	ldw	ra,20(sp)
 402a804:	dd000417 	ldw	r20,16(sp)
 402a808:	dcc00317 	ldw	r19,12(sp)
 402a80c:	dc800217 	ldw	r18,8(sp)
 402a810:	dc400117 	ldw	r17,4(sp)
 402a814:	dc000017 	ldw	r16,0(sp)
 402a818:	dec00604 	addi	sp,sp,24
 402a81c:	f800283a 	ret
 402a820:	8cc00f2e 	bgeu	r17,r19,402a860 <__b2d+0xe0>
 402a824:	117ffd44 	addi	r5,r2,-11
 402a828:	80bffe17 	ldw	r2,-8(r16)
 402a82c:	28000e26 	beq	r5,zero,402a868 <__b2d+0xe8>
 402a830:	1949c83a 	sub	r4,r3,r5
 402a834:	9164983a 	sll	r18,r18,r5
 402a838:	1106d83a 	srl	r3,r2,r4
 402a83c:	81bffe04 	addi	r6,r16,-8
 402a840:	948ffc34 	orhi	r18,r18,16368
 402a844:	90c6b03a 	or	r3,r18,r3
 402a848:	89800e2e 	bgeu	r17,r6,402a884 <__b2d+0x104>
 402a84c:	81bffd17 	ldw	r6,-12(r16)
 402a850:	1144983a 	sll	r2,r2,r5
 402a854:	310ad83a 	srl	r5,r6,r4
 402a858:	2884b03a 	or	r2,r5,r2
 402a85c:	003fe806 	br	402a800 <__flash_rwdata_start+0xffff98d8>
 402a860:	10bffd44 	addi	r2,r2,-11
 402a864:	1000041e 	bne	r2,zero,402a878 <__b2d+0xf8>
 402a868:	90cffc34 	orhi	r3,r18,16368
 402a86c:	003fe406 	br	402a800 <__flash_rwdata_start+0xffff98d8>
 402a870:	000d883a 	mov	r6,zero
 402a874:	003fdf06 	br	402a7f4 <__flash_rwdata_start+0xffff98cc>
 402a878:	90a4983a 	sll	r18,r18,r2
 402a87c:	0005883a 	mov	r2,zero
 402a880:	003ff906 	br	402a868 <__flash_rwdata_start+0xffff9940>
 402a884:	1144983a 	sll	r2,r2,r5
 402a888:	003fdd06 	br	402a800 <__flash_rwdata_start+0xffff98d8>

0402a88c <__d2b>:
 402a88c:	defff804 	addi	sp,sp,-32
 402a890:	dc000215 	stw	r16,8(sp)
 402a894:	3021883a 	mov	r16,r6
 402a898:	dc400315 	stw	r17,12(sp)
 402a89c:	8022907a 	slli	r17,r16,1
 402a8a0:	dd000615 	stw	r20,24(sp)
 402a8a4:	2829883a 	mov	r20,r5
 402a8a8:	01400044 	movi	r5,1
 402a8ac:	dcc00515 	stw	r19,20(sp)
 402a8b0:	dc800415 	stw	r18,16(sp)
 402a8b4:	dfc00715 	stw	ra,28(sp)
 402a8b8:	3825883a 	mov	r18,r7
 402a8bc:	8822d57a 	srli	r17,r17,21
 402a8c0:	4029bf80 	call	4029bf8 <_Balloc>
 402a8c4:	1027883a 	mov	r19,r2
 402a8c8:	00800434 	movhi	r2,16
 402a8cc:	10bfffc4 	addi	r2,r2,-1
 402a8d0:	808c703a 	and	r6,r16,r2
 402a8d4:	88000126 	beq	r17,zero,402a8dc <__d2b+0x50>
 402a8d8:	31800434 	orhi	r6,r6,16
 402a8dc:	d9800015 	stw	r6,0(sp)
 402a8e0:	a0002426 	beq	r20,zero,402a974 <__d2b+0xe8>
 402a8e4:	d9000104 	addi	r4,sp,4
 402a8e8:	dd000115 	stw	r20,4(sp)
 402a8ec:	4029f540 	call	4029f54 <__lo0bits>
 402a8f0:	d8c00017 	ldw	r3,0(sp)
 402a8f4:	10002f1e 	bne	r2,zero,402a9b4 <__d2b+0x128>
 402a8f8:	d9000117 	ldw	r4,4(sp)
 402a8fc:	99000515 	stw	r4,20(r19)
 402a900:	1821003a 	cmpeq	r16,r3,zero
 402a904:	01000084 	movi	r4,2
 402a908:	2421c83a 	sub	r16,r4,r16
 402a90c:	98c00615 	stw	r3,24(r19)
 402a910:	9c000415 	stw	r16,16(r19)
 402a914:	88001f1e 	bne	r17,zero,402a994 <__d2b+0x108>
 402a918:	10bef384 	addi	r2,r2,-1074
 402a91c:	90800015 	stw	r2,0(r18)
 402a920:	00900034 	movhi	r2,16384
 402a924:	10bfffc4 	addi	r2,r2,-1
 402a928:	8085883a 	add	r2,r16,r2
 402a92c:	1085883a 	add	r2,r2,r2
 402a930:	1085883a 	add	r2,r2,r2
 402a934:	9885883a 	add	r2,r19,r2
 402a938:	11000517 	ldw	r4,20(r2)
 402a93c:	8020917a 	slli	r16,r16,5
 402a940:	4029eec0 	call	4029eec <__hi0bits>
 402a944:	d8c00817 	ldw	r3,32(sp)
 402a948:	8085c83a 	sub	r2,r16,r2
 402a94c:	18800015 	stw	r2,0(r3)
 402a950:	9805883a 	mov	r2,r19
 402a954:	dfc00717 	ldw	ra,28(sp)
 402a958:	dd000617 	ldw	r20,24(sp)
 402a95c:	dcc00517 	ldw	r19,20(sp)
 402a960:	dc800417 	ldw	r18,16(sp)
 402a964:	dc400317 	ldw	r17,12(sp)
 402a968:	dc000217 	ldw	r16,8(sp)
 402a96c:	dec00804 	addi	sp,sp,32
 402a970:	f800283a 	ret
 402a974:	d809883a 	mov	r4,sp
 402a978:	4029f540 	call	4029f54 <__lo0bits>
 402a97c:	d8c00017 	ldw	r3,0(sp)
 402a980:	04000044 	movi	r16,1
 402a984:	9c000415 	stw	r16,16(r19)
 402a988:	98c00515 	stw	r3,20(r19)
 402a98c:	10800804 	addi	r2,r2,32
 402a990:	883fe126 	beq	r17,zero,402a918 <__flash_rwdata_start+0xffff99f0>
 402a994:	00c00d44 	movi	r3,53
 402a998:	8c7ef344 	addi	r17,r17,-1075
 402a99c:	88a3883a 	add	r17,r17,r2
 402a9a0:	1885c83a 	sub	r2,r3,r2
 402a9a4:	d8c00817 	ldw	r3,32(sp)
 402a9a8:	94400015 	stw	r17,0(r18)
 402a9ac:	18800015 	stw	r2,0(r3)
 402a9b0:	003fe706 	br	402a950 <__flash_rwdata_start+0xffff9a28>
 402a9b4:	01000804 	movi	r4,32
 402a9b8:	2089c83a 	sub	r4,r4,r2
 402a9bc:	1908983a 	sll	r4,r3,r4
 402a9c0:	d9400117 	ldw	r5,4(sp)
 402a9c4:	1886d83a 	srl	r3,r3,r2
 402a9c8:	2148b03a 	or	r4,r4,r5
 402a9cc:	99000515 	stw	r4,20(r19)
 402a9d0:	d8c00015 	stw	r3,0(sp)
 402a9d4:	003fca06 	br	402a900 <__flash_rwdata_start+0xffff99d8>

0402a9d8 <__ratio>:
 402a9d8:	defff904 	addi	sp,sp,-28
 402a9dc:	dc400315 	stw	r17,12(sp)
 402a9e0:	2823883a 	mov	r17,r5
 402a9e4:	d9400104 	addi	r5,sp,4
 402a9e8:	dfc00615 	stw	ra,24(sp)
 402a9ec:	dcc00515 	stw	r19,20(sp)
 402a9f0:	dc800415 	stw	r18,16(sp)
 402a9f4:	2027883a 	mov	r19,r4
 402a9f8:	dc000215 	stw	r16,8(sp)
 402a9fc:	402a7800 	call	402a780 <__b2d>
 402aa00:	d80b883a 	mov	r5,sp
 402aa04:	8809883a 	mov	r4,r17
 402aa08:	1025883a 	mov	r18,r2
 402aa0c:	1821883a 	mov	r16,r3
 402aa10:	402a7800 	call	402a780 <__b2d>
 402aa14:	8a000417 	ldw	r8,16(r17)
 402aa18:	99000417 	ldw	r4,16(r19)
 402aa1c:	d9400117 	ldw	r5,4(sp)
 402aa20:	2209c83a 	sub	r4,r4,r8
 402aa24:	2010917a 	slli	r8,r4,5
 402aa28:	d9000017 	ldw	r4,0(sp)
 402aa2c:	2909c83a 	sub	r4,r5,r4
 402aa30:	4109883a 	add	r4,r8,r4
 402aa34:	01000e0e 	bge	zero,r4,402aa70 <__ratio+0x98>
 402aa38:	2008953a 	slli	r4,r4,20
 402aa3c:	2421883a 	add	r16,r4,r16
 402aa40:	100d883a 	mov	r6,r2
 402aa44:	180f883a 	mov	r7,r3
 402aa48:	9009883a 	mov	r4,r18
 402aa4c:	800b883a 	mov	r5,r16
 402aa50:	4021f140 	call	4021f14 <__divdf3>
 402aa54:	dfc00617 	ldw	ra,24(sp)
 402aa58:	dcc00517 	ldw	r19,20(sp)
 402aa5c:	dc800417 	ldw	r18,16(sp)
 402aa60:	dc400317 	ldw	r17,12(sp)
 402aa64:	dc000217 	ldw	r16,8(sp)
 402aa68:	dec00704 	addi	sp,sp,28
 402aa6c:	f800283a 	ret
 402aa70:	2008953a 	slli	r4,r4,20
 402aa74:	1907c83a 	sub	r3,r3,r4
 402aa78:	003ff106 	br	402aa40 <__flash_rwdata_start+0xffff9b18>

0402aa7c <_mprec_log10>:
 402aa7c:	defffe04 	addi	sp,sp,-8
 402aa80:	dc000015 	stw	r16,0(sp)
 402aa84:	dfc00115 	stw	ra,4(sp)
 402aa88:	008005c4 	movi	r2,23
 402aa8c:	2021883a 	mov	r16,r4
 402aa90:	11000d0e 	bge	r2,r4,402aac8 <_mprec_log10+0x4c>
 402aa94:	0005883a 	mov	r2,zero
 402aa98:	00cffc34 	movhi	r3,16368
 402aa9c:	843fffc4 	addi	r16,r16,-1
 402aaa0:	000d883a 	mov	r6,zero
 402aaa4:	01d00934 	movhi	r7,16420
 402aaa8:	1009883a 	mov	r4,r2
 402aaac:	180b883a 	mov	r5,r3
 402aab0:	4022a540 	call	4022a54 <__muldf3>
 402aab4:	803ff91e 	bne	r16,zero,402aa9c <__flash_rwdata_start+0xffff9b74>
 402aab8:	dfc00117 	ldw	ra,4(sp)
 402aabc:	dc000017 	ldw	r16,0(sp)
 402aac0:	dec00204 	addi	sp,sp,8
 402aac4:	f800283a 	ret
 402aac8:	202090fa 	slli	r16,r4,3
 402aacc:	00800034 	movhi	r2,0
 402aad0:	10809304 	addi	r2,r2,588
 402aad4:	1421883a 	add	r16,r2,r16
 402aad8:	80800017 	ldw	r2,0(r16)
 402aadc:	80c00117 	ldw	r3,4(r16)
 402aae0:	dfc00117 	ldw	ra,4(sp)
 402aae4:	dc000017 	ldw	r16,0(sp)
 402aae8:	dec00204 	addi	sp,sp,8
 402aaec:	f800283a 	ret

0402aaf0 <__copybits>:
 402aaf0:	297fffc4 	addi	r5,r5,-1
 402aaf4:	280fd17a 	srai	r7,r5,5
 402aaf8:	30c00417 	ldw	r3,16(r6)
 402aafc:	30800504 	addi	r2,r6,20
 402ab00:	39c00044 	addi	r7,r7,1
 402ab04:	18c7883a 	add	r3,r3,r3
 402ab08:	39cf883a 	add	r7,r7,r7
 402ab0c:	18c7883a 	add	r3,r3,r3
 402ab10:	39cf883a 	add	r7,r7,r7
 402ab14:	10c7883a 	add	r3,r2,r3
 402ab18:	21cf883a 	add	r7,r4,r7
 402ab1c:	10c00d2e 	bgeu	r2,r3,402ab54 <__copybits+0x64>
 402ab20:	200b883a 	mov	r5,r4
 402ab24:	12000017 	ldw	r8,0(r2)
 402ab28:	29400104 	addi	r5,r5,4
 402ab2c:	10800104 	addi	r2,r2,4
 402ab30:	2a3fff15 	stw	r8,-4(r5)
 402ab34:	10fffb36 	bltu	r2,r3,402ab24 <__flash_rwdata_start+0xffff9bfc>
 402ab38:	1985c83a 	sub	r2,r3,r6
 402ab3c:	10bffac4 	addi	r2,r2,-21
 402ab40:	1004d0ba 	srli	r2,r2,2
 402ab44:	10800044 	addi	r2,r2,1
 402ab48:	1085883a 	add	r2,r2,r2
 402ab4c:	1085883a 	add	r2,r2,r2
 402ab50:	2089883a 	add	r4,r4,r2
 402ab54:	21c0032e 	bgeu	r4,r7,402ab64 <__copybits+0x74>
 402ab58:	20000015 	stw	zero,0(r4)
 402ab5c:	21000104 	addi	r4,r4,4
 402ab60:	21fffd36 	bltu	r4,r7,402ab58 <__flash_rwdata_start+0xffff9c30>
 402ab64:	f800283a 	ret

0402ab68 <__any_on>:
 402ab68:	20c00417 	ldw	r3,16(r4)
 402ab6c:	2805d17a 	srai	r2,r5,5
 402ab70:	21000504 	addi	r4,r4,20
 402ab74:	18800d0e 	bge	r3,r2,402abac <__any_on+0x44>
 402ab78:	18c7883a 	add	r3,r3,r3
 402ab7c:	18c7883a 	add	r3,r3,r3
 402ab80:	20c7883a 	add	r3,r4,r3
 402ab84:	20c0192e 	bgeu	r4,r3,402abec <__any_on+0x84>
 402ab88:	18bfff17 	ldw	r2,-4(r3)
 402ab8c:	18ffff04 	addi	r3,r3,-4
 402ab90:	1000041e 	bne	r2,zero,402aba4 <__any_on+0x3c>
 402ab94:	20c0142e 	bgeu	r4,r3,402abe8 <__any_on+0x80>
 402ab98:	18ffff04 	addi	r3,r3,-4
 402ab9c:	19400017 	ldw	r5,0(r3)
 402aba0:	283ffc26 	beq	r5,zero,402ab94 <__flash_rwdata_start+0xffff9c6c>
 402aba4:	00800044 	movi	r2,1
 402aba8:	f800283a 	ret
 402abac:	10c00a0e 	bge	r2,r3,402abd8 <__any_on+0x70>
 402abb0:	1085883a 	add	r2,r2,r2
 402abb4:	1085883a 	add	r2,r2,r2
 402abb8:	294007cc 	andi	r5,r5,31
 402abbc:	2087883a 	add	r3,r4,r2
 402abc0:	283ff026 	beq	r5,zero,402ab84 <__flash_rwdata_start+0xffff9c5c>
 402abc4:	19800017 	ldw	r6,0(r3)
 402abc8:	3144d83a 	srl	r2,r6,r5
 402abcc:	114a983a 	sll	r5,r2,r5
 402abd0:	317ff41e 	bne	r6,r5,402aba4 <__flash_rwdata_start+0xffff9c7c>
 402abd4:	003feb06 	br	402ab84 <__flash_rwdata_start+0xffff9c5c>
 402abd8:	1085883a 	add	r2,r2,r2
 402abdc:	1085883a 	add	r2,r2,r2
 402abe0:	2087883a 	add	r3,r4,r2
 402abe4:	003fe706 	br	402ab84 <__flash_rwdata_start+0xffff9c5c>
 402abe8:	f800283a 	ret
 402abec:	0005883a 	mov	r2,zero
 402abf0:	f800283a 	ret

0402abf4 <_realloc_r>:
 402abf4:	defff604 	addi	sp,sp,-40
 402abf8:	dc800215 	stw	r18,8(sp)
 402abfc:	dfc00915 	stw	ra,36(sp)
 402ac00:	df000815 	stw	fp,32(sp)
 402ac04:	ddc00715 	stw	r23,28(sp)
 402ac08:	dd800615 	stw	r22,24(sp)
 402ac0c:	dd400515 	stw	r21,20(sp)
 402ac10:	dd000415 	stw	r20,16(sp)
 402ac14:	dcc00315 	stw	r19,12(sp)
 402ac18:	dc400115 	stw	r17,4(sp)
 402ac1c:	dc000015 	stw	r16,0(sp)
 402ac20:	3025883a 	mov	r18,r6
 402ac24:	2800b726 	beq	r5,zero,402af04 <_realloc_r+0x310>
 402ac28:	282b883a 	mov	r21,r5
 402ac2c:	2029883a 	mov	r20,r4
 402ac30:	402e7e80 	call	402e7e8 <__malloc_lock>
 402ac34:	a8bfff17 	ldw	r2,-4(r21)
 402ac38:	043fff04 	movi	r16,-4
 402ac3c:	90c002c4 	addi	r3,r18,11
 402ac40:	01000584 	movi	r4,22
 402ac44:	acfffe04 	addi	r19,r21,-8
 402ac48:	1420703a 	and	r16,r2,r16
 402ac4c:	20c0332e 	bgeu	r4,r3,402ad1c <_realloc_r+0x128>
 402ac50:	047ffe04 	movi	r17,-8
 402ac54:	1c62703a 	and	r17,r3,r17
 402ac58:	8807883a 	mov	r3,r17
 402ac5c:	88005816 	blt	r17,zero,402adc0 <_realloc_r+0x1cc>
 402ac60:	8c805736 	bltu	r17,r18,402adc0 <_realloc_r+0x1cc>
 402ac64:	80c0300e 	bge	r16,r3,402ad28 <_realloc_r+0x134>
 402ac68:	07000034 	movhi	fp,0
 402ac6c:	e7020904 	addi	fp,fp,2084
 402ac70:	e1c00217 	ldw	r7,8(fp)
 402ac74:	9c09883a 	add	r4,r19,r16
 402ac78:	22000117 	ldw	r8,4(r4)
 402ac7c:	21c06326 	beq	r4,r7,402ae0c <_realloc_r+0x218>
 402ac80:	017fff84 	movi	r5,-2
 402ac84:	414a703a 	and	r5,r8,r5
 402ac88:	214b883a 	add	r5,r4,r5
 402ac8c:	29800117 	ldw	r6,4(r5)
 402ac90:	3180004c 	andi	r6,r6,1
 402ac94:	30003f26 	beq	r6,zero,402ad94 <_realloc_r+0x1a0>
 402ac98:	1080004c 	andi	r2,r2,1
 402ac9c:	10008326 	beq	r2,zero,402aeac <_realloc_r+0x2b8>
 402aca0:	900b883a 	mov	r5,r18
 402aca4:	a009883a 	mov	r4,r20
 402aca8:	4028f3c0 	call	4028f3c <_malloc_r>
 402acac:	1025883a 	mov	r18,r2
 402acb0:	10011e26 	beq	r2,zero,402b12c <_realloc_r+0x538>
 402acb4:	a93fff17 	ldw	r4,-4(r21)
 402acb8:	10fffe04 	addi	r3,r2,-8
 402acbc:	00bfff84 	movi	r2,-2
 402acc0:	2084703a 	and	r2,r4,r2
 402acc4:	9885883a 	add	r2,r19,r2
 402acc8:	1880ee26 	beq	r3,r2,402b084 <_realloc_r+0x490>
 402accc:	81bfff04 	addi	r6,r16,-4
 402acd0:	00800904 	movi	r2,36
 402acd4:	1180b836 	bltu	r2,r6,402afb8 <_realloc_r+0x3c4>
 402acd8:	00c004c4 	movi	r3,19
 402acdc:	19809636 	bltu	r3,r6,402af38 <_realloc_r+0x344>
 402ace0:	9005883a 	mov	r2,r18
 402ace4:	a807883a 	mov	r3,r21
 402ace8:	19000017 	ldw	r4,0(r3)
 402acec:	11000015 	stw	r4,0(r2)
 402acf0:	19000117 	ldw	r4,4(r3)
 402acf4:	11000115 	stw	r4,4(r2)
 402acf8:	18c00217 	ldw	r3,8(r3)
 402acfc:	10c00215 	stw	r3,8(r2)
 402ad00:	a80b883a 	mov	r5,r21
 402ad04:	a009883a 	mov	r4,r20
 402ad08:	40282f40 	call	40282f4 <_free_r>
 402ad0c:	a009883a 	mov	r4,r20
 402ad10:	402e80c0 	call	402e80c <__malloc_unlock>
 402ad14:	9005883a 	mov	r2,r18
 402ad18:	00001206 	br	402ad64 <_realloc_r+0x170>
 402ad1c:	00c00404 	movi	r3,16
 402ad20:	1823883a 	mov	r17,r3
 402ad24:	003fce06 	br	402ac60 <__flash_rwdata_start+0xffff9d38>
 402ad28:	a825883a 	mov	r18,r21
 402ad2c:	8445c83a 	sub	r2,r16,r17
 402ad30:	00c003c4 	movi	r3,15
 402ad34:	18802636 	bltu	r3,r2,402add0 <_realloc_r+0x1dc>
 402ad38:	99800117 	ldw	r6,4(r19)
 402ad3c:	9c07883a 	add	r3,r19,r16
 402ad40:	3180004c 	andi	r6,r6,1
 402ad44:	3420b03a 	or	r16,r6,r16
 402ad48:	9c000115 	stw	r16,4(r19)
 402ad4c:	18800117 	ldw	r2,4(r3)
 402ad50:	10800054 	ori	r2,r2,1
 402ad54:	18800115 	stw	r2,4(r3)
 402ad58:	a009883a 	mov	r4,r20
 402ad5c:	402e80c0 	call	402e80c <__malloc_unlock>
 402ad60:	9005883a 	mov	r2,r18
 402ad64:	dfc00917 	ldw	ra,36(sp)
 402ad68:	df000817 	ldw	fp,32(sp)
 402ad6c:	ddc00717 	ldw	r23,28(sp)
 402ad70:	dd800617 	ldw	r22,24(sp)
 402ad74:	dd400517 	ldw	r21,20(sp)
 402ad78:	dd000417 	ldw	r20,16(sp)
 402ad7c:	dcc00317 	ldw	r19,12(sp)
 402ad80:	dc800217 	ldw	r18,8(sp)
 402ad84:	dc400117 	ldw	r17,4(sp)
 402ad88:	dc000017 	ldw	r16,0(sp)
 402ad8c:	dec00a04 	addi	sp,sp,40
 402ad90:	f800283a 	ret
 402ad94:	017fff04 	movi	r5,-4
 402ad98:	414a703a 	and	r5,r8,r5
 402ad9c:	814d883a 	add	r6,r16,r5
 402ada0:	30c01f16 	blt	r6,r3,402ae20 <_realloc_r+0x22c>
 402ada4:	20800317 	ldw	r2,12(r4)
 402ada8:	20c00217 	ldw	r3,8(r4)
 402adac:	a825883a 	mov	r18,r21
 402adb0:	3021883a 	mov	r16,r6
 402adb4:	18800315 	stw	r2,12(r3)
 402adb8:	10c00215 	stw	r3,8(r2)
 402adbc:	003fdb06 	br	402ad2c <__flash_rwdata_start+0xffff9e04>
 402adc0:	00800304 	movi	r2,12
 402adc4:	a0800015 	stw	r2,0(r20)
 402adc8:	0005883a 	mov	r2,zero
 402adcc:	003fe506 	br	402ad64 <__flash_rwdata_start+0xffff9e3c>
 402add0:	98c00117 	ldw	r3,4(r19)
 402add4:	9c4b883a 	add	r5,r19,r17
 402add8:	11000054 	ori	r4,r2,1
 402addc:	18c0004c 	andi	r3,r3,1
 402ade0:	1c62b03a 	or	r17,r3,r17
 402ade4:	9c400115 	stw	r17,4(r19)
 402ade8:	29000115 	stw	r4,4(r5)
 402adec:	2885883a 	add	r2,r5,r2
 402adf0:	10c00117 	ldw	r3,4(r2)
 402adf4:	29400204 	addi	r5,r5,8
 402adf8:	a009883a 	mov	r4,r20
 402adfc:	18c00054 	ori	r3,r3,1
 402ae00:	10c00115 	stw	r3,4(r2)
 402ae04:	40282f40 	call	40282f4 <_free_r>
 402ae08:	003fd306 	br	402ad58 <__flash_rwdata_start+0xffff9e30>
 402ae0c:	017fff04 	movi	r5,-4
 402ae10:	414a703a 	and	r5,r8,r5
 402ae14:	89800404 	addi	r6,r17,16
 402ae18:	8151883a 	add	r8,r16,r5
 402ae1c:	4180590e 	bge	r8,r6,402af84 <_realloc_r+0x390>
 402ae20:	1080004c 	andi	r2,r2,1
 402ae24:	103f9e1e 	bne	r2,zero,402aca0 <__flash_rwdata_start+0xffff9d78>
 402ae28:	adbffe17 	ldw	r22,-8(r21)
 402ae2c:	00bfff04 	movi	r2,-4
 402ae30:	9dadc83a 	sub	r22,r19,r22
 402ae34:	b1800117 	ldw	r6,4(r22)
 402ae38:	3084703a 	and	r2,r6,r2
 402ae3c:	20002026 	beq	r4,zero,402aec0 <_realloc_r+0x2cc>
 402ae40:	80af883a 	add	r23,r16,r2
 402ae44:	b96f883a 	add	r23,r23,r5
 402ae48:	21c05f26 	beq	r4,r7,402afc8 <_realloc_r+0x3d4>
 402ae4c:	b8c01c16 	blt	r23,r3,402aec0 <_realloc_r+0x2cc>
 402ae50:	20800317 	ldw	r2,12(r4)
 402ae54:	20c00217 	ldw	r3,8(r4)
 402ae58:	81bfff04 	addi	r6,r16,-4
 402ae5c:	01000904 	movi	r4,36
 402ae60:	18800315 	stw	r2,12(r3)
 402ae64:	10c00215 	stw	r3,8(r2)
 402ae68:	b0c00217 	ldw	r3,8(r22)
 402ae6c:	b0800317 	ldw	r2,12(r22)
 402ae70:	b4800204 	addi	r18,r22,8
 402ae74:	18800315 	stw	r2,12(r3)
 402ae78:	10c00215 	stw	r3,8(r2)
 402ae7c:	21801b36 	bltu	r4,r6,402aeec <_realloc_r+0x2f8>
 402ae80:	008004c4 	movi	r2,19
 402ae84:	1180352e 	bgeu	r2,r6,402af5c <_realloc_r+0x368>
 402ae88:	a8800017 	ldw	r2,0(r21)
 402ae8c:	b0800215 	stw	r2,8(r22)
 402ae90:	a8800117 	ldw	r2,4(r21)
 402ae94:	b0800315 	stw	r2,12(r22)
 402ae98:	008006c4 	movi	r2,27
 402ae9c:	11807f36 	bltu	r2,r6,402b09c <_realloc_r+0x4a8>
 402aea0:	b0800404 	addi	r2,r22,16
 402aea4:	ad400204 	addi	r21,r21,8
 402aea8:	00002d06 	br	402af60 <_realloc_r+0x36c>
 402aeac:	adbffe17 	ldw	r22,-8(r21)
 402aeb0:	00bfff04 	movi	r2,-4
 402aeb4:	9dadc83a 	sub	r22,r19,r22
 402aeb8:	b1000117 	ldw	r4,4(r22)
 402aebc:	2084703a 	and	r2,r4,r2
 402aec0:	b03f7726 	beq	r22,zero,402aca0 <__flash_rwdata_start+0xffff9d78>
 402aec4:	80af883a 	add	r23,r16,r2
 402aec8:	b8ff7516 	blt	r23,r3,402aca0 <__flash_rwdata_start+0xffff9d78>
 402aecc:	b0800317 	ldw	r2,12(r22)
 402aed0:	b0c00217 	ldw	r3,8(r22)
 402aed4:	81bfff04 	addi	r6,r16,-4
 402aed8:	01000904 	movi	r4,36
 402aedc:	18800315 	stw	r2,12(r3)
 402aee0:	10c00215 	stw	r3,8(r2)
 402aee4:	b4800204 	addi	r18,r22,8
 402aee8:	21bfe52e 	bgeu	r4,r6,402ae80 <__flash_rwdata_start+0xffff9f58>
 402aeec:	a80b883a 	mov	r5,r21
 402aef0:	9009883a 	mov	r4,r18
 402aef4:	40299740 	call	4029974 <memmove>
 402aef8:	b821883a 	mov	r16,r23
 402aefc:	b027883a 	mov	r19,r22
 402af00:	003f8a06 	br	402ad2c <__flash_rwdata_start+0xffff9e04>
 402af04:	300b883a 	mov	r5,r6
 402af08:	dfc00917 	ldw	ra,36(sp)
 402af0c:	df000817 	ldw	fp,32(sp)
 402af10:	ddc00717 	ldw	r23,28(sp)
 402af14:	dd800617 	ldw	r22,24(sp)
 402af18:	dd400517 	ldw	r21,20(sp)
 402af1c:	dd000417 	ldw	r20,16(sp)
 402af20:	dcc00317 	ldw	r19,12(sp)
 402af24:	dc800217 	ldw	r18,8(sp)
 402af28:	dc400117 	ldw	r17,4(sp)
 402af2c:	dc000017 	ldw	r16,0(sp)
 402af30:	dec00a04 	addi	sp,sp,40
 402af34:	4028f3c1 	jmpi	4028f3c <_malloc_r>
 402af38:	a8c00017 	ldw	r3,0(r21)
 402af3c:	90c00015 	stw	r3,0(r18)
 402af40:	a8c00117 	ldw	r3,4(r21)
 402af44:	90c00115 	stw	r3,4(r18)
 402af48:	00c006c4 	movi	r3,27
 402af4c:	19804536 	bltu	r3,r6,402b064 <_realloc_r+0x470>
 402af50:	90800204 	addi	r2,r18,8
 402af54:	a8c00204 	addi	r3,r21,8
 402af58:	003f6306 	br	402ace8 <__flash_rwdata_start+0xffff9dc0>
 402af5c:	9005883a 	mov	r2,r18
 402af60:	a8c00017 	ldw	r3,0(r21)
 402af64:	b821883a 	mov	r16,r23
 402af68:	b027883a 	mov	r19,r22
 402af6c:	10c00015 	stw	r3,0(r2)
 402af70:	a8c00117 	ldw	r3,4(r21)
 402af74:	10c00115 	stw	r3,4(r2)
 402af78:	a8c00217 	ldw	r3,8(r21)
 402af7c:	10c00215 	stw	r3,8(r2)
 402af80:	003f6a06 	br	402ad2c <__flash_rwdata_start+0xffff9e04>
 402af84:	9c67883a 	add	r19,r19,r17
 402af88:	4445c83a 	sub	r2,r8,r17
 402af8c:	e4c00215 	stw	r19,8(fp)
 402af90:	10800054 	ori	r2,r2,1
 402af94:	98800115 	stw	r2,4(r19)
 402af98:	a8bfff17 	ldw	r2,-4(r21)
 402af9c:	a009883a 	mov	r4,r20
 402afa0:	1080004c 	andi	r2,r2,1
 402afa4:	1462b03a 	or	r17,r2,r17
 402afa8:	ac7fff15 	stw	r17,-4(r21)
 402afac:	402e80c0 	call	402e80c <__malloc_unlock>
 402afb0:	a805883a 	mov	r2,r21
 402afb4:	003f6b06 	br	402ad64 <__flash_rwdata_start+0xffff9e3c>
 402afb8:	a80b883a 	mov	r5,r21
 402afbc:	9009883a 	mov	r4,r18
 402afc0:	40299740 	call	4029974 <memmove>
 402afc4:	003f4e06 	br	402ad00 <__flash_rwdata_start+0xffff9dd8>
 402afc8:	89000404 	addi	r4,r17,16
 402afcc:	b93fbc16 	blt	r23,r4,402aec0 <__flash_rwdata_start+0xffff9f98>
 402afd0:	b0800317 	ldw	r2,12(r22)
 402afd4:	b0c00217 	ldw	r3,8(r22)
 402afd8:	81bfff04 	addi	r6,r16,-4
 402afdc:	01000904 	movi	r4,36
 402afe0:	18800315 	stw	r2,12(r3)
 402afe4:	10c00215 	stw	r3,8(r2)
 402afe8:	b4800204 	addi	r18,r22,8
 402afec:	21804336 	bltu	r4,r6,402b0fc <_realloc_r+0x508>
 402aff0:	008004c4 	movi	r2,19
 402aff4:	11803f2e 	bgeu	r2,r6,402b0f4 <_realloc_r+0x500>
 402aff8:	a8800017 	ldw	r2,0(r21)
 402affc:	b0800215 	stw	r2,8(r22)
 402b000:	a8800117 	ldw	r2,4(r21)
 402b004:	b0800315 	stw	r2,12(r22)
 402b008:	008006c4 	movi	r2,27
 402b00c:	11803f36 	bltu	r2,r6,402b10c <_realloc_r+0x518>
 402b010:	b0800404 	addi	r2,r22,16
 402b014:	ad400204 	addi	r21,r21,8
 402b018:	a8c00017 	ldw	r3,0(r21)
 402b01c:	10c00015 	stw	r3,0(r2)
 402b020:	a8c00117 	ldw	r3,4(r21)
 402b024:	10c00115 	stw	r3,4(r2)
 402b028:	a8c00217 	ldw	r3,8(r21)
 402b02c:	10c00215 	stw	r3,8(r2)
 402b030:	b447883a 	add	r3,r22,r17
 402b034:	bc45c83a 	sub	r2,r23,r17
 402b038:	e0c00215 	stw	r3,8(fp)
 402b03c:	10800054 	ori	r2,r2,1
 402b040:	18800115 	stw	r2,4(r3)
 402b044:	b0800117 	ldw	r2,4(r22)
 402b048:	a009883a 	mov	r4,r20
 402b04c:	1080004c 	andi	r2,r2,1
 402b050:	1462b03a 	or	r17,r2,r17
 402b054:	b4400115 	stw	r17,4(r22)
 402b058:	402e80c0 	call	402e80c <__malloc_unlock>
 402b05c:	9005883a 	mov	r2,r18
 402b060:	003f4006 	br	402ad64 <__flash_rwdata_start+0xffff9e3c>
 402b064:	a8c00217 	ldw	r3,8(r21)
 402b068:	90c00215 	stw	r3,8(r18)
 402b06c:	a8c00317 	ldw	r3,12(r21)
 402b070:	90c00315 	stw	r3,12(r18)
 402b074:	30801126 	beq	r6,r2,402b0bc <_realloc_r+0x4c8>
 402b078:	90800404 	addi	r2,r18,16
 402b07c:	a8c00404 	addi	r3,r21,16
 402b080:	003f1906 	br	402ace8 <__flash_rwdata_start+0xffff9dc0>
 402b084:	90ffff17 	ldw	r3,-4(r18)
 402b088:	00bfff04 	movi	r2,-4
 402b08c:	a825883a 	mov	r18,r21
 402b090:	1884703a 	and	r2,r3,r2
 402b094:	80a1883a 	add	r16,r16,r2
 402b098:	003f2406 	br	402ad2c <__flash_rwdata_start+0xffff9e04>
 402b09c:	a8800217 	ldw	r2,8(r21)
 402b0a0:	b0800415 	stw	r2,16(r22)
 402b0a4:	a8800317 	ldw	r2,12(r21)
 402b0a8:	b0800515 	stw	r2,20(r22)
 402b0ac:	31000a26 	beq	r6,r4,402b0d8 <_realloc_r+0x4e4>
 402b0b0:	b0800604 	addi	r2,r22,24
 402b0b4:	ad400404 	addi	r21,r21,16
 402b0b8:	003fa906 	br	402af60 <__flash_rwdata_start+0xffffa038>
 402b0bc:	a9000417 	ldw	r4,16(r21)
 402b0c0:	90800604 	addi	r2,r18,24
 402b0c4:	a8c00604 	addi	r3,r21,24
 402b0c8:	91000415 	stw	r4,16(r18)
 402b0cc:	a9000517 	ldw	r4,20(r21)
 402b0d0:	91000515 	stw	r4,20(r18)
 402b0d4:	003f0406 	br	402ace8 <__flash_rwdata_start+0xffff9dc0>
 402b0d8:	a8c00417 	ldw	r3,16(r21)
 402b0dc:	ad400604 	addi	r21,r21,24
 402b0e0:	b0800804 	addi	r2,r22,32
 402b0e4:	b0c00615 	stw	r3,24(r22)
 402b0e8:	a8ffff17 	ldw	r3,-4(r21)
 402b0ec:	b0c00715 	stw	r3,28(r22)
 402b0f0:	003f9b06 	br	402af60 <__flash_rwdata_start+0xffffa038>
 402b0f4:	9005883a 	mov	r2,r18
 402b0f8:	003fc706 	br	402b018 <__flash_rwdata_start+0xffffa0f0>
 402b0fc:	a80b883a 	mov	r5,r21
 402b100:	9009883a 	mov	r4,r18
 402b104:	40299740 	call	4029974 <memmove>
 402b108:	003fc906 	br	402b030 <__flash_rwdata_start+0xffffa108>
 402b10c:	a8800217 	ldw	r2,8(r21)
 402b110:	b0800415 	stw	r2,16(r22)
 402b114:	a8800317 	ldw	r2,12(r21)
 402b118:	b0800515 	stw	r2,20(r22)
 402b11c:	31000726 	beq	r6,r4,402b13c <_realloc_r+0x548>
 402b120:	b0800604 	addi	r2,r22,24
 402b124:	ad400404 	addi	r21,r21,16
 402b128:	003fbb06 	br	402b018 <__flash_rwdata_start+0xffffa0f0>
 402b12c:	a009883a 	mov	r4,r20
 402b130:	402e80c0 	call	402e80c <__malloc_unlock>
 402b134:	0005883a 	mov	r2,zero
 402b138:	003f0a06 	br	402ad64 <__flash_rwdata_start+0xffff9e3c>
 402b13c:	a8c00417 	ldw	r3,16(r21)
 402b140:	ad400604 	addi	r21,r21,24
 402b144:	b0800804 	addi	r2,r22,32
 402b148:	b0c00615 	stw	r3,24(r22)
 402b14c:	a8ffff17 	ldw	r3,-4(r21)
 402b150:	b0c00715 	stw	r3,28(r22)
 402b154:	003fb006 	br	402b018 <__flash_rwdata_start+0xffffa0f0>

0402b158 <_sbrk_r>:
 402b158:	defffd04 	addi	sp,sp,-12
 402b15c:	dc000015 	stw	r16,0(sp)
 402b160:	04000034 	movhi	r16,0
 402b164:	dc400115 	stw	r17,4(sp)
 402b168:	84079f04 	addi	r16,r16,7804
 402b16c:	2023883a 	mov	r17,r4
 402b170:	2809883a 	mov	r4,r5
 402b174:	dfc00215 	stw	ra,8(sp)
 402b178:	80000015 	stw	zero,0(r16)
 402b17c:	402e9cc0 	call	402e9cc <sbrk>
 402b180:	00ffffc4 	movi	r3,-1
 402b184:	10c00526 	beq	r2,r3,402b19c <_sbrk_r+0x44>
 402b188:	dfc00217 	ldw	ra,8(sp)
 402b18c:	dc400117 	ldw	r17,4(sp)
 402b190:	dc000017 	ldw	r16,0(sp)
 402b194:	dec00304 	addi	sp,sp,12
 402b198:	f800283a 	ret
 402b19c:	80c00017 	ldw	r3,0(r16)
 402b1a0:	183ff926 	beq	r3,zero,402b188 <__flash_rwdata_start+0xffffa260>
 402b1a4:	88c00015 	stw	r3,0(r17)
 402b1a8:	003ff706 	br	402b188 <__flash_rwdata_start+0xffffa260>

0402b1ac <__sread>:
 402b1ac:	defffe04 	addi	sp,sp,-8
 402b1b0:	dc000015 	stw	r16,0(sp)
 402b1b4:	2821883a 	mov	r16,r5
 402b1b8:	2940038f 	ldh	r5,14(r5)
 402b1bc:	dfc00115 	stw	ra,4(sp)
 402b1c0:	402cfa00 	call	402cfa0 <_read_r>
 402b1c4:	10000716 	blt	r2,zero,402b1e4 <__sread+0x38>
 402b1c8:	80c01417 	ldw	r3,80(r16)
 402b1cc:	1887883a 	add	r3,r3,r2
 402b1d0:	80c01415 	stw	r3,80(r16)
 402b1d4:	dfc00117 	ldw	ra,4(sp)
 402b1d8:	dc000017 	ldw	r16,0(sp)
 402b1dc:	dec00204 	addi	sp,sp,8
 402b1e0:	f800283a 	ret
 402b1e4:	80c0030b 	ldhu	r3,12(r16)
 402b1e8:	18fbffcc 	andi	r3,r3,61439
 402b1ec:	80c0030d 	sth	r3,12(r16)
 402b1f0:	dfc00117 	ldw	ra,4(sp)
 402b1f4:	dc000017 	ldw	r16,0(sp)
 402b1f8:	dec00204 	addi	sp,sp,8
 402b1fc:	f800283a 	ret

0402b200 <__seofread>:
 402b200:	0005883a 	mov	r2,zero
 402b204:	f800283a 	ret

0402b208 <__swrite>:
 402b208:	2880030b 	ldhu	r2,12(r5)
 402b20c:	defffb04 	addi	sp,sp,-20
 402b210:	dcc00315 	stw	r19,12(sp)
 402b214:	dc800215 	stw	r18,8(sp)
 402b218:	dc400115 	stw	r17,4(sp)
 402b21c:	dc000015 	stw	r16,0(sp)
 402b220:	dfc00415 	stw	ra,16(sp)
 402b224:	10c0400c 	andi	r3,r2,256
 402b228:	2821883a 	mov	r16,r5
 402b22c:	2023883a 	mov	r17,r4
 402b230:	3025883a 	mov	r18,r6
 402b234:	3827883a 	mov	r19,r7
 402b238:	18000526 	beq	r3,zero,402b250 <__swrite+0x48>
 402b23c:	2940038f 	ldh	r5,14(r5)
 402b240:	01c00084 	movi	r7,2
 402b244:	000d883a 	mov	r6,zero
 402b248:	402cf400 	call	402cf40 <_lseek_r>
 402b24c:	8080030b 	ldhu	r2,12(r16)
 402b250:	8140038f 	ldh	r5,14(r16)
 402b254:	10bbffcc 	andi	r2,r2,61439
 402b258:	980f883a 	mov	r7,r19
 402b25c:	900d883a 	mov	r6,r18
 402b260:	8809883a 	mov	r4,r17
 402b264:	8080030d 	sth	r2,12(r16)
 402b268:	dfc00417 	ldw	ra,16(sp)
 402b26c:	dcc00317 	ldw	r19,12(sp)
 402b270:	dc800217 	ldw	r18,8(sp)
 402b274:	dc400117 	ldw	r17,4(sp)
 402b278:	dc000017 	ldw	r16,0(sp)
 402b27c:	dec00504 	addi	sp,sp,20
 402b280:	402ca0c1 	jmpi	402ca0c <_write_r>

0402b284 <__sseek>:
 402b284:	defffe04 	addi	sp,sp,-8
 402b288:	dc000015 	stw	r16,0(sp)
 402b28c:	2821883a 	mov	r16,r5
 402b290:	2940038f 	ldh	r5,14(r5)
 402b294:	dfc00115 	stw	ra,4(sp)
 402b298:	402cf400 	call	402cf40 <_lseek_r>
 402b29c:	00ffffc4 	movi	r3,-1
 402b2a0:	10c00826 	beq	r2,r3,402b2c4 <__sseek+0x40>
 402b2a4:	80c0030b 	ldhu	r3,12(r16)
 402b2a8:	80801415 	stw	r2,80(r16)
 402b2ac:	18c40014 	ori	r3,r3,4096
 402b2b0:	80c0030d 	sth	r3,12(r16)
 402b2b4:	dfc00117 	ldw	ra,4(sp)
 402b2b8:	dc000017 	ldw	r16,0(sp)
 402b2bc:	dec00204 	addi	sp,sp,8
 402b2c0:	f800283a 	ret
 402b2c4:	80c0030b 	ldhu	r3,12(r16)
 402b2c8:	18fbffcc 	andi	r3,r3,61439
 402b2cc:	80c0030d 	sth	r3,12(r16)
 402b2d0:	dfc00117 	ldw	ra,4(sp)
 402b2d4:	dc000017 	ldw	r16,0(sp)
 402b2d8:	dec00204 	addi	sp,sp,8
 402b2dc:	f800283a 	ret

0402b2e0 <__sclose>:
 402b2e0:	2940038f 	ldh	r5,14(r5)
 402b2e4:	402ca6c1 	jmpi	402ca6c <_close_r>

0402b2e8 <strcmp>:
 402b2e8:	2144b03a 	or	r2,r4,r5
 402b2ec:	108000cc 	andi	r2,r2,3
 402b2f0:	1000171e 	bne	r2,zero,402b350 <strcmp+0x68>
 402b2f4:	20800017 	ldw	r2,0(r4)
 402b2f8:	28c00017 	ldw	r3,0(r5)
 402b2fc:	10c0141e 	bne	r2,r3,402b350 <strcmp+0x68>
 402b300:	027fbff4 	movhi	r9,65279
 402b304:	4a7fbfc4 	addi	r9,r9,-257
 402b308:	0086303a 	nor	r3,zero,r2
 402b30c:	02202074 	movhi	r8,32897
 402b310:	1245883a 	add	r2,r2,r9
 402b314:	42202004 	addi	r8,r8,-32640
 402b318:	10c4703a 	and	r2,r2,r3
 402b31c:	1204703a 	and	r2,r2,r8
 402b320:	10000226 	beq	r2,zero,402b32c <strcmp+0x44>
 402b324:	00002306 	br	402b3b4 <strcmp+0xcc>
 402b328:	1000221e 	bne	r2,zero,402b3b4 <strcmp+0xcc>
 402b32c:	21000104 	addi	r4,r4,4
 402b330:	20c00017 	ldw	r3,0(r4)
 402b334:	29400104 	addi	r5,r5,4
 402b338:	29800017 	ldw	r6,0(r5)
 402b33c:	1a4f883a 	add	r7,r3,r9
 402b340:	00c4303a 	nor	r2,zero,r3
 402b344:	3884703a 	and	r2,r7,r2
 402b348:	1204703a 	and	r2,r2,r8
 402b34c:	19bff626 	beq	r3,r6,402b328 <__flash_rwdata_start+0xffffa400>
 402b350:	20800003 	ldbu	r2,0(r4)
 402b354:	10c03fcc 	andi	r3,r2,255
 402b358:	18c0201c 	xori	r3,r3,128
 402b35c:	18ffe004 	addi	r3,r3,-128
 402b360:	18000c26 	beq	r3,zero,402b394 <strcmp+0xac>
 402b364:	29800007 	ldb	r6,0(r5)
 402b368:	19800326 	beq	r3,r6,402b378 <strcmp+0x90>
 402b36c:	00001306 	br	402b3bc <strcmp+0xd4>
 402b370:	29800007 	ldb	r6,0(r5)
 402b374:	11800b1e 	bne	r2,r6,402b3a4 <strcmp+0xbc>
 402b378:	21000044 	addi	r4,r4,1
 402b37c:	20c00003 	ldbu	r3,0(r4)
 402b380:	29400044 	addi	r5,r5,1
 402b384:	18803fcc 	andi	r2,r3,255
 402b388:	1080201c 	xori	r2,r2,128
 402b38c:	10bfe004 	addi	r2,r2,-128
 402b390:	103ff71e 	bne	r2,zero,402b370 <__flash_rwdata_start+0xffffa448>
 402b394:	0007883a 	mov	r3,zero
 402b398:	28800003 	ldbu	r2,0(r5)
 402b39c:	1885c83a 	sub	r2,r3,r2
 402b3a0:	f800283a 	ret
 402b3a4:	28800003 	ldbu	r2,0(r5)
 402b3a8:	18c03fcc 	andi	r3,r3,255
 402b3ac:	1885c83a 	sub	r2,r3,r2
 402b3b0:	f800283a 	ret
 402b3b4:	0005883a 	mov	r2,zero
 402b3b8:	f800283a 	ret
 402b3bc:	10c03fcc 	andi	r3,r2,255
 402b3c0:	003ff506 	br	402b398 <__flash_rwdata_start+0xffffa470>

0402b3c4 <__sprint_r.part.0>:
 402b3c4:	28801917 	ldw	r2,100(r5)
 402b3c8:	defff604 	addi	sp,sp,-40
 402b3cc:	dd400515 	stw	r21,20(sp)
 402b3d0:	dfc00915 	stw	ra,36(sp)
 402b3d4:	df000815 	stw	fp,32(sp)
 402b3d8:	ddc00715 	stw	r23,28(sp)
 402b3dc:	dd800615 	stw	r22,24(sp)
 402b3e0:	dd000415 	stw	r20,16(sp)
 402b3e4:	dcc00315 	stw	r19,12(sp)
 402b3e8:	dc800215 	stw	r18,8(sp)
 402b3ec:	dc400115 	stw	r17,4(sp)
 402b3f0:	dc000015 	stw	r16,0(sp)
 402b3f4:	1088000c 	andi	r2,r2,8192
 402b3f8:	302b883a 	mov	r21,r6
 402b3fc:	10002e26 	beq	r2,zero,402b4b8 <__sprint_r.part.0+0xf4>
 402b400:	30800217 	ldw	r2,8(r6)
 402b404:	35800017 	ldw	r22,0(r6)
 402b408:	10002926 	beq	r2,zero,402b4b0 <__sprint_r.part.0+0xec>
 402b40c:	2827883a 	mov	r19,r5
 402b410:	2029883a 	mov	r20,r4
 402b414:	b5c00104 	addi	r23,r22,4
 402b418:	04bfffc4 	movi	r18,-1
 402b41c:	bc400017 	ldw	r17,0(r23)
 402b420:	b4000017 	ldw	r16,0(r22)
 402b424:	0039883a 	mov	fp,zero
 402b428:	8822d0ba 	srli	r17,r17,2
 402b42c:	8800031e 	bne	r17,zero,402b43c <__sprint_r.part.0+0x78>
 402b430:	00001806 	br	402b494 <__sprint_r.part.0+0xd0>
 402b434:	84000104 	addi	r16,r16,4
 402b438:	8f001526 	beq	r17,fp,402b490 <__sprint_r.part.0+0xcc>
 402b43c:	81400017 	ldw	r5,0(r16)
 402b440:	980d883a 	mov	r6,r19
 402b444:	a009883a 	mov	r4,r20
 402b448:	402cdec0 	call	402cdec <_fputwc_r>
 402b44c:	e7000044 	addi	fp,fp,1
 402b450:	14bff81e 	bne	r2,r18,402b434 <__flash_rwdata_start+0xffffa50c>
 402b454:	9005883a 	mov	r2,r18
 402b458:	a8000215 	stw	zero,8(r21)
 402b45c:	a8000115 	stw	zero,4(r21)
 402b460:	dfc00917 	ldw	ra,36(sp)
 402b464:	df000817 	ldw	fp,32(sp)
 402b468:	ddc00717 	ldw	r23,28(sp)
 402b46c:	dd800617 	ldw	r22,24(sp)
 402b470:	dd400517 	ldw	r21,20(sp)
 402b474:	dd000417 	ldw	r20,16(sp)
 402b478:	dcc00317 	ldw	r19,12(sp)
 402b47c:	dc800217 	ldw	r18,8(sp)
 402b480:	dc400117 	ldw	r17,4(sp)
 402b484:	dc000017 	ldw	r16,0(sp)
 402b488:	dec00a04 	addi	sp,sp,40
 402b48c:	f800283a 	ret
 402b490:	a8800217 	ldw	r2,8(r21)
 402b494:	8c63883a 	add	r17,r17,r17
 402b498:	8c63883a 	add	r17,r17,r17
 402b49c:	1445c83a 	sub	r2,r2,r17
 402b4a0:	a8800215 	stw	r2,8(r21)
 402b4a4:	b5800204 	addi	r22,r22,8
 402b4a8:	bdc00204 	addi	r23,r23,8
 402b4ac:	103fdb1e 	bne	r2,zero,402b41c <__flash_rwdata_start+0xffffa4f4>
 402b4b0:	0005883a 	mov	r2,zero
 402b4b4:	003fe806 	br	402b458 <__flash_rwdata_start+0xffffa530>
 402b4b8:	40286040 	call	4028604 <__sfvwrite_r>
 402b4bc:	003fe606 	br	402b458 <__flash_rwdata_start+0xffffa530>

0402b4c0 <__sprint_r>:
 402b4c0:	30c00217 	ldw	r3,8(r6)
 402b4c4:	18000126 	beq	r3,zero,402b4cc <__sprint_r+0xc>
 402b4c8:	402b3c41 	jmpi	402b3c4 <__sprint_r.part.0>
 402b4cc:	30000115 	stw	zero,4(r6)
 402b4d0:	0005883a 	mov	r2,zero
 402b4d4:	f800283a 	ret

0402b4d8 <___vfiprintf_internal_r>:
 402b4d8:	deffc904 	addi	sp,sp,-220
 402b4dc:	df003515 	stw	fp,212(sp)
 402b4e0:	dd003115 	stw	r20,196(sp)
 402b4e4:	dfc03615 	stw	ra,216(sp)
 402b4e8:	ddc03415 	stw	r23,208(sp)
 402b4ec:	dd803315 	stw	r22,204(sp)
 402b4f0:	dd403215 	stw	r21,200(sp)
 402b4f4:	dcc03015 	stw	r19,192(sp)
 402b4f8:	dc802f15 	stw	r18,188(sp)
 402b4fc:	dc402e15 	stw	r17,184(sp)
 402b500:	dc002d15 	stw	r16,180(sp)
 402b504:	d9002015 	stw	r4,128(sp)
 402b508:	d9c02215 	stw	r7,136(sp)
 402b50c:	2829883a 	mov	r20,r5
 402b510:	3039883a 	mov	fp,r6
 402b514:	20000226 	beq	r4,zero,402b520 <___vfiprintf_internal_r+0x48>
 402b518:	20800e17 	ldw	r2,56(r4)
 402b51c:	1000cf26 	beq	r2,zero,402b85c <___vfiprintf_internal_r+0x384>
 402b520:	a080030b 	ldhu	r2,12(r20)
 402b524:	10c8000c 	andi	r3,r2,8192
 402b528:	1800061e 	bne	r3,zero,402b544 <___vfiprintf_internal_r+0x6c>
 402b52c:	a1001917 	ldw	r4,100(r20)
 402b530:	00f7ffc4 	movi	r3,-8193
 402b534:	10880014 	ori	r2,r2,8192
 402b538:	20c6703a 	and	r3,r4,r3
 402b53c:	a080030d 	sth	r2,12(r20)
 402b540:	a0c01915 	stw	r3,100(r20)
 402b544:	10c0020c 	andi	r3,r2,8
 402b548:	1800a926 	beq	r3,zero,402b7f0 <___vfiprintf_internal_r+0x318>
 402b54c:	a0c00417 	ldw	r3,16(r20)
 402b550:	1800a726 	beq	r3,zero,402b7f0 <___vfiprintf_internal_r+0x318>
 402b554:	1080068c 	andi	r2,r2,26
 402b558:	00c00284 	movi	r3,10
 402b55c:	10c0ac26 	beq	r2,r3,402b810 <___vfiprintf_internal_r+0x338>
 402b560:	da801a04 	addi	r10,sp,104
 402b564:	da801e15 	stw	r10,120(sp)
 402b568:	d8801e17 	ldw	r2,120(sp)
 402b56c:	da8019c4 	addi	r10,sp,103
 402b570:	05800034 	movhi	r22,0
 402b574:	05c00034 	movhi	r23,0
 402b578:	da801f15 	stw	r10,124(sp)
 402b57c:	1295c83a 	sub	r10,r2,r10
 402b580:	b580c904 	addi	r22,r22,804
 402b584:	bdc0c504 	addi	r23,r23,788
 402b588:	dec01a15 	stw	sp,104(sp)
 402b58c:	d8001c15 	stw	zero,112(sp)
 402b590:	d8001b15 	stw	zero,108(sp)
 402b594:	d8002615 	stw	zero,152(sp)
 402b598:	d8002315 	stw	zero,140(sp)
 402b59c:	da802715 	stw	r10,156(sp)
 402b5a0:	d811883a 	mov	r8,sp
 402b5a4:	dd002115 	stw	r20,132(sp)
 402b5a8:	e021883a 	mov	r16,fp
 402b5ac:	80800007 	ldb	r2,0(r16)
 402b5b0:	1003ea26 	beq	r2,zero,402c55c <___vfiprintf_internal_r+0x1084>
 402b5b4:	00c00944 	movi	r3,37
 402b5b8:	8025883a 	mov	r18,r16
 402b5bc:	10c0021e 	bne	r2,r3,402b5c8 <___vfiprintf_internal_r+0xf0>
 402b5c0:	00001606 	br	402b61c <___vfiprintf_internal_r+0x144>
 402b5c4:	10c00326 	beq	r2,r3,402b5d4 <___vfiprintf_internal_r+0xfc>
 402b5c8:	94800044 	addi	r18,r18,1
 402b5cc:	90800007 	ldb	r2,0(r18)
 402b5d0:	103ffc1e 	bne	r2,zero,402b5c4 <__flash_rwdata_start+0xffffa69c>
 402b5d4:	9423c83a 	sub	r17,r18,r16
 402b5d8:	88001026 	beq	r17,zero,402b61c <___vfiprintf_internal_r+0x144>
 402b5dc:	d8c01c17 	ldw	r3,112(sp)
 402b5e0:	d8801b17 	ldw	r2,108(sp)
 402b5e4:	44000015 	stw	r16,0(r8)
 402b5e8:	88c7883a 	add	r3,r17,r3
 402b5ec:	10800044 	addi	r2,r2,1
 402b5f0:	44400115 	stw	r17,4(r8)
 402b5f4:	d8c01c15 	stw	r3,112(sp)
 402b5f8:	d8801b15 	stw	r2,108(sp)
 402b5fc:	010001c4 	movi	r4,7
 402b600:	2080760e 	bge	r4,r2,402b7dc <___vfiprintf_internal_r+0x304>
 402b604:	1803821e 	bne	r3,zero,402c410 <___vfiprintf_internal_r+0xf38>
 402b608:	da802317 	ldw	r10,140(sp)
 402b60c:	d8001b15 	stw	zero,108(sp)
 402b610:	d811883a 	mov	r8,sp
 402b614:	5455883a 	add	r10,r10,r17
 402b618:	da802315 	stw	r10,140(sp)
 402b61c:	90800007 	ldb	r2,0(r18)
 402b620:	10044626 	beq	r2,zero,402c73c <___vfiprintf_internal_r+0x1264>
 402b624:	90c00047 	ldb	r3,1(r18)
 402b628:	94000044 	addi	r16,r18,1
 402b62c:	d8001d85 	stb	zero,118(sp)
 402b630:	0009883a 	mov	r4,zero
 402b634:	000f883a 	mov	r7,zero
 402b638:	027fffc4 	movi	r9,-1
 402b63c:	0023883a 	mov	r17,zero
 402b640:	0029883a 	mov	r20,zero
 402b644:	01401604 	movi	r5,88
 402b648:	01800244 	movi	r6,9
 402b64c:	03400a84 	movi	r13,42
 402b650:	03001b04 	movi	r12,108
 402b654:	84000044 	addi	r16,r16,1
 402b658:	18bff804 	addi	r2,r3,-32
 402b65c:	28827336 	bltu	r5,r2,402c02c <___vfiprintf_internal_r+0xb54>
 402b660:	100490ba 	slli	r2,r2,2
 402b664:	028100f4 	movhi	r10,1027
 402b668:	52ad9e04 	addi	r10,r10,-18824
 402b66c:	1285883a 	add	r2,r2,r10
 402b670:	10800017 	ldw	r2,0(r2)
 402b674:	1000683a 	jmp	r2
 402b678:	0402bd60 	cmpeqi	r16,zero,2805
 402b67c:	0402c02c 	andhi	r16,zero,2816
 402b680:	0402c02c 	andhi	r16,zero,2816
 402b684:	0402bd80 	call	402bd8 <_gp+0x3f8da4>
 402b688:	0402c02c 	andhi	r16,zero,2816
 402b68c:	0402c02c 	andhi	r16,zero,2816
 402b690:	0402c02c 	andhi	r16,zero,2816
 402b694:	0402c02c 	andhi	r16,zero,2816
 402b698:	0402c02c 	andhi	r16,zero,2816
 402b69c:	0402c02c 	andhi	r16,zero,2816
 402b6a0:	0402bf68 	cmpgeui	r16,zero,2813
 402b6a4:	0402bf84 	movi	r16,2814
 402b6a8:	0402c02c 	andhi	r16,zero,2816
 402b6ac:	0402b86c 	andhi	r16,zero,2785
 402b6b0:	0402bf94 	movui	r16,2814
 402b6b4:	0402c02c 	andhi	r16,zero,2816
 402b6b8:	0402bd8c 	andi	r16,zero,2806
 402b6bc:	0402bd98 	cmpnei	r16,zero,2806
 402b6c0:	0402bd98 	cmpnei	r16,zero,2806
 402b6c4:	0402bd98 	cmpnei	r16,zero,2806
 402b6c8:	0402bd98 	cmpnei	r16,zero,2806
 402b6cc:	0402bd98 	cmpnei	r16,zero,2806
 402b6d0:	0402bd98 	cmpnei	r16,zero,2806
 402b6d4:	0402bd98 	cmpnei	r16,zero,2806
 402b6d8:	0402bd98 	cmpnei	r16,zero,2806
 402b6dc:	0402bd98 	cmpnei	r16,zero,2806
 402b6e0:	0402c02c 	andhi	r16,zero,2816
 402b6e4:	0402c02c 	andhi	r16,zero,2816
 402b6e8:	0402c02c 	andhi	r16,zero,2816
 402b6ec:	0402c02c 	andhi	r16,zero,2816
 402b6f0:	0402c02c 	andhi	r16,zero,2816
 402b6f4:	0402c02c 	andhi	r16,zero,2816
 402b6f8:	0402c02c 	andhi	r16,zero,2816
 402b6fc:	0402c02c 	andhi	r16,zero,2816
 402b700:	0402c02c 	andhi	r16,zero,2816
 402b704:	0402c02c 	andhi	r16,zero,2816
 402b708:	0402bdc4 	movi	r16,2807
 402b70c:	0402c02c 	andhi	r16,zero,2816
 402b710:	0402c02c 	andhi	r16,zero,2816
 402b714:	0402c02c 	andhi	r16,zero,2816
 402b718:	0402c02c 	andhi	r16,zero,2816
 402b71c:	0402c02c 	andhi	r16,zero,2816
 402b720:	0402c02c 	andhi	r16,zero,2816
 402b724:	0402c02c 	andhi	r16,zero,2816
 402b728:	0402c02c 	andhi	r16,zero,2816
 402b72c:	0402c02c 	andhi	r16,zero,2816
 402b730:	0402c02c 	andhi	r16,zero,2816
 402b734:	0402bdfc 	xorhi	r16,zero,2807
 402b738:	0402c02c 	andhi	r16,zero,2816
 402b73c:	0402c02c 	andhi	r16,zero,2816
 402b740:	0402c02c 	andhi	r16,zero,2816
 402b744:	0402c02c 	andhi	r16,zero,2816
 402b748:	0402c02c 	andhi	r16,zero,2816
 402b74c:	0402be54 	movui	r16,2809
 402b750:	0402c02c 	andhi	r16,zero,2816
 402b754:	0402c02c 	andhi	r16,zero,2816
 402b758:	0402bec4 	movi	r16,2811
 402b75c:	0402c02c 	andhi	r16,zero,2816
 402b760:	0402c02c 	andhi	r16,zero,2816
 402b764:	0402c02c 	andhi	r16,zero,2816
 402b768:	0402c02c 	andhi	r16,zero,2816
 402b76c:	0402c02c 	andhi	r16,zero,2816
 402b770:	0402c02c 	andhi	r16,zero,2816
 402b774:	0402c02c 	andhi	r16,zero,2816
 402b778:	0402c02c 	andhi	r16,zero,2816
 402b77c:	0402c02c 	andhi	r16,zero,2816
 402b780:	0402c02c 	andhi	r16,zero,2816
 402b784:	0402bc70 	cmpltui	r16,zero,2801
 402b788:	0402bc9c 	xori	r16,zero,2802
 402b78c:	0402c02c 	andhi	r16,zero,2816
 402b790:	0402c02c 	andhi	r16,zero,2816
 402b794:	0402c02c 	andhi	r16,zero,2816
 402b798:	0402bfd4 	movui	r16,2815
 402b79c:	0402bc9c 	xori	r16,zero,2802
 402b7a0:	0402c02c 	andhi	r16,zero,2816
 402b7a4:	0402c02c 	andhi	r16,zero,2816
 402b7a8:	0402bb30 	cmpltui	r16,zero,2796
 402b7ac:	0402c02c 	andhi	r16,zero,2816
 402b7b0:	0402bb40 	call	402bb4 <_gp+0x3f8d80>
 402b7b4:	0402bb7c 	xorhi	r16,zero,2797
 402b7b8:	0402b878 	rdprs	r16,zero,2785
 402b7bc:	0402bb24 	muli	r16,zero,2796
 402b7c0:	0402c02c 	andhi	r16,zero,2816
 402b7c4:	0402bf00 	call	402bf0 <_gp+0x3f8dbc>
 402b7c8:	0402c02c 	andhi	r16,zero,2816
 402b7cc:	0402bf58 	cmpnei	r16,zero,2813
 402b7d0:	0402c02c 	andhi	r16,zero,2816
 402b7d4:	0402c02c 	andhi	r16,zero,2816
 402b7d8:	0402bc1c 	xori	r16,zero,2800
 402b7dc:	42000204 	addi	r8,r8,8
 402b7e0:	da802317 	ldw	r10,140(sp)
 402b7e4:	5455883a 	add	r10,r10,r17
 402b7e8:	da802315 	stw	r10,140(sp)
 402b7ec:	003f8b06 	br	402b61c <__flash_rwdata_start+0xffffa6f4>
 402b7f0:	d9002017 	ldw	r4,128(sp)
 402b7f4:	a00b883a 	mov	r5,r20
 402b7f8:	40261ac0 	call	40261ac <__swsetup_r>
 402b7fc:	1003b11e 	bne	r2,zero,402c6c4 <___vfiprintf_internal_r+0x11ec>
 402b800:	a080030b 	ldhu	r2,12(r20)
 402b804:	00c00284 	movi	r3,10
 402b808:	1080068c 	andi	r2,r2,26
 402b80c:	10ff541e 	bne	r2,r3,402b560 <__flash_rwdata_start+0xffffa638>
 402b810:	a080038f 	ldh	r2,14(r20)
 402b814:	103f5216 	blt	r2,zero,402b560 <__flash_rwdata_start+0xffffa638>
 402b818:	d9c02217 	ldw	r7,136(sp)
 402b81c:	d9002017 	ldw	r4,128(sp)
 402b820:	e00d883a 	mov	r6,fp
 402b824:	a00b883a 	mov	r5,r20
 402b828:	402c9500 	call	402c950 <__sbprintf>
 402b82c:	dfc03617 	ldw	ra,216(sp)
 402b830:	df003517 	ldw	fp,212(sp)
 402b834:	ddc03417 	ldw	r23,208(sp)
 402b838:	dd803317 	ldw	r22,204(sp)
 402b83c:	dd403217 	ldw	r21,200(sp)
 402b840:	dd003117 	ldw	r20,196(sp)
 402b844:	dcc03017 	ldw	r19,192(sp)
 402b848:	dc802f17 	ldw	r18,188(sp)
 402b84c:	dc402e17 	ldw	r17,184(sp)
 402b850:	dc002d17 	ldw	r16,180(sp)
 402b854:	dec03704 	addi	sp,sp,220
 402b858:	f800283a 	ret
 402b85c:	40281800 	call	4028180 <__sinit>
 402b860:	003f2f06 	br	402b520 <__flash_rwdata_start+0xffffa5f8>
 402b864:	0463c83a 	sub	r17,zero,r17
 402b868:	d8802215 	stw	r2,136(sp)
 402b86c:	a5000114 	ori	r20,r20,4
 402b870:	80c00007 	ldb	r3,0(r16)
 402b874:	003f7706 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402b878:	00800c04 	movi	r2,48
 402b87c:	da802217 	ldw	r10,136(sp)
 402b880:	d8801d05 	stb	r2,116(sp)
 402b884:	00801e04 	movi	r2,120
 402b888:	d8801d45 	stb	r2,117(sp)
 402b88c:	d8001d85 	stb	zero,118(sp)
 402b890:	50c00104 	addi	r3,r10,4
 402b894:	54800017 	ldw	r18,0(r10)
 402b898:	0027883a 	mov	r19,zero
 402b89c:	a0800094 	ori	r2,r20,2
 402b8a0:	48030b16 	blt	r9,zero,402c4d0 <___vfiprintf_internal_r+0xff8>
 402b8a4:	00bfdfc4 	movi	r2,-129
 402b8a8:	a096703a 	and	r11,r20,r2
 402b8ac:	d8c02215 	stw	r3,136(sp)
 402b8b0:	5d000094 	ori	r20,r11,2
 402b8b4:	90032b1e 	bne	r18,zero,402c564 <___vfiprintf_internal_r+0x108c>
 402b8b8:	00800034 	movhi	r2,0
 402b8bc:	10806604 	addi	r2,r2,408
 402b8c0:	d8802615 	stw	r2,152(sp)
 402b8c4:	0039883a 	mov	fp,zero
 402b8c8:	48017b1e 	bne	r9,zero,402beb8 <___vfiprintf_internal_r+0x9e0>
 402b8cc:	0013883a 	mov	r9,zero
 402b8d0:	0027883a 	mov	r19,zero
 402b8d4:	dd401a04 	addi	r21,sp,104
 402b8d8:	4825883a 	mov	r18,r9
 402b8dc:	4cc0010e 	bge	r9,r19,402b8e4 <___vfiprintf_internal_r+0x40c>
 402b8e0:	9825883a 	mov	r18,r19
 402b8e4:	e7003fcc 	andi	fp,fp,255
 402b8e8:	e700201c 	xori	fp,fp,128
 402b8ec:	e73fe004 	addi	fp,fp,-128
 402b8f0:	e0000126 	beq	fp,zero,402b8f8 <___vfiprintf_internal_r+0x420>
 402b8f4:	94800044 	addi	r18,r18,1
 402b8f8:	a380008c 	andi	r14,r20,2
 402b8fc:	70000126 	beq	r14,zero,402b904 <___vfiprintf_internal_r+0x42c>
 402b900:	94800084 	addi	r18,r18,2
 402b904:	a700210c 	andi	fp,r20,132
 402b908:	e001df1e 	bne	fp,zero,402c088 <___vfiprintf_internal_r+0xbb0>
 402b90c:	8c87c83a 	sub	r3,r17,r18
 402b910:	00c1dd0e 	bge	zero,r3,402c088 <___vfiprintf_internal_r+0xbb0>
 402b914:	01c00404 	movi	r7,16
 402b918:	d8801c17 	ldw	r2,112(sp)
 402b91c:	38c3ad0e 	bge	r7,r3,402c7d4 <___vfiprintf_internal_r+0x12fc>
 402b920:	02800034 	movhi	r10,0
 402b924:	5280c904 	addi	r10,r10,804
 402b928:	dc002915 	stw	r16,164(sp)
 402b92c:	d9801b17 	ldw	r6,108(sp)
 402b930:	da802415 	stw	r10,144(sp)
 402b934:	03c001c4 	movi	r15,7
 402b938:	da402515 	stw	r9,148(sp)
 402b93c:	db802815 	stw	r14,160(sp)
 402b940:	1821883a 	mov	r16,r3
 402b944:	00000506 	br	402b95c <___vfiprintf_internal_r+0x484>
 402b948:	31400084 	addi	r5,r6,2
 402b94c:	42000204 	addi	r8,r8,8
 402b950:	200d883a 	mov	r6,r4
 402b954:	843ffc04 	addi	r16,r16,-16
 402b958:	3c000d0e 	bge	r7,r16,402b990 <___vfiprintf_internal_r+0x4b8>
 402b95c:	10800404 	addi	r2,r2,16
 402b960:	31000044 	addi	r4,r6,1
 402b964:	45800015 	stw	r22,0(r8)
 402b968:	41c00115 	stw	r7,4(r8)
 402b96c:	d8801c15 	stw	r2,112(sp)
 402b970:	d9001b15 	stw	r4,108(sp)
 402b974:	793ff40e 	bge	r15,r4,402b948 <__flash_rwdata_start+0xffffaa20>
 402b978:	1001b51e 	bne	r2,zero,402c050 <___vfiprintf_internal_r+0xb78>
 402b97c:	843ffc04 	addi	r16,r16,-16
 402b980:	000d883a 	mov	r6,zero
 402b984:	01400044 	movi	r5,1
 402b988:	d811883a 	mov	r8,sp
 402b98c:	3c3ff316 	blt	r7,r16,402b95c <__flash_rwdata_start+0xffffaa34>
 402b990:	8007883a 	mov	r3,r16
 402b994:	da402517 	ldw	r9,148(sp)
 402b998:	db802817 	ldw	r14,160(sp)
 402b99c:	dc002917 	ldw	r16,164(sp)
 402b9a0:	da802417 	ldw	r10,144(sp)
 402b9a4:	1885883a 	add	r2,r3,r2
 402b9a8:	40c00115 	stw	r3,4(r8)
 402b9ac:	42800015 	stw	r10,0(r8)
 402b9b0:	d8801c15 	stw	r2,112(sp)
 402b9b4:	d9401b15 	stw	r5,108(sp)
 402b9b8:	00c001c4 	movi	r3,7
 402b9bc:	19426016 	blt	r3,r5,402c340 <___vfiprintf_internal_r+0xe68>
 402b9c0:	d8c01d87 	ldb	r3,118(sp)
 402b9c4:	42000204 	addi	r8,r8,8
 402b9c8:	29000044 	addi	r4,r5,1
 402b9cc:	1801b31e 	bne	r3,zero,402c09c <___vfiprintf_internal_r+0xbc4>
 402b9d0:	7001c026 	beq	r14,zero,402c0d4 <___vfiprintf_internal_r+0xbfc>
 402b9d4:	d8c01d04 	addi	r3,sp,116
 402b9d8:	10800084 	addi	r2,r2,2
 402b9dc:	40c00015 	stw	r3,0(r8)
 402b9e0:	00c00084 	movi	r3,2
 402b9e4:	40c00115 	stw	r3,4(r8)
 402b9e8:	d8801c15 	stw	r2,112(sp)
 402b9ec:	d9001b15 	stw	r4,108(sp)
 402b9f0:	00c001c4 	movi	r3,7
 402b9f4:	1902650e 	bge	r3,r4,402c38c <___vfiprintf_internal_r+0xeb4>
 402b9f8:	10029a1e 	bne	r2,zero,402c464 <___vfiprintf_internal_r+0xf8c>
 402b9fc:	00c02004 	movi	r3,128
 402ba00:	01000044 	movi	r4,1
 402ba04:	000b883a 	mov	r5,zero
 402ba08:	d811883a 	mov	r8,sp
 402ba0c:	e0c1b31e 	bne	fp,r3,402c0dc <___vfiprintf_internal_r+0xc04>
 402ba10:	8cb9c83a 	sub	fp,r17,r18
 402ba14:	0701b10e 	bge	zero,fp,402c0dc <___vfiprintf_internal_r+0xc04>
 402ba18:	01c00404 	movi	r7,16
 402ba1c:	3f03890e 	bge	r7,fp,402c844 <___vfiprintf_internal_r+0x136c>
 402ba20:	00c00034 	movhi	r3,0
 402ba24:	18c0c504 	addi	r3,r3,788
 402ba28:	d8c02415 	stw	r3,144(sp)
 402ba2c:	8007883a 	mov	r3,r16
 402ba30:	034001c4 	movi	r13,7
 402ba34:	e021883a 	mov	r16,fp
 402ba38:	da402515 	stw	r9,148(sp)
 402ba3c:	1839883a 	mov	fp,r3
 402ba40:	00000506 	br	402ba58 <___vfiprintf_internal_r+0x580>
 402ba44:	29800084 	addi	r6,r5,2
 402ba48:	42000204 	addi	r8,r8,8
 402ba4c:	180b883a 	mov	r5,r3
 402ba50:	843ffc04 	addi	r16,r16,-16
 402ba54:	3c000d0e 	bge	r7,r16,402ba8c <___vfiprintf_internal_r+0x5b4>
 402ba58:	10800404 	addi	r2,r2,16
 402ba5c:	28c00044 	addi	r3,r5,1
 402ba60:	45c00015 	stw	r23,0(r8)
 402ba64:	41c00115 	stw	r7,4(r8)
 402ba68:	d8801c15 	stw	r2,112(sp)
 402ba6c:	d8c01b15 	stw	r3,108(sp)
 402ba70:	68fff40e 	bge	r13,r3,402ba44 <__flash_rwdata_start+0xffffab1c>
 402ba74:	1002241e 	bne	r2,zero,402c308 <___vfiprintf_internal_r+0xe30>
 402ba78:	843ffc04 	addi	r16,r16,-16
 402ba7c:	01800044 	movi	r6,1
 402ba80:	000b883a 	mov	r5,zero
 402ba84:	d811883a 	mov	r8,sp
 402ba88:	3c3ff316 	blt	r7,r16,402ba58 <__flash_rwdata_start+0xffffab30>
 402ba8c:	da402517 	ldw	r9,148(sp)
 402ba90:	e007883a 	mov	r3,fp
 402ba94:	8039883a 	mov	fp,r16
 402ba98:	1821883a 	mov	r16,r3
 402ba9c:	d8c02417 	ldw	r3,144(sp)
 402baa0:	1705883a 	add	r2,r2,fp
 402baa4:	47000115 	stw	fp,4(r8)
 402baa8:	40c00015 	stw	r3,0(r8)
 402baac:	d8801c15 	stw	r2,112(sp)
 402bab0:	d9801b15 	stw	r6,108(sp)
 402bab4:	00c001c4 	movi	r3,7
 402bab8:	19827616 	blt	r3,r6,402c494 <___vfiprintf_internal_r+0xfbc>
 402babc:	4cf9c83a 	sub	fp,r9,r19
 402bac0:	42000204 	addi	r8,r8,8
 402bac4:	31000044 	addi	r4,r6,1
 402bac8:	300b883a 	mov	r5,r6
 402bacc:	07018516 	blt	zero,fp,402c0e4 <___vfiprintf_internal_r+0xc0c>
 402bad0:	9885883a 	add	r2,r19,r2
 402bad4:	45400015 	stw	r21,0(r8)
 402bad8:	44c00115 	stw	r19,4(r8)
 402badc:	d8801c15 	stw	r2,112(sp)
 402bae0:	d9001b15 	stw	r4,108(sp)
 402bae4:	00c001c4 	movi	r3,7
 402bae8:	1901dd0e 	bge	r3,r4,402c260 <___vfiprintf_internal_r+0xd88>
 402baec:	1002401e 	bne	r2,zero,402c3f0 <___vfiprintf_internal_r+0xf18>
 402baf0:	d8001b15 	stw	zero,108(sp)
 402baf4:	a2c0010c 	andi	r11,r20,4
 402baf8:	58000226 	beq	r11,zero,402bb04 <___vfiprintf_internal_r+0x62c>
 402bafc:	8ca7c83a 	sub	r19,r17,r18
 402bb00:	04c2f216 	blt	zero,r19,402c6cc <___vfiprintf_internal_r+0x11f4>
 402bb04:	8c80010e 	bge	r17,r18,402bb0c <___vfiprintf_internal_r+0x634>
 402bb08:	9023883a 	mov	r17,r18
 402bb0c:	da802317 	ldw	r10,140(sp)
 402bb10:	5455883a 	add	r10,r10,r17
 402bb14:	da802315 	stw	r10,140(sp)
 402bb18:	d8001b15 	stw	zero,108(sp)
 402bb1c:	d811883a 	mov	r8,sp
 402bb20:	003ea206 	br	402b5ac <__flash_rwdata_start+0xffffa684>
 402bb24:	a5000814 	ori	r20,r20,32
 402bb28:	80c00007 	ldb	r3,0(r16)
 402bb2c:	003ec906 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402bb30:	80c00007 	ldb	r3,0(r16)
 402bb34:	1b030926 	beq	r3,r12,402c75c <___vfiprintf_internal_r+0x1284>
 402bb38:	a5000414 	ori	r20,r20,16
 402bb3c:	003ec506 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402bb40:	21003fcc 	andi	r4,r4,255
 402bb44:	20035e1e 	bne	r4,zero,402c8c0 <___vfiprintf_internal_r+0x13e8>
 402bb48:	a080080c 	andi	r2,r20,32
 402bb4c:	1002a526 	beq	r2,zero,402c5e4 <___vfiprintf_internal_r+0x110c>
 402bb50:	da802217 	ldw	r10,136(sp)
 402bb54:	50800017 	ldw	r2,0(r10)
 402bb58:	da802317 	ldw	r10,140(sp)
 402bb5c:	5007d7fa 	srai	r3,r10,31
 402bb60:	da802217 	ldw	r10,136(sp)
 402bb64:	10c00115 	stw	r3,4(r2)
 402bb68:	52800104 	addi	r10,r10,4
 402bb6c:	da802215 	stw	r10,136(sp)
 402bb70:	da802317 	ldw	r10,140(sp)
 402bb74:	12800015 	stw	r10,0(r2)
 402bb78:	003e8c06 	br	402b5ac <__flash_rwdata_start+0xffffa684>
 402bb7c:	21003fcc 	andi	r4,r4,255
 402bb80:	2003511e 	bne	r4,zero,402c8c8 <___vfiprintf_internal_r+0x13f0>
 402bb84:	a080080c 	andi	r2,r20,32
 402bb88:	1000a126 	beq	r2,zero,402be10 <___vfiprintf_internal_r+0x938>
 402bb8c:	da802217 	ldw	r10,136(sp)
 402bb90:	d8001d85 	stb	zero,118(sp)
 402bb94:	50800204 	addi	r2,r10,8
 402bb98:	54800017 	ldw	r18,0(r10)
 402bb9c:	54c00117 	ldw	r19,4(r10)
 402bba0:	4802b416 	blt	r9,zero,402c674 <___vfiprintf_internal_r+0x119c>
 402bba4:	013fdfc4 	movi	r4,-129
 402bba8:	94c6b03a 	or	r3,r18,r19
 402bbac:	d8802215 	stw	r2,136(sp)
 402bbb0:	a128703a 	and	r20,r20,r4
 402bbb4:	1800a226 	beq	r3,zero,402be40 <___vfiprintf_internal_r+0x968>
 402bbb8:	0039883a 	mov	fp,zero
 402bbbc:	dd401a04 	addi	r21,sp,104
 402bbc0:	9006d0fa 	srli	r3,r18,3
 402bbc4:	9808977a 	slli	r4,r19,29
 402bbc8:	9826d0fa 	srli	r19,r19,3
 402bbcc:	948001cc 	andi	r18,r18,7
 402bbd0:	90800c04 	addi	r2,r18,48
 402bbd4:	ad7fffc4 	addi	r21,r21,-1
 402bbd8:	20e4b03a 	or	r18,r4,r3
 402bbdc:	a8800005 	stb	r2,0(r21)
 402bbe0:	94c6b03a 	or	r3,r18,r19
 402bbe4:	183ff61e 	bne	r3,zero,402bbc0 <__flash_rwdata_start+0xffffac98>
 402bbe8:	a0c0004c 	andi	r3,r20,1
 402bbec:	18005926 	beq	r3,zero,402bd54 <___vfiprintf_internal_r+0x87c>
 402bbf0:	10803fcc 	andi	r2,r2,255
 402bbf4:	1080201c 	xori	r2,r2,128
 402bbf8:	10bfe004 	addi	r2,r2,-128
 402bbfc:	00c00c04 	movi	r3,48
 402bc00:	10c05426 	beq	r2,r3,402bd54 <___vfiprintf_internal_r+0x87c>
 402bc04:	da801e17 	ldw	r10,120(sp)
 402bc08:	a8bfffc4 	addi	r2,r21,-1
 402bc0c:	a8ffffc5 	stb	r3,-1(r21)
 402bc10:	50a7c83a 	sub	r19,r10,r2
 402bc14:	102b883a 	mov	r21,r2
 402bc18:	003f2f06 	br	402b8d8 <__flash_rwdata_start+0xffffa9b0>
 402bc1c:	21003fcc 	andi	r4,r4,255
 402bc20:	2003421e 	bne	r4,zero,402c92c <___vfiprintf_internal_r+0x1454>
 402bc24:	00800034 	movhi	r2,0
 402bc28:	10806604 	addi	r2,r2,408
 402bc2c:	d8802615 	stw	r2,152(sp)
 402bc30:	a080080c 	andi	r2,r20,32
 402bc34:	1000aa26 	beq	r2,zero,402bee0 <___vfiprintf_internal_r+0xa08>
 402bc38:	da802217 	ldw	r10,136(sp)
 402bc3c:	54800017 	ldw	r18,0(r10)
 402bc40:	54c00117 	ldw	r19,4(r10)
 402bc44:	52800204 	addi	r10,r10,8
 402bc48:	da802215 	stw	r10,136(sp)
 402bc4c:	a080004c 	andi	r2,r20,1
 402bc50:	1001d226 	beq	r2,zero,402c39c <___vfiprintf_internal_r+0xec4>
 402bc54:	94c4b03a 	or	r2,r18,r19
 402bc58:	1002351e 	bne	r2,zero,402c530 <___vfiprintf_internal_r+0x1058>
 402bc5c:	d8001d85 	stb	zero,118(sp)
 402bc60:	48022216 	blt	r9,zero,402c4ec <___vfiprintf_internal_r+0x1014>
 402bc64:	00bfdfc4 	movi	r2,-129
 402bc68:	a0a8703a 	and	r20,r20,r2
 402bc6c:	003f1506 	br	402b8c4 <__flash_rwdata_start+0xffffa99c>
 402bc70:	da802217 	ldw	r10,136(sp)
 402bc74:	04800044 	movi	r18,1
 402bc78:	d8001d85 	stb	zero,118(sp)
 402bc7c:	50800017 	ldw	r2,0(r10)
 402bc80:	52800104 	addi	r10,r10,4
 402bc84:	da802215 	stw	r10,136(sp)
 402bc88:	d8801005 	stb	r2,64(sp)
 402bc8c:	9027883a 	mov	r19,r18
 402bc90:	dd401004 	addi	r21,sp,64
 402bc94:	0013883a 	mov	r9,zero
 402bc98:	003f1706 	br	402b8f8 <__flash_rwdata_start+0xffffa9d0>
 402bc9c:	21003fcc 	andi	r4,r4,255
 402bca0:	2003201e 	bne	r4,zero,402c924 <___vfiprintf_internal_r+0x144c>
 402bca4:	a080080c 	andi	r2,r20,32
 402bca8:	10004b26 	beq	r2,zero,402bdd8 <___vfiprintf_internal_r+0x900>
 402bcac:	da802217 	ldw	r10,136(sp)
 402bcb0:	50800117 	ldw	r2,4(r10)
 402bcb4:	54800017 	ldw	r18,0(r10)
 402bcb8:	52800204 	addi	r10,r10,8
 402bcbc:	da802215 	stw	r10,136(sp)
 402bcc0:	1027883a 	mov	r19,r2
 402bcc4:	10022c16 	blt	r2,zero,402c578 <___vfiprintf_internal_r+0x10a0>
 402bcc8:	df001d83 	ldbu	fp,118(sp)
 402bccc:	48007216 	blt	r9,zero,402be98 <___vfiprintf_internal_r+0x9c0>
 402bcd0:	00ffdfc4 	movi	r3,-129
 402bcd4:	94c4b03a 	or	r2,r18,r19
 402bcd8:	a0e8703a 	and	r20,r20,r3
 402bcdc:	1000cc26 	beq	r2,zero,402c010 <___vfiprintf_internal_r+0xb38>
 402bce0:	98021026 	beq	r19,zero,402c524 <___vfiprintf_internal_r+0x104c>
 402bce4:	dc402415 	stw	r17,144(sp)
 402bce8:	dc002515 	stw	r16,148(sp)
 402bcec:	9823883a 	mov	r17,r19
 402bcf0:	9021883a 	mov	r16,r18
 402bcf4:	dd401a04 	addi	r21,sp,104
 402bcf8:	4825883a 	mov	r18,r9
 402bcfc:	4027883a 	mov	r19,r8
 402bd00:	8009883a 	mov	r4,r16
 402bd04:	880b883a 	mov	r5,r17
 402bd08:	01800284 	movi	r6,10
 402bd0c:	000f883a 	mov	r7,zero
 402bd10:	402d9180 	call	402d918 <__umoddi3>
 402bd14:	10800c04 	addi	r2,r2,48
 402bd18:	ad7fffc4 	addi	r21,r21,-1
 402bd1c:	8009883a 	mov	r4,r16
 402bd20:	880b883a 	mov	r5,r17
 402bd24:	a8800005 	stb	r2,0(r21)
 402bd28:	01800284 	movi	r6,10
 402bd2c:	000f883a 	mov	r7,zero
 402bd30:	402d3a00 	call	402d3a0 <__udivdi3>
 402bd34:	1021883a 	mov	r16,r2
 402bd38:	10c4b03a 	or	r2,r2,r3
 402bd3c:	1823883a 	mov	r17,r3
 402bd40:	103fef1e 	bne	r2,zero,402bd00 <__flash_rwdata_start+0xffffadd8>
 402bd44:	dc402417 	ldw	r17,144(sp)
 402bd48:	dc002517 	ldw	r16,148(sp)
 402bd4c:	9013883a 	mov	r9,r18
 402bd50:	9811883a 	mov	r8,r19
 402bd54:	da801e17 	ldw	r10,120(sp)
 402bd58:	5567c83a 	sub	r19,r10,r21
 402bd5c:	003ede06 	br	402b8d8 <__flash_rwdata_start+0xffffa9b0>
 402bd60:	38803fcc 	andi	r2,r7,255
 402bd64:	1080201c 	xori	r2,r2,128
 402bd68:	10bfe004 	addi	r2,r2,-128
 402bd6c:	1002371e 	bne	r2,zero,402c64c <___vfiprintf_internal_r+0x1174>
 402bd70:	01000044 	movi	r4,1
 402bd74:	01c00804 	movi	r7,32
 402bd78:	80c00007 	ldb	r3,0(r16)
 402bd7c:	003e3506 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402bd80:	a5000054 	ori	r20,r20,1
 402bd84:	80c00007 	ldb	r3,0(r16)
 402bd88:	003e3206 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402bd8c:	a5002014 	ori	r20,r20,128
 402bd90:	80c00007 	ldb	r3,0(r16)
 402bd94:	003e2f06 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402bd98:	8015883a 	mov	r10,r16
 402bd9c:	0023883a 	mov	r17,zero
 402bda0:	18bff404 	addi	r2,r3,-48
 402bda4:	50c00007 	ldb	r3,0(r10)
 402bda8:	8c4002a4 	muli	r17,r17,10
 402bdac:	84000044 	addi	r16,r16,1
 402bdb0:	8015883a 	mov	r10,r16
 402bdb4:	1463883a 	add	r17,r2,r17
 402bdb8:	18bff404 	addi	r2,r3,-48
 402bdbc:	30bff92e 	bgeu	r6,r2,402bda4 <__flash_rwdata_start+0xffffae7c>
 402bdc0:	003e2506 	br	402b658 <__flash_rwdata_start+0xffffa730>
 402bdc4:	21003fcc 	andi	r4,r4,255
 402bdc8:	2002d41e 	bne	r4,zero,402c91c <___vfiprintf_internal_r+0x1444>
 402bdcc:	a5000414 	ori	r20,r20,16
 402bdd0:	a080080c 	andi	r2,r20,32
 402bdd4:	103fb51e 	bne	r2,zero,402bcac <__flash_rwdata_start+0xffffad84>
 402bdd8:	a080040c 	andi	r2,r20,16
 402bddc:	1001f826 	beq	r2,zero,402c5c0 <___vfiprintf_internal_r+0x10e8>
 402bde0:	da802217 	ldw	r10,136(sp)
 402bde4:	54800017 	ldw	r18,0(r10)
 402bde8:	52800104 	addi	r10,r10,4
 402bdec:	da802215 	stw	r10,136(sp)
 402bdf0:	9027d7fa 	srai	r19,r18,31
 402bdf4:	9805883a 	mov	r2,r19
 402bdf8:	003fb206 	br	402bcc4 <__flash_rwdata_start+0xffffad9c>
 402bdfc:	21003fcc 	andi	r4,r4,255
 402be00:	2002c41e 	bne	r4,zero,402c914 <___vfiprintf_internal_r+0x143c>
 402be04:	a5000414 	ori	r20,r20,16
 402be08:	a080080c 	andi	r2,r20,32
 402be0c:	103f5f1e 	bne	r2,zero,402bb8c <__flash_rwdata_start+0xffffac64>
 402be10:	a080040c 	andi	r2,r20,16
 402be14:	10020f26 	beq	r2,zero,402c654 <___vfiprintf_internal_r+0x117c>
 402be18:	da802217 	ldw	r10,136(sp)
 402be1c:	d8001d85 	stb	zero,118(sp)
 402be20:	0027883a 	mov	r19,zero
 402be24:	50800104 	addi	r2,r10,4
 402be28:	54800017 	ldw	r18,0(r10)
 402be2c:	48021116 	blt	r9,zero,402c674 <___vfiprintf_internal_r+0x119c>
 402be30:	00ffdfc4 	movi	r3,-129
 402be34:	d8802215 	stw	r2,136(sp)
 402be38:	a0e8703a 	and	r20,r20,r3
 402be3c:	903f5e1e 	bne	r18,zero,402bbb8 <__flash_rwdata_start+0xffffac90>
 402be40:	0039883a 	mov	fp,zero
 402be44:	4802a626 	beq	r9,zero,402c8e0 <___vfiprintf_internal_r+0x1408>
 402be48:	0025883a 	mov	r18,zero
 402be4c:	0027883a 	mov	r19,zero
 402be50:	003f5a06 	br	402bbbc <__flash_rwdata_start+0xffffac94>
 402be54:	21003fcc 	andi	r4,r4,255
 402be58:	20029f1e 	bne	r4,zero,402c8d8 <___vfiprintf_internal_r+0x1400>
 402be5c:	a5000414 	ori	r20,r20,16
 402be60:	a080080c 	andi	r2,r20,32
 402be64:	10005e1e 	bne	r2,zero,402bfe0 <___vfiprintf_internal_r+0xb08>
 402be68:	a080040c 	andi	r2,r20,16
 402be6c:	1001a21e 	bne	r2,zero,402c4f8 <___vfiprintf_internal_r+0x1020>
 402be70:	a080100c 	andi	r2,r20,64
 402be74:	d8001d85 	stb	zero,118(sp)
 402be78:	da802217 	ldw	r10,136(sp)
 402be7c:	1002231e 	bne	r2,zero,402c70c <___vfiprintf_internal_r+0x1234>
 402be80:	50800104 	addi	r2,r10,4
 402be84:	54800017 	ldw	r18,0(r10)
 402be88:	0027883a 	mov	r19,zero
 402be8c:	4801a00e 	bge	r9,zero,402c510 <___vfiprintf_internal_r+0x1038>
 402be90:	d8802215 	stw	r2,136(sp)
 402be94:	0039883a 	mov	fp,zero
 402be98:	94c4b03a 	or	r2,r18,r19
 402be9c:	103f901e 	bne	r2,zero,402bce0 <__flash_rwdata_start+0xffffadb8>
 402bea0:	00800044 	movi	r2,1
 402bea4:	10803fcc 	andi	r2,r2,255
 402bea8:	00c00044 	movi	r3,1
 402beac:	10c05926 	beq	r2,r3,402c014 <___vfiprintf_internal_r+0xb3c>
 402beb0:	00c00084 	movi	r3,2
 402beb4:	10ffe41e 	bne	r2,r3,402be48 <__flash_rwdata_start+0xffffaf20>
 402beb8:	0025883a 	mov	r18,zero
 402bebc:	0027883a 	mov	r19,zero
 402bec0:	00013d06 	br	402c3b8 <___vfiprintf_internal_r+0xee0>
 402bec4:	21003fcc 	andi	r4,r4,255
 402bec8:	2002811e 	bne	r4,zero,402c8d0 <___vfiprintf_internal_r+0x13f8>
 402becc:	00800034 	movhi	r2,0
 402bed0:	10806104 	addi	r2,r2,388
 402bed4:	d8802615 	stw	r2,152(sp)
 402bed8:	a080080c 	andi	r2,r20,32
 402bedc:	103f561e 	bne	r2,zero,402bc38 <__flash_rwdata_start+0xffffad10>
 402bee0:	a080040c 	andi	r2,r20,16
 402bee4:	1001d126 	beq	r2,zero,402c62c <___vfiprintf_internal_r+0x1154>
 402bee8:	da802217 	ldw	r10,136(sp)
 402beec:	0027883a 	mov	r19,zero
 402bef0:	54800017 	ldw	r18,0(r10)
 402bef4:	52800104 	addi	r10,r10,4
 402bef8:	da802215 	stw	r10,136(sp)
 402befc:	003f5306 	br	402bc4c <__flash_rwdata_start+0xffffad24>
 402bf00:	da802217 	ldw	r10,136(sp)
 402bf04:	d8001d85 	stb	zero,118(sp)
 402bf08:	55400017 	ldw	r21,0(r10)
 402bf0c:	50c00104 	addi	r3,r10,4
 402bf10:	a8024226 	beq	r21,zero,402c81c <___vfiprintf_internal_r+0x1344>
 402bf14:	48021816 	blt	r9,zero,402c778 <___vfiprintf_internal_r+0x12a0>
 402bf18:	480d883a 	mov	r6,r9
 402bf1c:	000b883a 	mov	r5,zero
 402bf20:	a809883a 	mov	r4,r21
 402bf24:	d8c02a15 	stw	r3,168(sp)
 402bf28:	da002b15 	stw	r8,172(sp)
 402bf2c:	da402c15 	stw	r9,176(sp)
 402bf30:	40297480 	call	4029748 <memchr>
 402bf34:	d8c02a17 	ldw	r3,168(sp)
 402bf38:	da002b17 	ldw	r8,172(sp)
 402bf3c:	da402c17 	ldw	r9,176(sp)
 402bf40:	10024826 	beq	r2,zero,402c864 <___vfiprintf_internal_r+0x138c>
 402bf44:	1567c83a 	sub	r19,r2,r21
 402bf48:	df001d83 	ldbu	fp,118(sp)
 402bf4c:	d8c02215 	stw	r3,136(sp)
 402bf50:	0013883a 	mov	r9,zero
 402bf54:	003e6006 	br	402b8d8 <__flash_rwdata_start+0xffffa9b0>
 402bf58:	21003fcc 	andi	r4,r4,255
 402bf5c:	203fc026 	beq	r4,zero,402be60 <__flash_rwdata_start+0xffffaf38>
 402bf60:	d9c01d85 	stb	r7,118(sp)
 402bf64:	003fbe06 	br	402be60 <__flash_rwdata_start+0xffffaf38>
 402bf68:	da802217 	ldw	r10,136(sp)
 402bf6c:	54400017 	ldw	r17,0(r10)
 402bf70:	50800104 	addi	r2,r10,4
 402bf74:	883e3b16 	blt	r17,zero,402b864 <__flash_rwdata_start+0xffffa93c>
 402bf78:	d8802215 	stw	r2,136(sp)
 402bf7c:	80c00007 	ldb	r3,0(r16)
 402bf80:	003db406 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402bf84:	01000044 	movi	r4,1
 402bf88:	01c00ac4 	movi	r7,43
 402bf8c:	80c00007 	ldb	r3,0(r16)
 402bf90:	003db006 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402bf94:	80c00007 	ldb	r3,0(r16)
 402bf98:	82800044 	addi	r10,r16,1
 402bf9c:	1b423c26 	beq	r3,r13,402c890 <___vfiprintf_internal_r+0x13b8>
 402bfa0:	18bff404 	addi	r2,r3,-48
 402bfa4:	0013883a 	mov	r9,zero
 402bfa8:	30822b36 	bltu	r6,r2,402c858 <___vfiprintf_internal_r+0x1380>
 402bfac:	50c00007 	ldb	r3,0(r10)
 402bfb0:	4a4002a4 	muli	r9,r9,10
 402bfb4:	54000044 	addi	r16,r10,1
 402bfb8:	8015883a 	mov	r10,r16
 402bfbc:	4893883a 	add	r9,r9,r2
 402bfc0:	18bff404 	addi	r2,r3,-48
 402bfc4:	30bff92e 	bgeu	r6,r2,402bfac <__flash_rwdata_start+0xffffb084>
 402bfc8:	483da30e 	bge	r9,zero,402b658 <__flash_rwdata_start+0xffffa730>
 402bfcc:	027fffc4 	movi	r9,-1
 402bfd0:	003da106 	br	402b658 <__flash_rwdata_start+0xffffa730>
 402bfd4:	a5001014 	ori	r20,r20,64
 402bfd8:	80c00007 	ldb	r3,0(r16)
 402bfdc:	003d9d06 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402bfe0:	da802217 	ldw	r10,136(sp)
 402bfe4:	d8001d85 	stb	zero,118(sp)
 402bfe8:	50c00204 	addi	r3,r10,8
 402bfec:	54800017 	ldw	r18,0(r10)
 402bff0:	54c00117 	ldw	r19,4(r10)
 402bff4:	4801ca16 	blt	r9,zero,402c720 <___vfiprintf_internal_r+0x1248>
 402bff8:	013fdfc4 	movi	r4,-129
 402bffc:	94c4b03a 	or	r2,r18,r19
 402c000:	d8c02215 	stw	r3,136(sp)
 402c004:	a128703a 	and	r20,r20,r4
 402c008:	0039883a 	mov	fp,zero
 402c00c:	103f341e 	bne	r2,zero,402bce0 <__flash_rwdata_start+0xffffadb8>
 402c010:	483e2e26 	beq	r9,zero,402b8cc <__flash_rwdata_start+0xffffa9a4>
 402c014:	0025883a 	mov	r18,zero
 402c018:	94800c04 	addi	r18,r18,48
 402c01c:	dc8019c5 	stb	r18,103(sp)
 402c020:	dcc02717 	ldw	r19,156(sp)
 402c024:	dd4019c4 	addi	r21,sp,103
 402c028:	003e2b06 	br	402b8d8 <__flash_rwdata_start+0xffffa9b0>
 402c02c:	21003fcc 	andi	r4,r4,255
 402c030:	2002361e 	bne	r4,zero,402c90c <___vfiprintf_internal_r+0x1434>
 402c034:	1801c126 	beq	r3,zero,402c73c <___vfiprintf_internal_r+0x1264>
 402c038:	04800044 	movi	r18,1
 402c03c:	d8c01005 	stb	r3,64(sp)
 402c040:	d8001d85 	stb	zero,118(sp)
 402c044:	9027883a 	mov	r19,r18
 402c048:	dd401004 	addi	r21,sp,64
 402c04c:	003f1106 	br	402bc94 <__flash_rwdata_start+0xffffad6c>
 402c050:	d9402117 	ldw	r5,132(sp)
 402c054:	d9002017 	ldw	r4,128(sp)
 402c058:	d9801a04 	addi	r6,sp,104
 402c05c:	d9c02b15 	stw	r7,172(sp)
 402c060:	dbc02a15 	stw	r15,168(sp)
 402c064:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c068:	d9c02b17 	ldw	r7,172(sp)
 402c06c:	dbc02a17 	ldw	r15,168(sp)
 402c070:	10006d1e 	bne	r2,zero,402c228 <___vfiprintf_internal_r+0xd50>
 402c074:	d9801b17 	ldw	r6,108(sp)
 402c078:	d8801c17 	ldw	r2,112(sp)
 402c07c:	d811883a 	mov	r8,sp
 402c080:	31400044 	addi	r5,r6,1
 402c084:	003e3306 	br	402b954 <__flash_rwdata_start+0xffffaa2c>
 402c088:	d9401b17 	ldw	r5,108(sp)
 402c08c:	d8801c17 	ldw	r2,112(sp)
 402c090:	29000044 	addi	r4,r5,1
 402c094:	d8c01d87 	ldb	r3,118(sp)
 402c098:	183e4d26 	beq	r3,zero,402b9d0 <__flash_rwdata_start+0xffffaaa8>
 402c09c:	00c00044 	movi	r3,1
 402c0a0:	d9401d84 	addi	r5,sp,118
 402c0a4:	10c5883a 	add	r2,r2,r3
 402c0a8:	41400015 	stw	r5,0(r8)
 402c0ac:	40c00115 	stw	r3,4(r8)
 402c0b0:	d8801c15 	stw	r2,112(sp)
 402c0b4:	d9001b15 	stw	r4,108(sp)
 402c0b8:	014001c4 	movi	r5,7
 402c0bc:	2900a90e 	bge	r5,r4,402c364 <___vfiprintf_internal_r+0xe8c>
 402c0c0:	1000da1e 	bne	r2,zero,402c42c <___vfiprintf_internal_r+0xf54>
 402c0c4:	7000ab1e 	bne	r14,zero,402c374 <___vfiprintf_internal_r+0xe9c>
 402c0c8:	000b883a 	mov	r5,zero
 402c0cc:	1809883a 	mov	r4,r3
 402c0d0:	d811883a 	mov	r8,sp
 402c0d4:	00c02004 	movi	r3,128
 402c0d8:	e0fe4d26 	beq	fp,r3,402ba10 <__flash_rwdata_start+0xffffaae8>
 402c0dc:	4cf9c83a 	sub	fp,r9,r19
 402c0e0:	073e7b0e 	bge	zero,fp,402bad0 <__flash_rwdata_start+0xffffaba8>
 402c0e4:	01c00404 	movi	r7,16
 402c0e8:	3f01900e 	bge	r7,fp,402c72c <___vfiprintf_internal_r+0x1254>
 402c0ec:	00c00034 	movhi	r3,0
 402c0f0:	18c0c504 	addi	r3,r3,788
 402c0f4:	d8c02415 	stw	r3,144(sp)
 402c0f8:	034001c4 	movi	r13,7
 402c0fc:	00000506 	br	402c114 <___vfiprintf_internal_r+0xc3c>
 402c100:	29000084 	addi	r4,r5,2
 402c104:	42000204 	addi	r8,r8,8
 402c108:	180b883a 	mov	r5,r3
 402c10c:	e73ffc04 	addi	fp,fp,-16
 402c110:	3f000d0e 	bge	r7,fp,402c148 <___vfiprintf_internal_r+0xc70>
 402c114:	10800404 	addi	r2,r2,16
 402c118:	28c00044 	addi	r3,r5,1
 402c11c:	45c00015 	stw	r23,0(r8)
 402c120:	41c00115 	stw	r7,4(r8)
 402c124:	d8801c15 	stw	r2,112(sp)
 402c128:	d8c01b15 	stw	r3,108(sp)
 402c12c:	68fff40e 	bge	r13,r3,402c100 <__flash_rwdata_start+0xffffb1d8>
 402c130:	1000101e 	bne	r2,zero,402c174 <___vfiprintf_internal_r+0xc9c>
 402c134:	e73ffc04 	addi	fp,fp,-16
 402c138:	01000044 	movi	r4,1
 402c13c:	000b883a 	mov	r5,zero
 402c140:	d811883a 	mov	r8,sp
 402c144:	3f3ff316 	blt	r7,fp,402c114 <__flash_rwdata_start+0xffffb1ec>
 402c148:	da802417 	ldw	r10,144(sp)
 402c14c:	1705883a 	add	r2,r2,fp
 402c150:	47000115 	stw	fp,4(r8)
 402c154:	42800015 	stw	r10,0(r8)
 402c158:	d8801c15 	stw	r2,112(sp)
 402c15c:	d9001b15 	stw	r4,108(sp)
 402c160:	00c001c4 	movi	r3,7
 402c164:	19003616 	blt	r3,r4,402c240 <___vfiprintf_internal_r+0xd68>
 402c168:	42000204 	addi	r8,r8,8
 402c16c:	21000044 	addi	r4,r4,1
 402c170:	003e5706 	br	402bad0 <__flash_rwdata_start+0xffffaba8>
 402c174:	d9402117 	ldw	r5,132(sp)
 402c178:	d9002017 	ldw	r4,128(sp)
 402c17c:	d9801a04 	addi	r6,sp,104
 402c180:	d9c02b15 	stw	r7,172(sp)
 402c184:	db402a15 	stw	r13,168(sp)
 402c188:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c18c:	d9c02b17 	ldw	r7,172(sp)
 402c190:	db402a17 	ldw	r13,168(sp)
 402c194:	1000241e 	bne	r2,zero,402c228 <___vfiprintf_internal_r+0xd50>
 402c198:	d9401b17 	ldw	r5,108(sp)
 402c19c:	d8801c17 	ldw	r2,112(sp)
 402c1a0:	d811883a 	mov	r8,sp
 402c1a4:	29000044 	addi	r4,r5,1
 402c1a8:	003fd806 	br	402c10c <__flash_rwdata_start+0xffffb1e4>
 402c1ac:	d9401b17 	ldw	r5,108(sp)
 402c1b0:	00c00034 	movhi	r3,0
 402c1b4:	18c0c904 	addi	r3,r3,804
 402c1b8:	d8c02415 	stw	r3,144(sp)
 402c1bc:	29400044 	addi	r5,r5,1
 402c1c0:	d8c02417 	ldw	r3,144(sp)
 402c1c4:	14c5883a 	add	r2,r2,r19
 402c1c8:	44c00115 	stw	r19,4(r8)
 402c1cc:	40c00015 	stw	r3,0(r8)
 402c1d0:	d8801c15 	stw	r2,112(sp)
 402c1d4:	d9401b15 	stw	r5,108(sp)
 402c1d8:	00c001c4 	movi	r3,7
 402c1dc:	1940070e 	bge	r3,r5,402c1fc <___vfiprintf_internal_r+0xd24>
 402c1e0:	103e4826 	beq	r2,zero,402bb04 <__flash_rwdata_start+0xffffabdc>
 402c1e4:	d9402117 	ldw	r5,132(sp)
 402c1e8:	d9002017 	ldw	r4,128(sp)
 402c1ec:	d9801a04 	addi	r6,sp,104
 402c1f0:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c1f4:	10000c1e 	bne	r2,zero,402c228 <___vfiprintf_internal_r+0xd50>
 402c1f8:	d8801c17 	ldw	r2,112(sp)
 402c1fc:	8c80010e 	bge	r17,r18,402c204 <___vfiprintf_internal_r+0xd2c>
 402c200:	9023883a 	mov	r17,r18
 402c204:	da802317 	ldw	r10,140(sp)
 402c208:	5455883a 	add	r10,r10,r17
 402c20c:	da802315 	stw	r10,140(sp)
 402c210:	103e4126 	beq	r2,zero,402bb18 <__flash_rwdata_start+0xffffabf0>
 402c214:	d9402117 	ldw	r5,132(sp)
 402c218:	d9002017 	ldw	r4,128(sp)
 402c21c:	d9801a04 	addi	r6,sp,104
 402c220:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c224:	103e3c26 	beq	r2,zero,402bb18 <__flash_rwdata_start+0xffffabf0>
 402c228:	dd002117 	ldw	r20,132(sp)
 402c22c:	a080030b 	ldhu	r2,12(r20)
 402c230:	1080100c 	andi	r2,r2,64
 402c234:	1001231e 	bne	r2,zero,402c6c4 <___vfiprintf_internal_r+0x11ec>
 402c238:	d8802317 	ldw	r2,140(sp)
 402c23c:	003d7b06 	br	402b82c <__flash_rwdata_start+0xffffa904>
 402c240:	1000991e 	bne	r2,zero,402c4a8 <___vfiprintf_internal_r+0xfd0>
 402c244:	00c00044 	movi	r3,1
 402c248:	9805883a 	mov	r2,r19
 402c24c:	dd400015 	stw	r21,0(sp)
 402c250:	dcc00115 	stw	r19,4(sp)
 402c254:	dcc01c15 	stw	r19,112(sp)
 402c258:	d8c01b15 	stw	r3,108(sp)
 402c25c:	d811883a 	mov	r8,sp
 402c260:	42000204 	addi	r8,r8,8
 402c264:	a2c0010c 	andi	r11,r20,4
 402c268:	583fe426 	beq	r11,zero,402c1fc <__flash_rwdata_start+0xffffb2d4>
 402c26c:	8ca7c83a 	sub	r19,r17,r18
 402c270:	04ffe20e 	bge	zero,r19,402c1fc <__flash_rwdata_start+0xffffb2d4>
 402c274:	01c00404 	movi	r7,16
 402c278:	3cffcc0e 	bge	r7,r19,402c1ac <__flash_rwdata_start+0xffffb284>
 402c27c:	02800034 	movhi	r10,0
 402c280:	5280c904 	addi	r10,r10,804
 402c284:	d9001b17 	ldw	r4,108(sp)
 402c288:	da802415 	stw	r10,144(sp)
 402c28c:	382b883a 	mov	r21,r7
 402c290:	050001c4 	movi	r20,7
 402c294:	df002017 	ldw	fp,128(sp)
 402c298:	00000506 	br	402c2b0 <___vfiprintf_internal_r+0xdd8>
 402c29c:	21400084 	addi	r5,r4,2
 402c2a0:	42000204 	addi	r8,r8,8
 402c2a4:	1809883a 	mov	r4,r3
 402c2a8:	9cfffc04 	addi	r19,r19,-16
 402c2ac:	acffc40e 	bge	r21,r19,402c1c0 <__flash_rwdata_start+0xffffb298>
 402c2b0:	10800404 	addi	r2,r2,16
 402c2b4:	20c00044 	addi	r3,r4,1
 402c2b8:	45800015 	stw	r22,0(r8)
 402c2bc:	45400115 	stw	r21,4(r8)
 402c2c0:	d8801c15 	stw	r2,112(sp)
 402c2c4:	d8c01b15 	stw	r3,108(sp)
 402c2c8:	a0fff40e 	bge	r20,r3,402c29c <__flash_rwdata_start+0xffffb374>
 402c2cc:	1000041e 	bne	r2,zero,402c2e0 <___vfiprintf_internal_r+0xe08>
 402c2d0:	01400044 	movi	r5,1
 402c2d4:	0009883a 	mov	r4,zero
 402c2d8:	d811883a 	mov	r8,sp
 402c2dc:	003ff206 	br	402c2a8 <__flash_rwdata_start+0xffffb380>
 402c2e0:	d9402117 	ldw	r5,132(sp)
 402c2e4:	d9801a04 	addi	r6,sp,104
 402c2e8:	e009883a 	mov	r4,fp
 402c2ec:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c2f0:	103fcd1e 	bne	r2,zero,402c228 <__flash_rwdata_start+0xffffb300>
 402c2f4:	d9001b17 	ldw	r4,108(sp)
 402c2f8:	d8801c17 	ldw	r2,112(sp)
 402c2fc:	d811883a 	mov	r8,sp
 402c300:	21400044 	addi	r5,r4,1
 402c304:	003fe806 	br	402c2a8 <__flash_rwdata_start+0xffffb380>
 402c308:	d9402117 	ldw	r5,132(sp)
 402c30c:	d9002017 	ldw	r4,128(sp)
 402c310:	d9801a04 	addi	r6,sp,104
 402c314:	d9c02b15 	stw	r7,172(sp)
 402c318:	db402a15 	stw	r13,168(sp)
 402c31c:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c320:	d9c02b17 	ldw	r7,172(sp)
 402c324:	db402a17 	ldw	r13,168(sp)
 402c328:	103fbf1e 	bne	r2,zero,402c228 <__flash_rwdata_start+0xffffb300>
 402c32c:	d9401b17 	ldw	r5,108(sp)
 402c330:	d8801c17 	ldw	r2,112(sp)
 402c334:	d811883a 	mov	r8,sp
 402c338:	29800044 	addi	r6,r5,1
 402c33c:	003dc406 	br	402ba50 <__flash_rwdata_start+0xffffab28>
 402c340:	1000d21e 	bne	r2,zero,402c68c <___vfiprintf_internal_r+0x11b4>
 402c344:	d8c01d87 	ldb	r3,118(sp)
 402c348:	18009526 	beq	r3,zero,402c5a0 <___vfiprintf_internal_r+0x10c8>
 402c34c:	00800044 	movi	r2,1
 402c350:	d8c01d84 	addi	r3,sp,118
 402c354:	1009883a 	mov	r4,r2
 402c358:	d8c00015 	stw	r3,0(sp)
 402c35c:	d8800115 	stw	r2,4(sp)
 402c360:	d811883a 	mov	r8,sp
 402c364:	200b883a 	mov	r5,r4
 402c368:	42000204 	addi	r8,r8,8
 402c36c:	21000044 	addi	r4,r4,1
 402c370:	003d9706 	br	402b9d0 <__flash_rwdata_start+0xffffaaa8>
 402c374:	d9001d04 	addi	r4,sp,116
 402c378:	00800084 	movi	r2,2
 402c37c:	d9000015 	stw	r4,0(sp)
 402c380:	d8800115 	stw	r2,4(sp)
 402c384:	1809883a 	mov	r4,r3
 402c388:	d811883a 	mov	r8,sp
 402c38c:	200b883a 	mov	r5,r4
 402c390:	42000204 	addi	r8,r8,8
 402c394:	21000044 	addi	r4,r4,1
 402c398:	003f4e06 	br	402c0d4 <__flash_rwdata_start+0xffffb1ac>
 402c39c:	d8001d85 	stb	zero,118(sp)
 402c3a0:	48005016 	blt	r9,zero,402c4e4 <___vfiprintf_internal_r+0x100c>
 402c3a4:	00ffdfc4 	movi	r3,-129
 402c3a8:	94c4b03a 	or	r2,r18,r19
 402c3ac:	a0e8703a 	and	r20,r20,r3
 402c3b0:	103d4426 	beq	r2,zero,402b8c4 <__flash_rwdata_start+0xffffa99c>
 402c3b4:	0039883a 	mov	fp,zero
 402c3b8:	d9002617 	ldw	r4,152(sp)
 402c3bc:	dd401a04 	addi	r21,sp,104
 402c3c0:	908003cc 	andi	r2,r18,15
 402c3c4:	9806973a 	slli	r3,r19,28
 402c3c8:	2085883a 	add	r2,r4,r2
 402c3cc:	9024d13a 	srli	r18,r18,4
 402c3d0:	10800003 	ldbu	r2,0(r2)
 402c3d4:	9826d13a 	srli	r19,r19,4
 402c3d8:	ad7fffc4 	addi	r21,r21,-1
 402c3dc:	1ca4b03a 	or	r18,r3,r18
 402c3e0:	a8800005 	stb	r2,0(r21)
 402c3e4:	94c4b03a 	or	r2,r18,r19
 402c3e8:	103ff51e 	bne	r2,zero,402c3c0 <__flash_rwdata_start+0xffffb498>
 402c3ec:	003e5906 	br	402bd54 <__flash_rwdata_start+0xffffae2c>
 402c3f0:	d9402117 	ldw	r5,132(sp)
 402c3f4:	d9002017 	ldw	r4,128(sp)
 402c3f8:	d9801a04 	addi	r6,sp,104
 402c3fc:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c400:	103f891e 	bne	r2,zero,402c228 <__flash_rwdata_start+0xffffb300>
 402c404:	d8801c17 	ldw	r2,112(sp)
 402c408:	d811883a 	mov	r8,sp
 402c40c:	003f9506 	br	402c264 <__flash_rwdata_start+0xffffb33c>
 402c410:	d9402117 	ldw	r5,132(sp)
 402c414:	d9002017 	ldw	r4,128(sp)
 402c418:	d9801a04 	addi	r6,sp,104
 402c41c:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c420:	103f811e 	bne	r2,zero,402c228 <__flash_rwdata_start+0xffffb300>
 402c424:	d811883a 	mov	r8,sp
 402c428:	003ced06 	br	402b7e0 <__flash_rwdata_start+0xffffa8b8>
 402c42c:	d9402117 	ldw	r5,132(sp)
 402c430:	d9002017 	ldw	r4,128(sp)
 402c434:	d9801a04 	addi	r6,sp,104
 402c438:	da402c15 	stw	r9,176(sp)
 402c43c:	db802a15 	stw	r14,168(sp)
 402c440:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c444:	da402c17 	ldw	r9,176(sp)
 402c448:	db802a17 	ldw	r14,168(sp)
 402c44c:	103f761e 	bne	r2,zero,402c228 <__flash_rwdata_start+0xffffb300>
 402c450:	d9401b17 	ldw	r5,108(sp)
 402c454:	d8801c17 	ldw	r2,112(sp)
 402c458:	d811883a 	mov	r8,sp
 402c45c:	29000044 	addi	r4,r5,1
 402c460:	003d5b06 	br	402b9d0 <__flash_rwdata_start+0xffffaaa8>
 402c464:	d9402117 	ldw	r5,132(sp)
 402c468:	d9002017 	ldw	r4,128(sp)
 402c46c:	d9801a04 	addi	r6,sp,104
 402c470:	da402c15 	stw	r9,176(sp)
 402c474:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c478:	da402c17 	ldw	r9,176(sp)
 402c47c:	103f6a1e 	bne	r2,zero,402c228 <__flash_rwdata_start+0xffffb300>
 402c480:	d9401b17 	ldw	r5,108(sp)
 402c484:	d8801c17 	ldw	r2,112(sp)
 402c488:	d811883a 	mov	r8,sp
 402c48c:	29000044 	addi	r4,r5,1
 402c490:	003f1006 	br	402c0d4 <__flash_rwdata_start+0xffffb1ac>
 402c494:	1000c31e 	bne	r2,zero,402c7a4 <___vfiprintf_internal_r+0x12cc>
 402c498:	01000044 	movi	r4,1
 402c49c:	000b883a 	mov	r5,zero
 402c4a0:	d811883a 	mov	r8,sp
 402c4a4:	003f0d06 	br	402c0dc <__flash_rwdata_start+0xffffb1b4>
 402c4a8:	d9402117 	ldw	r5,132(sp)
 402c4ac:	d9002017 	ldw	r4,128(sp)
 402c4b0:	d9801a04 	addi	r6,sp,104
 402c4b4:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c4b8:	103f5b1e 	bne	r2,zero,402c228 <__flash_rwdata_start+0xffffb300>
 402c4bc:	d9001b17 	ldw	r4,108(sp)
 402c4c0:	d8801c17 	ldw	r2,112(sp)
 402c4c4:	d811883a 	mov	r8,sp
 402c4c8:	21000044 	addi	r4,r4,1
 402c4cc:	003d8006 	br	402bad0 <__flash_rwdata_start+0xffffaba8>
 402c4d0:	01000034 	movhi	r4,0
 402c4d4:	21006604 	addi	r4,r4,408
 402c4d8:	d9002615 	stw	r4,152(sp)
 402c4dc:	d8c02215 	stw	r3,136(sp)
 402c4e0:	1029883a 	mov	r20,r2
 402c4e4:	94c4b03a 	or	r2,r18,r19
 402c4e8:	103fb21e 	bne	r2,zero,402c3b4 <__flash_rwdata_start+0xffffb48c>
 402c4ec:	0039883a 	mov	fp,zero
 402c4f0:	00800084 	movi	r2,2
 402c4f4:	003e6b06 	br	402bea4 <__flash_rwdata_start+0xffffaf7c>
 402c4f8:	da802217 	ldw	r10,136(sp)
 402c4fc:	d8001d85 	stb	zero,118(sp)
 402c500:	0027883a 	mov	r19,zero
 402c504:	50800104 	addi	r2,r10,4
 402c508:	54800017 	ldw	r18,0(r10)
 402c50c:	483e6016 	blt	r9,zero,402be90 <__flash_rwdata_start+0xffffaf68>
 402c510:	00ffdfc4 	movi	r3,-129
 402c514:	d8802215 	stw	r2,136(sp)
 402c518:	a0e8703a 	and	r20,r20,r3
 402c51c:	0039883a 	mov	fp,zero
 402c520:	903ebb26 	beq	r18,zero,402c010 <__flash_rwdata_start+0xffffb0e8>
 402c524:	00800244 	movi	r2,9
 402c528:	14bdee36 	bltu	r2,r18,402bce4 <__flash_rwdata_start+0xffffadbc>
 402c52c:	003eba06 	br	402c018 <__flash_rwdata_start+0xffffb0f0>
 402c530:	00800c04 	movi	r2,48
 402c534:	d8c01d45 	stb	r3,117(sp)
 402c538:	d8801d05 	stb	r2,116(sp)
 402c53c:	d8001d85 	stb	zero,118(sp)
 402c540:	a0c00094 	ori	r3,r20,2
 402c544:	4800a916 	blt	r9,zero,402c7ec <___vfiprintf_internal_r+0x1314>
 402c548:	00bfdfc4 	movi	r2,-129
 402c54c:	a096703a 	and	r11,r20,r2
 402c550:	5d000094 	ori	r20,r11,2
 402c554:	0039883a 	mov	fp,zero
 402c558:	003f9706 	br	402c3b8 <__flash_rwdata_start+0xffffb490>
 402c55c:	8025883a 	mov	r18,r16
 402c560:	003c2e06 	br	402b61c <__flash_rwdata_start+0xffffa6f4>
 402c564:	00800034 	movhi	r2,0
 402c568:	10806604 	addi	r2,r2,408
 402c56c:	0039883a 	mov	fp,zero
 402c570:	d8802615 	stw	r2,152(sp)
 402c574:	003f9006 	br	402c3b8 <__flash_rwdata_start+0xffffb490>
 402c578:	04a5c83a 	sub	r18,zero,r18
 402c57c:	07000b44 	movi	fp,45
 402c580:	9004c03a 	cmpne	r2,r18,zero
 402c584:	04e7c83a 	sub	r19,zero,r19
 402c588:	df001d85 	stb	fp,118(sp)
 402c58c:	98a7c83a 	sub	r19,r19,r2
 402c590:	48009f16 	blt	r9,zero,402c810 <___vfiprintf_internal_r+0x1338>
 402c594:	00bfdfc4 	movi	r2,-129
 402c598:	a0a8703a 	and	r20,r20,r2
 402c59c:	003dd006 	br	402bce0 <__flash_rwdata_start+0xffffadb8>
 402c5a0:	70004c26 	beq	r14,zero,402c6d4 <___vfiprintf_internal_r+0x11fc>
 402c5a4:	00800084 	movi	r2,2
 402c5a8:	d8c01d04 	addi	r3,sp,116
 402c5ac:	d8c00015 	stw	r3,0(sp)
 402c5b0:	d8800115 	stw	r2,4(sp)
 402c5b4:	01000044 	movi	r4,1
 402c5b8:	d811883a 	mov	r8,sp
 402c5bc:	003f7306 	br	402c38c <__flash_rwdata_start+0xffffb464>
 402c5c0:	a080100c 	andi	r2,r20,64
 402c5c4:	da802217 	ldw	r10,136(sp)
 402c5c8:	103e0626 	beq	r2,zero,402bde4 <__flash_rwdata_start+0xffffaebc>
 402c5cc:	5480000f 	ldh	r18,0(r10)
 402c5d0:	52800104 	addi	r10,r10,4
 402c5d4:	da802215 	stw	r10,136(sp)
 402c5d8:	9027d7fa 	srai	r19,r18,31
 402c5dc:	9805883a 	mov	r2,r19
 402c5e0:	003db806 	br	402bcc4 <__flash_rwdata_start+0xffffad9c>
 402c5e4:	a080040c 	andi	r2,r20,16
 402c5e8:	1000091e 	bne	r2,zero,402c610 <___vfiprintf_internal_r+0x1138>
 402c5ec:	a2c0100c 	andi	r11,r20,64
 402c5f0:	58000726 	beq	r11,zero,402c610 <___vfiprintf_internal_r+0x1138>
 402c5f4:	da802217 	ldw	r10,136(sp)
 402c5f8:	50800017 	ldw	r2,0(r10)
 402c5fc:	52800104 	addi	r10,r10,4
 402c600:	da802215 	stw	r10,136(sp)
 402c604:	da802317 	ldw	r10,140(sp)
 402c608:	1280000d 	sth	r10,0(r2)
 402c60c:	003be706 	br	402b5ac <__flash_rwdata_start+0xffffa684>
 402c610:	da802217 	ldw	r10,136(sp)
 402c614:	50800017 	ldw	r2,0(r10)
 402c618:	52800104 	addi	r10,r10,4
 402c61c:	da802215 	stw	r10,136(sp)
 402c620:	da802317 	ldw	r10,140(sp)
 402c624:	12800015 	stw	r10,0(r2)
 402c628:	003be006 	br	402b5ac <__flash_rwdata_start+0xffffa684>
 402c62c:	a080100c 	andi	r2,r20,64
 402c630:	da802217 	ldw	r10,136(sp)
 402c634:	10003026 	beq	r2,zero,402c6f8 <___vfiprintf_internal_r+0x1220>
 402c638:	5480000b 	ldhu	r18,0(r10)
 402c63c:	52800104 	addi	r10,r10,4
 402c640:	0027883a 	mov	r19,zero
 402c644:	da802215 	stw	r10,136(sp)
 402c648:	003d8006 	br	402bc4c <__flash_rwdata_start+0xffffad24>
 402c64c:	80c00007 	ldb	r3,0(r16)
 402c650:	003c0006 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402c654:	a080100c 	andi	r2,r20,64
 402c658:	d8001d85 	stb	zero,118(sp)
 402c65c:	da802217 	ldw	r10,136(sp)
 402c660:	1000201e 	bne	r2,zero,402c6e4 <___vfiprintf_internal_r+0x120c>
 402c664:	50800104 	addi	r2,r10,4
 402c668:	54800017 	ldw	r18,0(r10)
 402c66c:	0027883a 	mov	r19,zero
 402c670:	483def0e 	bge	r9,zero,402be30 <__flash_rwdata_start+0xffffaf08>
 402c674:	94c6b03a 	or	r3,r18,r19
 402c678:	d8802215 	stw	r2,136(sp)
 402c67c:	183d4e1e 	bne	r3,zero,402bbb8 <__flash_rwdata_start+0xffffac90>
 402c680:	0039883a 	mov	fp,zero
 402c684:	0005883a 	mov	r2,zero
 402c688:	003e0606 	br	402bea4 <__flash_rwdata_start+0xffffaf7c>
 402c68c:	d9402117 	ldw	r5,132(sp)
 402c690:	d9002017 	ldw	r4,128(sp)
 402c694:	d9801a04 	addi	r6,sp,104
 402c698:	da402c15 	stw	r9,176(sp)
 402c69c:	db802a15 	stw	r14,168(sp)
 402c6a0:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c6a4:	da402c17 	ldw	r9,176(sp)
 402c6a8:	db802a17 	ldw	r14,168(sp)
 402c6ac:	103ede1e 	bne	r2,zero,402c228 <__flash_rwdata_start+0xffffb300>
 402c6b0:	d9401b17 	ldw	r5,108(sp)
 402c6b4:	d8801c17 	ldw	r2,112(sp)
 402c6b8:	d811883a 	mov	r8,sp
 402c6bc:	29000044 	addi	r4,r5,1
 402c6c0:	003e7406 	br	402c094 <__flash_rwdata_start+0xffffb16c>
 402c6c4:	00bfffc4 	movi	r2,-1
 402c6c8:	003c5806 	br	402b82c <__flash_rwdata_start+0xffffa904>
 402c6cc:	d811883a 	mov	r8,sp
 402c6d0:	003ee806 	br	402c274 <__flash_rwdata_start+0xffffb34c>
 402c6d4:	000b883a 	mov	r5,zero
 402c6d8:	01000044 	movi	r4,1
 402c6dc:	d811883a 	mov	r8,sp
 402c6e0:	003e7c06 	br	402c0d4 <__flash_rwdata_start+0xffffb1ac>
 402c6e4:	50800104 	addi	r2,r10,4
 402c6e8:	5480000b 	ldhu	r18,0(r10)
 402c6ec:	0027883a 	mov	r19,zero
 402c6f0:	483dcf0e 	bge	r9,zero,402be30 <__flash_rwdata_start+0xffffaf08>
 402c6f4:	003fdf06 	br	402c674 <__flash_rwdata_start+0xffffb74c>
 402c6f8:	54800017 	ldw	r18,0(r10)
 402c6fc:	52800104 	addi	r10,r10,4
 402c700:	0027883a 	mov	r19,zero
 402c704:	da802215 	stw	r10,136(sp)
 402c708:	003d5006 	br	402bc4c <__flash_rwdata_start+0xffffad24>
 402c70c:	50800104 	addi	r2,r10,4
 402c710:	5480000b 	ldhu	r18,0(r10)
 402c714:	0027883a 	mov	r19,zero
 402c718:	483f7d0e 	bge	r9,zero,402c510 <__flash_rwdata_start+0xffffb5e8>
 402c71c:	003ddc06 	br	402be90 <__flash_rwdata_start+0xffffaf68>
 402c720:	d8c02215 	stw	r3,136(sp)
 402c724:	0039883a 	mov	fp,zero
 402c728:	003ddb06 	br	402be98 <__flash_rwdata_start+0xffffaf70>
 402c72c:	02800034 	movhi	r10,0
 402c730:	5280c504 	addi	r10,r10,788
 402c734:	da802415 	stw	r10,144(sp)
 402c738:	003e8306 	br	402c148 <__flash_rwdata_start+0xffffb220>
 402c73c:	d8801c17 	ldw	r2,112(sp)
 402c740:	dd002117 	ldw	r20,132(sp)
 402c744:	103eb926 	beq	r2,zero,402c22c <__flash_rwdata_start+0xffffb304>
 402c748:	d9002017 	ldw	r4,128(sp)
 402c74c:	d9801a04 	addi	r6,sp,104
 402c750:	a00b883a 	mov	r5,r20
 402c754:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c758:	003eb406 	br	402c22c <__flash_rwdata_start+0xffffb304>
 402c75c:	80c00043 	ldbu	r3,1(r16)
 402c760:	a5000814 	ori	r20,r20,32
 402c764:	84000044 	addi	r16,r16,1
 402c768:	18c03fcc 	andi	r3,r3,255
 402c76c:	18c0201c 	xori	r3,r3,128
 402c770:	18ffe004 	addi	r3,r3,-128
 402c774:	003bb706 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402c778:	a809883a 	mov	r4,r21
 402c77c:	d8c02a15 	stw	r3,168(sp)
 402c780:	da002b15 	stw	r8,172(sp)
 402c784:	4023df40 	call	4023df4 <strlen>
 402c788:	d8c02a17 	ldw	r3,168(sp)
 402c78c:	1027883a 	mov	r19,r2
 402c790:	df001d83 	ldbu	fp,118(sp)
 402c794:	d8c02215 	stw	r3,136(sp)
 402c798:	0013883a 	mov	r9,zero
 402c79c:	da002b17 	ldw	r8,172(sp)
 402c7a0:	003c4d06 	br	402b8d8 <__flash_rwdata_start+0xffffa9b0>
 402c7a4:	d9402117 	ldw	r5,132(sp)
 402c7a8:	d9002017 	ldw	r4,128(sp)
 402c7ac:	d9801a04 	addi	r6,sp,104
 402c7b0:	da402c15 	stw	r9,176(sp)
 402c7b4:	402b3c40 	call	402b3c4 <__sprint_r.part.0>
 402c7b8:	da402c17 	ldw	r9,176(sp)
 402c7bc:	103e9a1e 	bne	r2,zero,402c228 <__flash_rwdata_start+0xffffb300>
 402c7c0:	d9401b17 	ldw	r5,108(sp)
 402c7c4:	d8801c17 	ldw	r2,112(sp)
 402c7c8:	d811883a 	mov	r8,sp
 402c7cc:	29000044 	addi	r4,r5,1
 402c7d0:	003e4206 	br	402c0dc <__flash_rwdata_start+0xffffb1b4>
 402c7d4:	d9401b17 	ldw	r5,108(sp)
 402c7d8:	01000034 	movhi	r4,0
 402c7dc:	2100c904 	addi	r4,r4,804
 402c7e0:	d9002415 	stw	r4,144(sp)
 402c7e4:	29400044 	addi	r5,r5,1
 402c7e8:	003c6d06 	br	402b9a0 <__flash_rwdata_start+0xffffaa78>
 402c7ec:	0039883a 	mov	fp,zero
 402c7f0:	00800084 	movi	r2,2
 402c7f4:	10803fcc 	andi	r2,r2,255
 402c7f8:	01000044 	movi	r4,1
 402c7fc:	11001e26 	beq	r2,r4,402c878 <___vfiprintf_internal_r+0x13a0>
 402c800:	01000084 	movi	r4,2
 402c804:	11001e1e 	bne	r2,r4,402c880 <___vfiprintf_internal_r+0x13a8>
 402c808:	1829883a 	mov	r20,r3
 402c80c:	003eea06 	br	402c3b8 <__flash_rwdata_start+0xffffb490>
 402c810:	a007883a 	mov	r3,r20
 402c814:	00800044 	movi	r2,1
 402c818:	003ff606 	br	402c7f4 <__flash_rwdata_start+0xffffb8cc>
 402c81c:	00800184 	movi	r2,6
 402c820:	1240012e 	bgeu	r2,r9,402c828 <___vfiprintf_internal_r+0x1350>
 402c824:	1013883a 	mov	r9,r2
 402c828:	4827883a 	mov	r19,r9
 402c82c:	4825883a 	mov	r18,r9
 402c830:	48001516 	blt	r9,zero,402c888 <___vfiprintf_internal_r+0x13b0>
 402c834:	05400034 	movhi	r21,0
 402c838:	d8c02215 	stw	r3,136(sp)
 402c83c:	ad406b04 	addi	r21,r21,428
 402c840:	003d1406 	br	402bc94 <__flash_rwdata_start+0xffffad6c>
 402c844:	02800034 	movhi	r10,0
 402c848:	5280c504 	addi	r10,r10,788
 402c84c:	da802415 	stw	r10,144(sp)
 402c850:	200d883a 	mov	r6,r4
 402c854:	003c9106 	br	402ba9c <__flash_rwdata_start+0xffffab74>
 402c858:	5021883a 	mov	r16,r10
 402c85c:	0013883a 	mov	r9,zero
 402c860:	003b7d06 	br	402b658 <__flash_rwdata_start+0xffffa730>
 402c864:	4827883a 	mov	r19,r9
 402c868:	df001d83 	ldbu	fp,118(sp)
 402c86c:	d8c02215 	stw	r3,136(sp)
 402c870:	0013883a 	mov	r9,zero
 402c874:	003c1806 	br	402b8d8 <__flash_rwdata_start+0xffffa9b0>
 402c878:	1829883a 	mov	r20,r3
 402c87c:	003d1806 	br	402bce0 <__flash_rwdata_start+0xffffadb8>
 402c880:	1829883a 	mov	r20,r3
 402c884:	003ccd06 	br	402bbbc <__flash_rwdata_start+0xffffac94>
 402c888:	0025883a 	mov	r18,zero
 402c88c:	003fe906 	br	402c834 <__flash_rwdata_start+0xffffb90c>
 402c890:	d8802217 	ldw	r2,136(sp)
 402c894:	80c00043 	ldbu	r3,1(r16)
 402c898:	5021883a 	mov	r16,r10
 402c89c:	12400017 	ldw	r9,0(r2)
 402c8a0:	10800104 	addi	r2,r2,4
 402c8a4:	d8802215 	stw	r2,136(sp)
 402c8a8:	483faf0e 	bge	r9,zero,402c768 <__flash_rwdata_start+0xffffb840>
 402c8ac:	18c03fcc 	andi	r3,r3,255
 402c8b0:	18c0201c 	xori	r3,r3,128
 402c8b4:	027fffc4 	movi	r9,-1
 402c8b8:	18ffe004 	addi	r3,r3,-128
 402c8bc:	003b6506 	br	402b654 <__flash_rwdata_start+0xffffa72c>
 402c8c0:	d9c01d85 	stb	r7,118(sp)
 402c8c4:	003ca006 	br	402bb48 <__flash_rwdata_start+0xffffac20>
 402c8c8:	d9c01d85 	stb	r7,118(sp)
 402c8cc:	003cad06 	br	402bb84 <__flash_rwdata_start+0xffffac5c>
 402c8d0:	d9c01d85 	stb	r7,118(sp)
 402c8d4:	003d7d06 	br	402becc <__flash_rwdata_start+0xffffafa4>
 402c8d8:	d9c01d85 	stb	r7,118(sp)
 402c8dc:	003d5f06 	br	402be5c <__flash_rwdata_start+0xffffaf34>
 402c8e0:	a080004c 	andi	r2,r20,1
 402c8e4:	0039883a 	mov	fp,zero
 402c8e8:	10000526 	beq	r2,zero,402c900 <___vfiprintf_internal_r+0x1428>
 402c8ec:	00800c04 	movi	r2,48
 402c8f0:	d88019c5 	stb	r2,103(sp)
 402c8f4:	dcc02717 	ldw	r19,156(sp)
 402c8f8:	dd4019c4 	addi	r21,sp,103
 402c8fc:	003bf606 	br	402b8d8 <__flash_rwdata_start+0xffffa9b0>
 402c900:	0027883a 	mov	r19,zero
 402c904:	dd401a04 	addi	r21,sp,104
 402c908:	003bf306 	br	402b8d8 <__flash_rwdata_start+0xffffa9b0>
 402c90c:	d9c01d85 	stb	r7,118(sp)
 402c910:	003dc806 	br	402c034 <__flash_rwdata_start+0xffffb10c>
 402c914:	d9c01d85 	stb	r7,118(sp)
 402c918:	003d3a06 	br	402be04 <__flash_rwdata_start+0xffffaedc>
 402c91c:	d9c01d85 	stb	r7,118(sp)
 402c920:	003d2a06 	br	402bdcc <__flash_rwdata_start+0xffffaea4>
 402c924:	d9c01d85 	stb	r7,118(sp)
 402c928:	003cde06 	br	402bca4 <__flash_rwdata_start+0xffffad7c>
 402c92c:	d9c01d85 	stb	r7,118(sp)
 402c930:	003cbc06 	br	402bc24 <__flash_rwdata_start+0xffffacfc>

0402c934 <__vfiprintf_internal>:
 402c934:	00800034 	movhi	r2,0
 402c938:	10878f04 	addi	r2,r2,7740
 402c93c:	300f883a 	mov	r7,r6
 402c940:	280d883a 	mov	r6,r5
 402c944:	200b883a 	mov	r5,r4
 402c948:	11000017 	ldw	r4,0(r2)
 402c94c:	402b4d81 	jmpi	402b4d8 <___vfiprintf_internal_r>

0402c950 <__sbprintf>:
 402c950:	2880030b 	ldhu	r2,12(r5)
 402c954:	2ac01917 	ldw	r11,100(r5)
 402c958:	2a80038b 	ldhu	r10,14(r5)
 402c95c:	2a400717 	ldw	r9,28(r5)
 402c960:	2a000917 	ldw	r8,36(r5)
 402c964:	defee204 	addi	sp,sp,-1144
 402c968:	00c10004 	movi	r3,1024
 402c96c:	dc011a15 	stw	r16,1128(sp)
 402c970:	10bfff4c 	andi	r2,r2,65533
 402c974:	2821883a 	mov	r16,r5
 402c978:	d8cb883a 	add	r5,sp,r3
 402c97c:	dc811c15 	stw	r18,1136(sp)
 402c980:	dc411b15 	stw	r17,1132(sp)
 402c984:	dfc11d15 	stw	ra,1140(sp)
 402c988:	2025883a 	mov	r18,r4
 402c98c:	d881030d 	sth	r2,1036(sp)
 402c990:	dac11915 	stw	r11,1124(sp)
 402c994:	da81038d 	sth	r10,1038(sp)
 402c998:	da410715 	stw	r9,1052(sp)
 402c99c:	da010915 	stw	r8,1060(sp)
 402c9a0:	dec10015 	stw	sp,1024(sp)
 402c9a4:	dec10415 	stw	sp,1040(sp)
 402c9a8:	d8c10215 	stw	r3,1032(sp)
 402c9ac:	d8c10515 	stw	r3,1044(sp)
 402c9b0:	d8010615 	stw	zero,1048(sp)
 402c9b4:	402b4d80 	call	402b4d8 <___vfiprintf_internal_r>
 402c9b8:	1023883a 	mov	r17,r2
 402c9bc:	10000416 	blt	r2,zero,402c9d0 <__sbprintf+0x80>
 402c9c0:	d9410004 	addi	r5,sp,1024
 402c9c4:	9009883a 	mov	r4,r18
 402c9c8:	4027da40 	call	4027da4 <_fflush_r>
 402c9cc:	10000d1e 	bne	r2,zero,402ca04 <__sbprintf+0xb4>
 402c9d0:	d881030b 	ldhu	r2,1036(sp)
 402c9d4:	1080100c 	andi	r2,r2,64
 402c9d8:	10000326 	beq	r2,zero,402c9e8 <__sbprintf+0x98>
 402c9dc:	8080030b 	ldhu	r2,12(r16)
 402c9e0:	10801014 	ori	r2,r2,64
 402c9e4:	8080030d 	sth	r2,12(r16)
 402c9e8:	8805883a 	mov	r2,r17
 402c9ec:	dfc11d17 	ldw	ra,1140(sp)
 402c9f0:	dc811c17 	ldw	r18,1136(sp)
 402c9f4:	dc411b17 	ldw	r17,1132(sp)
 402c9f8:	dc011a17 	ldw	r16,1128(sp)
 402c9fc:	dec11e04 	addi	sp,sp,1144
 402ca00:	f800283a 	ret
 402ca04:	047fffc4 	movi	r17,-1
 402ca08:	003ff106 	br	402c9d0 <__flash_rwdata_start+0xffffbaa8>

0402ca0c <_write_r>:
 402ca0c:	defffd04 	addi	sp,sp,-12
 402ca10:	2805883a 	mov	r2,r5
 402ca14:	dc000015 	stw	r16,0(sp)
 402ca18:	04000034 	movhi	r16,0
 402ca1c:	dc400115 	stw	r17,4(sp)
 402ca20:	300b883a 	mov	r5,r6
 402ca24:	84079f04 	addi	r16,r16,7804
 402ca28:	2023883a 	mov	r17,r4
 402ca2c:	380d883a 	mov	r6,r7
 402ca30:	1009883a 	mov	r4,r2
 402ca34:	dfc00215 	stw	ra,8(sp)
 402ca38:	80000015 	stw	zero,0(r16)
 402ca3c:	402ec8c0 	call	402ec8c <write>
 402ca40:	00ffffc4 	movi	r3,-1
 402ca44:	10c00526 	beq	r2,r3,402ca5c <_write_r+0x50>
 402ca48:	dfc00217 	ldw	ra,8(sp)
 402ca4c:	dc400117 	ldw	r17,4(sp)
 402ca50:	dc000017 	ldw	r16,0(sp)
 402ca54:	dec00304 	addi	sp,sp,12
 402ca58:	f800283a 	ret
 402ca5c:	80c00017 	ldw	r3,0(r16)
 402ca60:	183ff926 	beq	r3,zero,402ca48 <__flash_rwdata_start+0xffffbb20>
 402ca64:	88c00015 	stw	r3,0(r17)
 402ca68:	003ff706 	br	402ca48 <__flash_rwdata_start+0xffffbb20>

0402ca6c <_close_r>:
 402ca6c:	defffd04 	addi	sp,sp,-12
 402ca70:	dc000015 	stw	r16,0(sp)
 402ca74:	04000034 	movhi	r16,0
 402ca78:	dc400115 	stw	r17,4(sp)
 402ca7c:	84079f04 	addi	r16,r16,7804
 402ca80:	2023883a 	mov	r17,r4
 402ca84:	2809883a 	mov	r4,r5
 402ca88:	dfc00215 	stw	ra,8(sp)
 402ca8c:	80000015 	stw	zero,0(r16)
 402ca90:	402df340 	call	402df34 <close>
 402ca94:	00ffffc4 	movi	r3,-1
 402ca98:	10c00526 	beq	r2,r3,402cab0 <_close_r+0x44>
 402ca9c:	dfc00217 	ldw	ra,8(sp)
 402caa0:	dc400117 	ldw	r17,4(sp)
 402caa4:	dc000017 	ldw	r16,0(sp)
 402caa8:	dec00304 	addi	sp,sp,12
 402caac:	f800283a 	ret
 402cab0:	80c00017 	ldw	r3,0(r16)
 402cab4:	183ff926 	beq	r3,zero,402ca9c <__flash_rwdata_start+0xffffbb74>
 402cab8:	88c00015 	stw	r3,0(r17)
 402cabc:	003ff706 	br	402ca9c <__flash_rwdata_start+0xffffbb74>

0402cac0 <_calloc_r>:
 402cac0:	298b383a 	mul	r5,r5,r6
 402cac4:	defffe04 	addi	sp,sp,-8
 402cac8:	dfc00115 	stw	ra,4(sp)
 402cacc:	dc000015 	stw	r16,0(sp)
 402cad0:	4028f3c0 	call	4028f3c <_malloc_r>
 402cad4:	10002926 	beq	r2,zero,402cb7c <_calloc_r+0xbc>
 402cad8:	11bfff17 	ldw	r6,-4(r2)
 402cadc:	1021883a 	mov	r16,r2
 402cae0:	00bfff04 	movi	r2,-4
 402cae4:	308c703a 	and	r6,r6,r2
 402cae8:	00c00904 	movi	r3,36
 402caec:	308d883a 	add	r6,r6,r2
 402caf0:	19801636 	bltu	r3,r6,402cb4c <_calloc_r+0x8c>
 402caf4:	008004c4 	movi	r2,19
 402caf8:	11800b2e 	bgeu	r2,r6,402cb28 <_calloc_r+0x68>
 402cafc:	80000015 	stw	zero,0(r16)
 402cb00:	80000115 	stw	zero,4(r16)
 402cb04:	008006c4 	movi	r2,27
 402cb08:	11801a2e 	bgeu	r2,r6,402cb74 <_calloc_r+0xb4>
 402cb0c:	80000215 	stw	zero,8(r16)
 402cb10:	80000315 	stw	zero,12(r16)
 402cb14:	30c0151e 	bne	r6,r3,402cb6c <_calloc_r+0xac>
 402cb18:	80000415 	stw	zero,16(r16)
 402cb1c:	80800604 	addi	r2,r16,24
 402cb20:	80000515 	stw	zero,20(r16)
 402cb24:	00000106 	br	402cb2c <_calloc_r+0x6c>
 402cb28:	8005883a 	mov	r2,r16
 402cb2c:	10000015 	stw	zero,0(r2)
 402cb30:	10000115 	stw	zero,4(r2)
 402cb34:	10000215 	stw	zero,8(r2)
 402cb38:	8005883a 	mov	r2,r16
 402cb3c:	dfc00117 	ldw	ra,4(sp)
 402cb40:	dc000017 	ldw	r16,0(sp)
 402cb44:	dec00204 	addi	sp,sp,8
 402cb48:	f800283a 	ret
 402cb4c:	000b883a 	mov	r5,zero
 402cb50:	8009883a 	mov	r4,r16
 402cb54:	4029ad00 	call	4029ad0 <memset>
 402cb58:	8005883a 	mov	r2,r16
 402cb5c:	dfc00117 	ldw	ra,4(sp)
 402cb60:	dc000017 	ldw	r16,0(sp)
 402cb64:	dec00204 	addi	sp,sp,8
 402cb68:	f800283a 	ret
 402cb6c:	80800404 	addi	r2,r16,16
 402cb70:	003fee06 	br	402cb2c <__flash_rwdata_start+0xffffbc04>
 402cb74:	80800204 	addi	r2,r16,8
 402cb78:	003fec06 	br	402cb2c <__flash_rwdata_start+0xffffbc04>
 402cb7c:	0005883a 	mov	r2,zero
 402cb80:	003fee06 	br	402cb3c <__flash_rwdata_start+0xffffbc14>

0402cb84 <_fclose_r>:
 402cb84:	28003926 	beq	r5,zero,402cc6c <_fclose_r+0xe8>
 402cb88:	defffc04 	addi	sp,sp,-16
 402cb8c:	dc400115 	stw	r17,4(sp)
 402cb90:	dc000015 	stw	r16,0(sp)
 402cb94:	dfc00315 	stw	ra,12(sp)
 402cb98:	dc800215 	stw	r18,8(sp)
 402cb9c:	2023883a 	mov	r17,r4
 402cba0:	2821883a 	mov	r16,r5
 402cba4:	20000226 	beq	r4,zero,402cbb0 <_fclose_r+0x2c>
 402cba8:	20800e17 	ldw	r2,56(r4)
 402cbac:	10002726 	beq	r2,zero,402cc4c <_fclose_r+0xc8>
 402cbb0:	8080030f 	ldh	r2,12(r16)
 402cbb4:	1000071e 	bne	r2,zero,402cbd4 <_fclose_r+0x50>
 402cbb8:	0005883a 	mov	r2,zero
 402cbbc:	dfc00317 	ldw	ra,12(sp)
 402cbc0:	dc800217 	ldw	r18,8(sp)
 402cbc4:	dc400117 	ldw	r17,4(sp)
 402cbc8:	dc000017 	ldw	r16,0(sp)
 402cbcc:	dec00404 	addi	sp,sp,16
 402cbd0:	f800283a 	ret
 402cbd4:	800b883a 	mov	r5,r16
 402cbd8:	8809883a 	mov	r4,r17
 402cbdc:	4027b880 	call	4027b88 <__sflush_r>
 402cbe0:	1025883a 	mov	r18,r2
 402cbe4:	80800b17 	ldw	r2,44(r16)
 402cbe8:	10000426 	beq	r2,zero,402cbfc <_fclose_r+0x78>
 402cbec:	81400717 	ldw	r5,28(r16)
 402cbf0:	8809883a 	mov	r4,r17
 402cbf4:	103ee83a 	callr	r2
 402cbf8:	10001616 	blt	r2,zero,402cc54 <_fclose_r+0xd0>
 402cbfc:	8080030b 	ldhu	r2,12(r16)
 402cc00:	1080200c 	andi	r2,r2,128
 402cc04:	1000151e 	bne	r2,zero,402cc5c <_fclose_r+0xd8>
 402cc08:	81400c17 	ldw	r5,48(r16)
 402cc0c:	28000526 	beq	r5,zero,402cc24 <_fclose_r+0xa0>
 402cc10:	80801004 	addi	r2,r16,64
 402cc14:	28800226 	beq	r5,r2,402cc20 <_fclose_r+0x9c>
 402cc18:	8809883a 	mov	r4,r17
 402cc1c:	40282f40 	call	40282f4 <_free_r>
 402cc20:	80000c15 	stw	zero,48(r16)
 402cc24:	81401117 	ldw	r5,68(r16)
 402cc28:	28000326 	beq	r5,zero,402cc38 <_fclose_r+0xb4>
 402cc2c:	8809883a 	mov	r4,r17
 402cc30:	40282f40 	call	40282f4 <_free_r>
 402cc34:	80001115 	stw	zero,68(r16)
 402cc38:	40281900 	call	4028190 <__sfp_lock_acquire>
 402cc3c:	8000030d 	sth	zero,12(r16)
 402cc40:	40281940 	call	4028194 <__sfp_lock_release>
 402cc44:	9005883a 	mov	r2,r18
 402cc48:	003fdc06 	br	402cbbc <__flash_rwdata_start+0xffffbc94>
 402cc4c:	40281800 	call	4028180 <__sinit>
 402cc50:	003fd706 	br	402cbb0 <__flash_rwdata_start+0xffffbc88>
 402cc54:	04bfffc4 	movi	r18,-1
 402cc58:	003fe806 	br	402cbfc <__flash_rwdata_start+0xffffbcd4>
 402cc5c:	81400417 	ldw	r5,16(r16)
 402cc60:	8809883a 	mov	r4,r17
 402cc64:	40282f40 	call	40282f4 <_free_r>
 402cc68:	003fe706 	br	402cc08 <__flash_rwdata_start+0xffffbce0>
 402cc6c:	0005883a 	mov	r2,zero
 402cc70:	f800283a 	ret

0402cc74 <fclose>:
 402cc74:	00800034 	movhi	r2,0
 402cc78:	10878f04 	addi	r2,r2,7740
 402cc7c:	200b883a 	mov	r5,r4
 402cc80:	11000017 	ldw	r4,0(r2)
 402cc84:	402cb841 	jmpi	402cb84 <_fclose_r>

0402cc88 <__fputwc>:
 402cc88:	defff804 	addi	sp,sp,-32
 402cc8c:	dcc00415 	stw	r19,16(sp)
 402cc90:	dc800315 	stw	r18,12(sp)
 402cc94:	dc000115 	stw	r16,4(sp)
 402cc98:	dfc00715 	stw	ra,28(sp)
 402cc9c:	dd400615 	stw	r21,24(sp)
 402cca0:	dd000515 	stw	r20,20(sp)
 402cca4:	dc400215 	stw	r17,8(sp)
 402cca8:	2027883a 	mov	r19,r4
 402ccac:	2825883a 	mov	r18,r5
 402ccb0:	3021883a 	mov	r16,r6
 402ccb4:	4028d2c0 	call	4028d2c <__locale_mb_cur_max>
 402ccb8:	00c00044 	movi	r3,1
 402ccbc:	10c03e26 	beq	r2,r3,402cdb8 <__fputwc+0x130>
 402ccc0:	81c01704 	addi	r7,r16,92
 402ccc4:	900d883a 	mov	r6,r18
 402ccc8:	d80b883a 	mov	r5,sp
 402cccc:	9809883a 	mov	r4,r19
 402ccd0:	402d1580 	call	402d158 <_wcrtomb_r>
 402ccd4:	1029883a 	mov	r20,r2
 402ccd8:	00bfffc4 	movi	r2,-1
 402ccdc:	a0802026 	beq	r20,r2,402cd60 <__fputwc+0xd8>
 402cce0:	d9400003 	ldbu	r5,0(sp)
 402cce4:	a0001c26 	beq	r20,zero,402cd58 <__fputwc+0xd0>
 402cce8:	0023883a 	mov	r17,zero
 402ccec:	05400284 	movi	r21,10
 402ccf0:	00000906 	br	402cd18 <__fputwc+0x90>
 402ccf4:	80800017 	ldw	r2,0(r16)
 402ccf8:	11400005 	stb	r5,0(r2)
 402ccfc:	80c00017 	ldw	r3,0(r16)
 402cd00:	18c00044 	addi	r3,r3,1
 402cd04:	80c00015 	stw	r3,0(r16)
 402cd08:	8c400044 	addi	r17,r17,1
 402cd0c:	dc45883a 	add	r2,sp,r17
 402cd10:	8d00112e 	bgeu	r17,r20,402cd58 <__fputwc+0xd0>
 402cd14:	11400003 	ldbu	r5,0(r2)
 402cd18:	80c00217 	ldw	r3,8(r16)
 402cd1c:	18ffffc4 	addi	r3,r3,-1
 402cd20:	80c00215 	stw	r3,8(r16)
 402cd24:	183ff30e 	bge	r3,zero,402ccf4 <__flash_rwdata_start+0xffffbdcc>
 402cd28:	80800617 	ldw	r2,24(r16)
 402cd2c:	18801916 	blt	r3,r2,402cd94 <__fputwc+0x10c>
 402cd30:	80800017 	ldw	r2,0(r16)
 402cd34:	11400005 	stb	r5,0(r2)
 402cd38:	80800017 	ldw	r2,0(r16)
 402cd3c:	10c00003 	ldbu	r3,0(r2)
 402cd40:	10800044 	addi	r2,r2,1
 402cd44:	1d402326 	beq	r3,r21,402cdd4 <__fputwc+0x14c>
 402cd48:	80800015 	stw	r2,0(r16)
 402cd4c:	8c400044 	addi	r17,r17,1
 402cd50:	dc45883a 	add	r2,sp,r17
 402cd54:	8d3fef36 	bltu	r17,r20,402cd14 <__flash_rwdata_start+0xffffbdec>
 402cd58:	9005883a 	mov	r2,r18
 402cd5c:	00000406 	br	402cd70 <__fputwc+0xe8>
 402cd60:	80c0030b 	ldhu	r3,12(r16)
 402cd64:	a005883a 	mov	r2,r20
 402cd68:	18c01014 	ori	r3,r3,64
 402cd6c:	80c0030d 	sth	r3,12(r16)
 402cd70:	dfc00717 	ldw	ra,28(sp)
 402cd74:	dd400617 	ldw	r21,24(sp)
 402cd78:	dd000517 	ldw	r20,20(sp)
 402cd7c:	dcc00417 	ldw	r19,16(sp)
 402cd80:	dc800317 	ldw	r18,12(sp)
 402cd84:	dc400217 	ldw	r17,8(sp)
 402cd88:	dc000117 	ldw	r16,4(sp)
 402cd8c:	dec00804 	addi	sp,sp,32
 402cd90:	f800283a 	ret
 402cd94:	800d883a 	mov	r6,r16
 402cd98:	29403fcc 	andi	r5,r5,255
 402cd9c:	9809883a 	mov	r4,r19
 402cda0:	402d0000 	call	402d000 <__swbuf_r>
 402cda4:	10bfffe0 	cmpeqi	r2,r2,-1
 402cda8:	10803fcc 	andi	r2,r2,255
 402cdac:	103fd626 	beq	r2,zero,402cd08 <__flash_rwdata_start+0xffffbde0>
 402cdb0:	00bfffc4 	movi	r2,-1
 402cdb4:	003fee06 	br	402cd70 <__flash_rwdata_start+0xffffbe48>
 402cdb8:	90ffffc4 	addi	r3,r18,-1
 402cdbc:	01003f84 	movi	r4,254
 402cdc0:	20ffbf36 	bltu	r4,r3,402ccc0 <__flash_rwdata_start+0xffffbd98>
 402cdc4:	900b883a 	mov	r5,r18
 402cdc8:	dc800005 	stb	r18,0(sp)
 402cdcc:	1029883a 	mov	r20,r2
 402cdd0:	003fc506 	br	402cce8 <__flash_rwdata_start+0xffffbdc0>
 402cdd4:	800d883a 	mov	r6,r16
 402cdd8:	a80b883a 	mov	r5,r21
 402cddc:	9809883a 	mov	r4,r19
 402cde0:	402d0000 	call	402d000 <__swbuf_r>
 402cde4:	10bfffe0 	cmpeqi	r2,r2,-1
 402cde8:	003fef06 	br	402cda8 <__flash_rwdata_start+0xffffbe80>

0402cdec <_fputwc_r>:
 402cdec:	3080030b 	ldhu	r2,12(r6)
 402cdf0:	10c8000c 	andi	r3,r2,8192
 402cdf4:	1800051e 	bne	r3,zero,402ce0c <_fputwc_r+0x20>
 402cdf8:	30c01917 	ldw	r3,100(r6)
 402cdfc:	10880014 	ori	r2,r2,8192
 402ce00:	3080030d 	sth	r2,12(r6)
 402ce04:	18880014 	ori	r2,r3,8192
 402ce08:	30801915 	stw	r2,100(r6)
 402ce0c:	402cc881 	jmpi	402cc88 <__fputwc>

0402ce10 <fputwc>:
 402ce10:	00800034 	movhi	r2,0
 402ce14:	defffc04 	addi	sp,sp,-16
 402ce18:	10878f04 	addi	r2,r2,7740
 402ce1c:	dc000115 	stw	r16,4(sp)
 402ce20:	14000017 	ldw	r16,0(r2)
 402ce24:	dc400215 	stw	r17,8(sp)
 402ce28:	dfc00315 	stw	ra,12(sp)
 402ce2c:	2023883a 	mov	r17,r4
 402ce30:	80000226 	beq	r16,zero,402ce3c <fputwc+0x2c>
 402ce34:	80800e17 	ldw	r2,56(r16)
 402ce38:	10001026 	beq	r2,zero,402ce7c <fputwc+0x6c>
 402ce3c:	2880030b 	ldhu	r2,12(r5)
 402ce40:	10c8000c 	andi	r3,r2,8192
 402ce44:	1800051e 	bne	r3,zero,402ce5c <fputwc+0x4c>
 402ce48:	28c01917 	ldw	r3,100(r5)
 402ce4c:	10880014 	ori	r2,r2,8192
 402ce50:	2880030d 	sth	r2,12(r5)
 402ce54:	18880014 	ori	r2,r3,8192
 402ce58:	28801915 	stw	r2,100(r5)
 402ce5c:	280d883a 	mov	r6,r5
 402ce60:	8009883a 	mov	r4,r16
 402ce64:	880b883a 	mov	r5,r17
 402ce68:	dfc00317 	ldw	ra,12(sp)
 402ce6c:	dc400217 	ldw	r17,8(sp)
 402ce70:	dc000117 	ldw	r16,4(sp)
 402ce74:	dec00404 	addi	sp,sp,16
 402ce78:	402cc881 	jmpi	402cc88 <__fputwc>
 402ce7c:	8009883a 	mov	r4,r16
 402ce80:	d9400015 	stw	r5,0(sp)
 402ce84:	40281800 	call	4028180 <__sinit>
 402ce88:	d9400017 	ldw	r5,0(sp)
 402ce8c:	003feb06 	br	402ce3c <__flash_rwdata_start+0xffffbf14>

0402ce90 <_fstat_r>:
 402ce90:	defffd04 	addi	sp,sp,-12
 402ce94:	2805883a 	mov	r2,r5
 402ce98:	dc000015 	stw	r16,0(sp)
 402ce9c:	04000034 	movhi	r16,0
 402cea0:	dc400115 	stw	r17,4(sp)
 402cea4:	84079f04 	addi	r16,r16,7804
 402cea8:	2023883a 	mov	r17,r4
 402ceac:	300b883a 	mov	r5,r6
 402ceb0:	1009883a 	mov	r4,r2
 402ceb4:	dfc00215 	stw	ra,8(sp)
 402ceb8:	80000015 	stw	zero,0(r16)
 402cebc:	402e06c0 	call	402e06c <fstat>
 402cec0:	00ffffc4 	movi	r3,-1
 402cec4:	10c00526 	beq	r2,r3,402cedc <_fstat_r+0x4c>
 402cec8:	dfc00217 	ldw	ra,8(sp)
 402cecc:	dc400117 	ldw	r17,4(sp)
 402ced0:	dc000017 	ldw	r16,0(sp)
 402ced4:	dec00304 	addi	sp,sp,12
 402ced8:	f800283a 	ret
 402cedc:	80c00017 	ldw	r3,0(r16)
 402cee0:	183ff926 	beq	r3,zero,402cec8 <__flash_rwdata_start+0xffffbfa0>
 402cee4:	88c00015 	stw	r3,0(r17)
 402cee8:	003ff706 	br	402cec8 <__flash_rwdata_start+0xffffbfa0>

0402ceec <_isatty_r>:
 402ceec:	defffd04 	addi	sp,sp,-12
 402cef0:	dc000015 	stw	r16,0(sp)
 402cef4:	04000034 	movhi	r16,0
 402cef8:	dc400115 	stw	r17,4(sp)
 402cefc:	84079f04 	addi	r16,r16,7804
 402cf00:	2023883a 	mov	r17,r4
 402cf04:	2809883a 	mov	r4,r5
 402cf08:	dfc00215 	stw	ra,8(sp)
 402cf0c:	80000015 	stw	zero,0(r16)
 402cf10:	402e4cc0 	call	402e4cc <isatty>
 402cf14:	00ffffc4 	movi	r3,-1
 402cf18:	10c00526 	beq	r2,r3,402cf30 <_isatty_r+0x44>
 402cf1c:	dfc00217 	ldw	ra,8(sp)
 402cf20:	dc400117 	ldw	r17,4(sp)
 402cf24:	dc000017 	ldw	r16,0(sp)
 402cf28:	dec00304 	addi	sp,sp,12
 402cf2c:	f800283a 	ret
 402cf30:	80c00017 	ldw	r3,0(r16)
 402cf34:	183ff926 	beq	r3,zero,402cf1c <__flash_rwdata_start+0xffffbff4>
 402cf38:	88c00015 	stw	r3,0(r17)
 402cf3c:	003ff706 	br	402cf1c <__flash_rwdata_start+0xffffbff4>

0402cf40 <_lseek_r>:
 402cf40:	defffd04 	addi	sp,sp,-12
 402cf44:	2805883a 	mov	r2,r5
 402cf48:	dc000015 	stw	r16,0(sp)
 402cf4c:	04000034 	movhi	r16,0
 402cf50:	dc400115 	stw	r17,4(sp)
 402cf54:	300b883a 	mov	r5,r6
 402cf58:	84079f04 	addi	r16,r16,7804
 402cf5c:	2023883a 	mov	r17,r4
 402cf60:	380d883a 	mov	r6,r7
 402cf64:	1009883a 	mov	r4,r2
 402cf68:	dfc00215 	stw	ra,8(sp)
 402cf6c:	80000015 	stw	zero,0(r16)
 402cf70:	402e6980 	call	402e698 <lseek>
 402cf74:	00ffffc4 	movi	r3,-1
 402cf78:	10c00526 	beq	r2,r3,402cf90 <_lseek_r+0x50>
 402cf7c:	dfc00217 	ldw	ra,8(sp)
 402cf80:	dc400117 	ldw	r17,4(sp)
 402cf84:	dc000017 	ldw	r16,0(sp)
 402cf88:	dec00304 	addi	sp,sp,12
 402cf8c:	f800283a 	ret
 402cf90:	80c00017 	ldw	r3,0(r16)
 402cf94:	183ff926 	beq	r3,zero,402cf7c <__flash_rwdata_start+0xffffc054>
 402cf98:	88c00015 	stw	r3,0(r17)
 402cf9c:	003ff706 	br	402cf7c <__flash_rwdata_start+0xffffc054>

0402cfa0 <_read_r>:
 402cfa0:	defffd04 	addi	sp,sp,-12
 402cfa4:	2805883a 	mov	r2,r5
 402cfa8:	dc000015 	stw	r16,0(sp)
 402cfac:	04000034 	movhi	r16,0
 402cfb0:	dc400115 	stw	r17,4(sp)
 402cfb4:	300b883a 	mov	r5,r6
 402cfb8:	84079f04 	addi	r16,r16,7804
 402cfbc:	2023883a 	mov	r17,r4
 402cfc0:	380d883a 	mov	r6,r7
 402cfc4:	1009883a 	mov	r4,r2
 402cfc8:	dfc00215 	stw	ra,8(sp)
 402cfcc:	80000015 	stw	zero,0(r16)
 402cfd0:	402e86c0 	call	402e86c <read>
 402cfd4:	00ffffc4 	movi	r3,-1
 402cfd8:	10c00526 	beq	r2,r3,402cff0 <_read_r+0x50>
 402cfdc:	dfc00217 	ldw	ra,8(sp)
 402cfe0:	dc400117 	ldw	r17,4(sp)
 402cfe4:	dc000017 	ldw	r16,0(sp)
 402cfe8:	dec00304 	addi	sp,sp,12
 402cfec:	f800283a 	ret
 402cff0:	80c00017 	ldw	r3,0(r16)
 402cff4:	183ff926 	beq	r3,zero,402cfdc <__flash_rwdata_start+0xffffc0b4>
 402cff8:	88c00015 	stw	r3,0(r17)
 402cffc:	003ff706 	br	402cfdc <__flash_rwdata_start+0xffffc0b4>

0402d000 <__swbuf_r>:
 402d000:	defffb04 	addi	sp,sp,-20
 402d004:	dcc00315 	stw	r19,12(sp)
 402d008:	dc800215 	stw	r18,8(sp)
 402d00c:	dc000015 	stw	r16,0(sp)
 402d010:	dfc00415 	stw	ra,16(sp)
 402d014:	dc400115 	stw	r17,4(sp)
 402d018:	2025883a 	mov	r18,r4
 402d01c:	2827883a 	mov	r19,r5
 402d020:	3021883a 	mov	r16,r6
 402d024:	20000226 	beq	r4,zero,402d030 <__swbuf_r+0x30>
 402d028:	20800e17 	ldw	r2,56(r4)
 402d02c:	10004226 	beq	r2,zero,402d138 <__swbuf_r+0x138>
 402d030:	80800617 	ldw	r2,24(r16)
 402d034:	8100030b 	ldhu	r4,12(r16)
 402d038:	80800215 	stw	r2,8(r16)
 402d03c:	2080020c 	andi	r2,r4,8
 402d040:	10003626 	beq	r2,zero,402d11c <__swbuf_r+0x11c>
 402d044:	80c00417 	ldw	r3,16(r16)
 402d048:	18003426 	beq	r3,zero,402d11c <__swbuf_r+0x11c>
 402d04c:	2088000c 	andi	r2,r4,8192
 402d050:	9c403fcc 	andi	r17,r19,255
 402d054:	10001a26 	beq	r2,zero,402d0c0 <__swbuf_r+0xc0>
 402d058:	80800017 	ldw	r2,0(r16)
 402d05c:	81000517 	ldw	r4,20(r16)
 402d060:	10c7c83a 	sub	r3,r2,r3
 402d064:	1900200e 	bge	r3,r4,402d0e8 <__swbuf_r+0xe8>
 402d068:	18c00044 	addi	r3,r3,1
 402d06c:	81000217 	ldw	r4,8(r16)
 402d070:	11400044 	addi	r5,r2,1
 402d074:	81400015 	stw	r5,0(r16)
 402d078:	213fffc4 	addi	r4,r4,-1
 402d07c:	81000215 	stw	r4,8(r16)
 402d080:	14c00005 	stb	r19,0(r2)
 402d084:	80800517 	ldw	r2,20(r16)
 402d088:	10c01e26 	beq	r2,r3,402d104 <__swbuf_r+0x104>
 402d08c:	8080030b 	ldhu	r2,12(r16)
 402d090:	1080004c 	andi	r2,r2,1
 402d094:	10000226 	beq	r2,zero,402d0a0 <__swbuf_r+0xa0>
 402d098:	00800284 	movi	r2,10
 402d09c:	88801926 	beq	r17,r2,402d104 <__swbuf_r+0x104>
 402d0a0:	8805883a 	mov	r2,r17
 402d0a4:	dfc00417 	ldw	ra,16(sp)
 402d0a8:	dcc00317 	ldw	r19,12(sp)
 402d0ac:	dc800217 	ldw	r18,8(sp)
 402d0b0:	dc400117 	ldw	r17,4(sp)
 402d0b4:	dc000017 	ldw	r16,0(sp)
 402d0b8:	dec00504 	addi	sp,sp,20
 402d0bc:	f800283a 	ret
 402d0c0:	81401917 	ldw	r5,100(r16)
 402d0c4:	00b7ffc4 	movi	r2,-8193
 402d0c8:	21080014 	ori	r4,r4,8192
 402d0cc:	2884703a 	and	r2,r5,r2
 402d0d0:	80801915 	stw	r2,100(r16)
 402d0d4:	80800017 	ldw	r2,0(r16)
 402d0d8:	8100030d 	sth	r4,12(r16)
 402d0dc:	81000517 	ldw	r4,20(r16)
 402d0e0:	10c7c83a 	sub	r3,r2,r3
 402d0e4:	193fe016 	blt	r3,r4,402d068 <__flash_rwdata_start+0xffffc140>
 402d0e8:	800b883a 	mov	r5,r16
 402d0ec:	9009883a 	mov	r4,r18
 402d0f0:	4027da40 	call	4027da4 <_fflush_r>
 402d0f4:	1000071e 	bne	r2,zero,402d114 <__swbuf_r+0x114>
 402d0f8:	80800017 	ldw	r2,0(r16)
 402d0fc:	00c00044 	movi	r3,1
 402d100:	003fda06 	br	402d06c <__flash_rwdata_start+0xffffc144>
 402d104:	800b883a 	mov	r5,r16
 402d108:	9009883a 	mov	r4,r18
 402d10c:	4027da40 	call	4027da4 <_fflush_r>
 402d110:	103fe326 	beq	r2,zero,402d0a0 <__flash_rwdata_start+0xffffc178>
 402d114:	00bfffc4 	movi	r2,-1
 402d118:	003fe206 	br	402d0a4 <__flash_rwdata_start+0xffffc17c>
 402d11c:	800b883a 	mov	r5,r16
 402d120:	9009883a 	mov	r4,r18
 402d124:	40261ac0 	call	40261ac <__swsetup_r>
 402d128:	103ffa1e 	bne	r2,zero,402d114 <__flash_rwdata_start+0xffffc1ec>
 402d12c:	8100030b 	ldhu	r4,12(r16)
 402d130:	80c00417 	ldw	r3,16(r16)
 402d134:	003fc506 	br	402d04c <__flash_rwdata_start+0xffffc124>
 402d138:	40281800 	call	4028180 <__sinit>
 402d13c:	003fbc06 	br	402d030 <__flash_rwdata_start+0xffffc108>

0402d140 <__swbuf>:
 402d140:	00800034 	movhi	r2,0
 402d144:	10878f04 	addi	r2,r2,7740
 402d148:	280d883a 	mov	r6,r5
 402d14c:	200b883a 	mov	r5,r4
 402d150:	11000017 	ldw	r4,0(r2)
 402d154:	402d0001 	jmpi	402d000 <__swbuf_r>

0402d158 <_wcrtomb_r>:
 402d158:	defff604 	addi	sp,sp,-40
 402d15c:	00800034 	movhi	r2,0
 402d160:	dc800815 	stw	r18,32(sp)
 402d164:	dc400715 	stw	r17,28(sp)
 402d168:	dc000615 	stw	r16,24(sp)
 402d16c:	10879304 	addi	r2,r2,7756
 402d170:	dfc00915 	stw	ra,36(sp)
 402d174:	2021883a 	mov	r16,r4
 402d178:	3823883a 	mov	r17,r7
 402d17c:	14800017 	ldw	r18,0(r2)
 402d180:	28001426 	beq	r5,zero,402d1d4 <_wcrtomb_r+0x7c>
 402d184:	d9400415 	stw	r5,16(sp)
 402d188:	d9800515 	stw	r6,20(sp)
 402d18c:	4028d200 	call	4028d20 <__locale_charset>
 402d190:	d9800517 	ldw	r6,20(sp)
 402d194:	d9400417 	ldw	r5,16(sp)
 402d198:	100f883a 	mov	r7,r2
 402d19c:	dc400015 	stw	r17,0(sp)
 402d1a0:	8009883a 	mov	r4,r16
 402d1a4:	903ee83a 	callr	r18
 402d1a8:	00ffffc4 	movi	r3,-1
 402d1ac:	10c0031e 	bne	r2,r3,402d1bc <_wcrtomb_r+0x64>
 402d1b0:	88000015 	stw	zero,0(r17)
 402d1b4:	00c02284 	movi	r3,138
 402d1b8:	80c00015 	stw	r3,0(r16)
 402d1bc:	dfc00917 	ldw	ra,36(sp)
 402d1c0:	dc800817 	ldw	r18,32(sp)
 402d1c4:	dc400717 	ldw	r17,28(sp)
 402d1c8:	dc000617 	ldw	r16,24(sp)
 402d1cc:	dec00a04 	addi	sp,sp,40
 402d1d0:	f800283a 	ret
 402d1d4:	4028d200 	call	4028d20 <__locale_charset>
 402d1d8:	100f883a 	mov	r7,r2
 402d1dc:	dc400015 	stw	r17,0(sp)
 402d1e0:	000d883a 	mov	r6,zero
 402d1e4:	d9400104 	addi	r5,sp,4
 402d1e8:	8009883a 	mov	r4,r16
 402d1ec:	903ee83a 	callr	r18
 402d1f0:	003fed06 	br	402d1a8 <__flash_rwdata_start+0xffffc280>

0402d1f4 <wcrtomb>:
 402d1f4:	defff604 	addi	sp,sp,-40
 402d1f8:	00800034 	movhi	r2,0
 402d1fc:	dc800615 	stw	r18,24(sp)
 402d200:	dc400515 	stw	r17,20(sp)
 402d204:	10878f04 	addi	r2,r2,7740
 402d208:	dfc00915 	stw	ra,36(sp)
 402d20c:	dd000815 	stw	r20,32(sp)
 402d210:	dcc00715 	stw	r19,28(sp)
 402d214:	dc000415 	stw	r16,16(sp)
 402d218:	3025883a 	mov	r18,r6
 402d21c:	14400017 	ldw	r17,0(r2)
 402d220:	20001926 	beq	r4,zero,402d288 <wcrtomb+0x94>
 402d224:	00800034 	movhi	r2,0
 402d228:	10879304 	addi	r2,r2,7756
 402d22c:	15000017 	ldw	r20,0(r2)
 402d230:	2021883a 	mov	r16,r4
 402d234:	2827883a 	mov	r19,r5
 402d238:	4028d200 	call	4028d20 <__locale_charset>
 402d23c:	100f883a 	mov	r7,r2
 402d240:	dc800015 	stw	r18,0(sp)
 402d244:	980d883a 	mov	r6,r19
 402d248:	800b883a 	mov	r5,r16
 402d24c:	8809883a 	mov	r4,r17
 402d250:	a03ee83a 	callr	r20
 402d254:	00ffffc4 	movi	r3,-1
 402d258:	10c0031e 	bne	r2,r3,402d268 <wcrtomb+0x74>
 402d25c:	90000015 	stw	zero,0(r18)
 402d260:	00c02284 	movi	r3,138
 402d264:	88c00015 	stw	r3,0(r17)
 402d268:	dfc00917 	ldw	ra,36(sp)
 402d26c:	dd000817 	ldw	r20,32(sp)
 402d270:	dcc00717 	ldw	r19,28(sp)
 402d274:	dc800617 	ldw	r18,24(sp)
 402d278:	dc400517 	ldw	r17,20(sp)
 402d27c:	dc000417 	ldw	r16,16(sp)
 402d280:	dec00a04 	addi	sp,sp,40
 402d284:	f800283a 	ret
 402d288:	00800034 	movhi	r2,0
 402d28c:	10879304 	addi	r2,r2,7756
 402d290:	14000017 	ldw	r16,0(r2)
 402d294:	4028d200 	call	4028d20 <__locale_charset>
 402d298:	100f883a 	mov	r7,r2
 402d29c:	dc800015 	stw	r18,0(sp)
 402d2a0:	000d883a 	mov	r6,zero
 402d2a4:	d9400104 	addi	r5,sp,4
 402d2a8:	8809883a 	mov	r4,r17
 402d2ac:	803ee83a 	callr	r16
 402d2b0:	003fe806 	br	402d254 <__flash_rwdata_start+0xffffc32c>

0402d2b4 <__ascii_wctomb>:
 402d2b4:	28000526 	beq	r5,zero,402d2cc <__ascii_wctomb+0x18>
 402d2b8:	00803fc4 	movi	r2,255
 402d2bc:	11800536 	bltu	r2,r6,402d2d4 <__ascii_wctomb+0x20>
 402d2c0:	29800005 	stb	r6,0(r5)
 402d2c4:	00800044 	movi	r2,1
 402d2c8:	f800283a 	ret
 402d2cc:	0005883a 	mov	r2,zero
 402d2d0:	f800283a 	ret
 402d2d4:	00802284 	movi	r2,138
 402d2d8:	20800015 	stw	r2,0(r4)
 402d2dc:	00bfffc4 	movi	r2,-1
 402d2e0:	f800283a 	ret

0402d2e4 <_wctomb_r>:
 402d2e4:	00800034 	movhi	r2,0
 402d2e8:	defff904 	addi	sp,sp,-28
 402d2ec:	10879304 	addi	r2,r2,7756
 402d2f0:	dfc00615 	stw	ra,24(sp)
 402d2f4:	dc400515 	stw	r17,20(sp)
 402d2f8:	dc000415 	stw	r16,16(sp)
 402d2fc:	3823883a 	mov	r17,r7
 402d300:	14000017 	ldw	r16,0(r2)
 402d304:	d9000115 	stw	r4,4(sp)
 402d308:	d9400215 	stw	r5,8(sp)
 402d30c:	d9800315 	stw	r6,12(sp)
 402d310:	4028d200 	call	4028d20 <__locale_charset>
 402d314:	d9800317 	ldw	r6,12(sp)
 402d318:	d9400217 	ldw	r5,8(sp)
 402d31c:	d9000117 	ldw	r4,4(sp)
 402d320:	100f883a 	mov	r7,r2
 402d324:	dc400015 	stw	r17,0(sp)
 402d328:	803ee83a 	callr	r16
 402d32c:	dfc00617 	ldw	ra,24(sp)
 402d330:	dc400517 	ldw	r17,20(sp)
 402d334:	dc000417 	ldw	r16,16(sp)
 402d338:	dec00704 	addi	sp,sp,28
 402d33c:	f800283a 	ret

0402d340 <__muldi3>:
 402d340:	223fffcc 	andi	r8,r4,65535
 402d344:	2006d43a 	srli	r3,r4,16
 402d348:	32bfffcc 	andi	r10,r6,65535
 402d34c:	3012d43a 	srli	r9,r6,16
 402d350:	4297383a 	mul	r11,r8,r10
 402d354:	1a95383a 	mul	r10,r3,r10
 402d358:	4251383a 	mul	r8,r8,r9
 402d35c:	5804d43a 	srli	r2,r11,16
 402d360:	4291883a 	add	r8,r8,r10
 402d364:	1205883a 	add	r2,r2,r8
 402d368:	1a51383a 	mul	r8,r3,r9
 402d36c:	1280022e 	bgeu	r2,r10,402d378 <__muldi3+0x38>
 402d370:	00c00074 	movhi	r3,1
 402d374:	40d1883a 	add	r8,r8,r3
 402d378:	1006d43a 	srli	r3,r2,16
 402d37c:	21cf383a 	mul	r7,r4,r7
 402d380:	314b383a 	mul	r5,r6,r5
 402d384:	1004943a 	slli	r2,r2,16
 402d388:	1a11883a 	add	r8,r3,r8
 402d38c:	5affffcc 	andi	r11,r11,65535
 402d390:	3947883a 	add	r3,r7,r5
 402d394:	12c5883a 	add	r2,r2,r11
 402d398:	1a07883a 	add	r3,r3,r8
 402d39c:	f800283a 	ret

0402d3a0 <__udivdi3>:
 402d3a0:	defff504 	addi	sp,sp,-44
 402d3a4:	dcc00415 	stw	r19,16(sp)
 402d3a8:	dc000115 	stw	r16,4(sp)
 402d3ac:	dfc00a15 	stw	ra,40(sp)
 402d3b0:	df000915 	stw	fp,36(sp)
 402d3b4:	ddc00815 	stw	r23,32(sp)
 402d3b8:	dd800715 	stw	r22,28(sp)
 402d3bc:	dd400615 	stw	r21,24(sp)
 402d3c0:	dd000515 	stw	r20,20(sp)
 402d3c4:	dc800315 	stw	r18,12(sp)
 402d3c8:	dc400215 	stw	r17,8(sp)
 402d3cc:	2027883a 	mov	r19,r4
 402d3d0:	2821883a 	mov	r16,r5
 402d3d4:	3800411e 	bne	r7,zero,402d4dc <__udivdi3+0x13c>
 402d3d8:	3023883a 	mov	r17,r6
 402d3dc:	2025883a 	mov	r18,r4
 402d3e0:	2980522e 	bgeu	r5,r6,402d52c <__udivdi3+0x18c>
 402d3e4:	00bfffd4 	movui	r2,65535
 402d3e8:	282d883a 	mov	r22,r5
 402d3ec:	1180a836 	bltu	r2,r6,402d690 <__udivdi3+0x2f0>
 402d3f0:	00803fc4 	movi	r2,255
 402d3f4:	1185803a 	cmpltu	r2,r2,r6
 402d3f8:	100490fa 	slli	r2,r2,3
 402d3fc:	3086d83a 	srl	r3,r6,r2
 402d400:	01000034 	movhi	r4,0
 402d404:	21001a84 	addi	r4,r4,106
 402d408:	20c7883a 	add	r3,r4,r3
 402d40c:	18c00003 	ldbu	r3,0(r3)
 402d410:	1885883a 	add	r2,r3,r2
 402d414:	00c00804 	movi	r3,32
 402d418:	1887c83a 	sub	r3,r3,r2
 402d41c:	18000526 	beq	r3,zero,402d434 <__udivdi3+0x94>
 402d420:	80e0983a 	sll	r16,r16,r3
 402d424:	9884d83a 	srl	r2,r19,r2
 402d428:	30e2983a 	sll	r17,r6,r3
 402d42c:	98e4983a 	sll	r18,r19,r3
 402d430:	142cb03a 	or	r22,r2,r16
 402d434:	882ad43a 	srli	r21,r17,16
 402d438:	b009883a 	mov	r4,r22
 402d43c:	8d3fffcc 	andi	r20,r17,65535
 402d440:	a80b883a 	mov	r5,r21
 402d444:	40216100 	call	4021610 <__umodsi3>
 402d448:	b009883a 	mov	r4,r22
 402d44c:	a80b883a 	mov	r5,r21
 402d450:	1027883a 	mov	r19,r2
 402d454:	40215ac0 	call	40215ac <__udivsi3>
 402d458:	102d883a 	mov	r22,r2
 402d45c:	9826943a 	slli	r19,r19,16
 402d460:	9004d43a 	srli	r2,r18,16
 402d464:	a5a1383a 	mul	r16,r20,r22
 402d468:	14c4b03a 	or	r2,r2,r19
 402d46c:	1400052e 	bgeu	r2,r16,402d484 <__udivdi3+0xe4>
 402d470:	1445883a 	add	r2,r2,r17
 402d474:	b0ffffc4 	addi	r3,r22,-1
 402d478:	14400136 	bltu	r2,r17,402d480 <__udivdi3+0xe0>
 402d47c:	14012336 	bltu	r2,r16,402d90c <__udivdi3+0x56c>
 402d480:	182d883a 	mov	r22,r3
 402d484:	1421c83a 	sub	r16,r2,r16
 402d488:	a80b883a 	mov	r5,r21
 402d48c:	8009883a 	mov	r4,r16
 402d490:	40216100 	call	4021610 <__umodsi3>
 402d494:	1027883a 	mov	r19,r2
 402d498:	a80b883a 	mov	r5,r21
 402d49c:	8009883a 	mov	r4,r16
 402d4a0:	40215ac0 	call	40215ac <__udivsi3>
 402d4a4:	9826943a 	slli	r19,r19,16
 402d4a8:	a0a9383a 	mul	r20,r20,r2
 402d4ac:	94bfffcc 	andi	r18,r18,65535
 402d4b0:	94e4b03a 	or	r18,r18,r19
 402d4b4:	9500052e 	bgeu	r18,r20,402d4cc <__udivdi3+0x12c>
 402d4b8:	8ca5883a 	add	r18,r17,r18
 402d4bc:	10ffffc4 	addi	r3,r2,-1
 402d4c0:	9440f136 	bltu	r18,r17,402d888 <__udivdi3+0x4e8>
 402d4c4:	9500f02e 	bgeu	r18,r20,402d888 <__udivdi3+0x4e8>
 402d4c8:	10bfff84 	addi	r2,r2,-2
 402d4cc:	b00c943a 	slli	r6,r22,16
 402d4d0:	0007883a 	mov	r3,zero
 402d4d4:	3084b03a 	or	r2,r6,r2
 402d4d8:	00005906 	br	402d640 <__udivdi3+0x2a0>
 402d4dc:	29c05636 	bltu	r5,r7,402d638 <__udivdi3+0x298>
 402d4e0:	00bfffd4 	movui	r2,65535
 402d4e4:	11c0622e 	bgeu	r2,r7,402d670 <__udivdi3+0x2d0>
 402d4e8:	00804034 	movhi	r2,256
 402d4ec:	10bfffc4 	addi	r2,r2,-1
 402d4f0:	11c0ee36 	bltu	r2,r7,402d8ac <__udivdi3+0x50c>
 402d4f4:	00800404 	movi	r2,16
 402d4f8:	3886d83a 	srl	r3,r7,r2
 402d4fc:	01000034 	movhi	r4,0
 402d500:	21001a84 	addi	r4,r4,106
 402d504:	20c7883a 	add	r3,r4,r3
 402d508:	18c00003 	ldbu	r3,0(r3)
 402d50c:	05400804 	movi	r21,32
 402d510:	1885883a 	add	r2,r3,r2
 402d514:	a8abc83a 	sub	r21,r21,r2
 402d518:	a800621e 	bne	r21,zero,402d6a4 <__udivdi3+0x304>
 402d51c:	3c00e936 	bltu	r7,r16,402d8c4 <__udivdi3+0x524>
 402d520:	9985403a 	cmpgeu	r2,r19,r6
 402d524:	0007883a 	mov	r3,zero
 402d528:	00004506 	br	402d640 <__udivdi3+0x2a0>
 402d52c:	3000041e 	bne	r6,zero,402d540 <__udivdi3+0x1a0>
 402d530:	000b883a 	mov	r5,zero
 402d534:	01000044 	movi	r4,1
 402d538:	40215ac0 	call	40215ac <__udivsi3>
 402d53c:	1023883a 	mov	r17,r2
 402d540:	00bfffd4 	movui	r2,65535
 402d544:	14404e2e 	bgeu	r2,r17,402d680 <__udivdi3+0x2e0>
 402d548:	00804034 	movhi	r2,256
 402d54c:	10bfffc4 	addi	r2,r2,-1
 402d550:	1440d836 	bltu	r2,r17,402d8b4 <__udivdi3+0x514>
 402d554:	00800404 	movi	r2,16
 402d558:	8886d83a 	srl	r3,r17,r2
 402d55c:	01000034 	movhi	r4,0
 402d560:	21001a84 	addi	r4,r4,106
 402d564:	20c7883a 	add	r3,r4,r3
 402d568:	18c00003 	ldbu	r3,0(r3)
 402d56c:	1885883a 	add	r2,r3,r2
 402d570:	00c00804 	movi	r3,32
 402d574:	1887c83a 	sub	r3,r3,r2
 402d578:	18008f1e 	bne	r3,zero,402d7b8 <__udivdi3+0x418>
 402d57c:	882ad43a 	srli	r21,r17,16
 402d580:	8461c83a 	sub	r16,r16,r17
 402d584:	8d3fffcc 	andi	r20,r17,65535
 402d588:	00c00044 	movi	r3,1
 402d58c:	8009883a 	mov	r4,r16
 402d590:	a80b883a 	mov	r5,r21
 402d594:	d8c00015 	stw	r3,0(sp)
 402d598:	40216100 	call	4021610 <__umodsi3>
 402d59c:	8009883a 	mov	r4,r16
 402d5a0:	a80b883a 	mov	r5,r21
 402d5a4:	1027883a 	mov	r19,r2
 402d5a8:	40215ac0 	call	40215ac <__udivsi3>
 402d5ac:	9826943a 	slli	r19,r19,16
 402d5b0:	9008d43a 	srli	r4,r18,16
 402d5b4:	1521383a 	mul	r16,r2,r20
 402d5b8:	102d883a 	mov	r22,r2
 402d5bc:	24c8b03a 	or	r4,r4,r19
 402d5c0:	d8c00017 	ldw	r3,0(sp)
 402d5c4:	2400052e 	bgeu	r4,r16,402d5dc <__udivdi3+0x23c>
 402d5c8:	2449883a 	add	r4,r4,r17
 402d5cc:	b0bfffc4 	addi	r2,r22,-1
 402d5d0:	24400136 	bltu	r4,r17,402d5d8 <__udivdi3+0x238>
 402d5d4:	2400ca36 	bltu	r4,r16,402d900 <__udivdi3+0x560>
 402d5d8:	102d883a 	mov	r22,r2
 402d5dc:	2421c83a 	sub	r16,r4,r16
 402d5e0:	a80b883a 	mov	r5,r21
 402d5e4:	8009883a 	mov	r4,r16
 402d5e8:	d8c00015 	stw	r3,0(sp)
 402d5ec:	40216100 	call	4021610 <__umodsi3>
 402d5f0:	1027883a 	mov	r19,r2
 402d5f4:	a80b883a 	mov	r5,r21
 402d5f8:	8009883a 	mov	r4,r16
 402d5fc:	40215ac0 	call	40215ac <__udivsi3>
 402d600:	9826943a 	slli	r19,r19,16
 402d604:	1529383a 	mul	r20,r2,r20
 402d608:	94bfffcc 	andi	r18,r18,65535
 402d60c:	94e4b03a 	or	r18,r18,r19
 402d610:	d8c00017 	ldw	r3,0(sp)
 402d614:	9500052e 	bgeu	r18,r20,402d62c <__udivdi3+0x28c>
 402d618:	8ca5883a 	add	r18,r17,r18
 402d61c:	113fffc4 	addi	r4,r2,-1
 402d620:	94409736 	bltu	r18,r17,402d880 <__udivdi3+0x4e0>
 402d624:	9500962e 	bgeu	r18,r20,402d880 <__udivdi3+0x4e0>
 402d628:	10bfff84 	addi	r2,r2,-2
 402d62c:	b00c943a 	slli	r6,r22,16
 402d630:	3084b03a 	or	r2,r6,r2
 402d634:	00000206 	br	402d640 <__udivdi3+0x2a0>
 402d638:	0007883a 	mov	r3,zero
 402d63c:	0005883a 	mov	r2,zero
 402d640:	dfc00a17 	ldw	ra,40(sp)
 402d644:	df000917 	ldw	fp,36(sp)
 402d648:	ddc00817 	ldw	r23,32(sp)
 402d64c:	dd800717 	ldw	r22,28(sp)
 402d650:	dd400617 	ldw	r21,24(sp)
 402d654:	dd000517 	ldw	r20,20(sp)
 402d658:	dcc00417 	ldw	r19,16(sp)
 402d65c:	dc800317 	ldw	r18,12(sp)
 402d660:	dc400217 	ldw	r17,8(sp)
 402d664:	dc000117 	ldw	r16,4(sp)
 402d668:	dec00b04 	addi	sp,sp,44
 402d66c:	f800283a 	ret
 402d670:	00803fc4 	movi	r2,255
 402d674:	11c5803a 	cmpltu	r2,r2,r7
 402d678:	100490fa 	slli	r2,r2,3
 402d67c:	003f9e06 	br	402d4f8 <__flash_rwdata_start+0xffffc5d0>
 402d680:	00803fc4 	movi	r2,255
 402d684:	1445803a 	cmpltu	r2,r2,r17
 402d688:	100490fa 	slli	r2,r2,3
 402d68c:	003fb206 	br	402d558 <__flash_rwdata_start+0xffffc630>
 402d690:	00804034 	movhi	r2,256
 402d694:	10bfffc4 	addi	r2,r2,-1
 402d698:	11808836 	bltu	r2,r6,402d8bc <__udivdi3+0x51c>
 402d69c:	00800404 	movi	r2,16
 402d6a0:	003f5606 	br	402d3fc <__flash_rwdata_start+0xffffc4d4>
 402d6a4:	30aed83a 	srl	r23,r6,r2
 402d6a8:	3d4e983a 	sll	r7,r7,r21
 402d6ac:	80acd83a 	srl	r22,r16,r2
 402d6b0:	9884d83a 	srl	r2,r19,r2
 402d6b4:	3deeb03a 	or	r23,r7,r23
 402d6b8:	b824d43a 	srli	r18,r23,16
 402d6bc:	8560983a 	sll	r16,r16,r21
 402d6c0:	b009883a 	mov	r4,r22
 402d6c4:	900b883a 	mov	r5,r18
 402d6c8:	3568983a 	sll	r20,r6,r21
 402d6cc:	1420b03a 	or	r16,r2,r16
 402d6d0:	40216100 	call	4021610 <__umodsi3>
 402d6d4:	b009883a 	mov	r4,r22
 402d6d8:	900b883a 	mov	r5,r18
 402d6dc:	1023883a 	mov	r17,r2
 402d6e0:	40215ac0 	call	40215ac <__udivsi3>
 402d6e4:	8808943a 	slli	r4,r17,16
 402d6e8:	bf3fffcc 	andi	fp,r23,65535
 402d6ec:	8006d43a 	srli	r3,r16,16
 402d6f0:	e0a3383a 	mul	r17,fp,r2
 402d6f4:	100d883a 	mov	r6,r2
 402d6f8:	1906b03a 	or	r3,r3,r4
 402d6fc:	1c40042e 	bgeu	r3,r17,402d710 <__udivdi3+0x370>
 402d700:	1dc7883a 	add	r3,r3,r23
 402d704:	10bfffc4 	addi	r2,r2,-1
 402d708:	1dc0752e 	bgeu	r3,r23,402d8e0 <__udivdi3+0x540>
 402d70c:	100d883a 	mov	r6,r2
 402d710:	1c63c83a 	sub	r17,r3,r17
 402d714:	900b883a 	mov	r5,r18
 402d718:	8809883a 	mov	r4,r17
 402d71c:	d9800015 	stw	r6,0(sp)
 402d720:	40216100 	call	4021610 <__umodsi3>
 402d724:	102d883a 	mov	r22,r2
 402d728:	8809883a 	mov	r4,r17
 402d72c:	900b883a 	mov	r5,r18
 402d730:	40215ac0 	call	40215ac <__udivsi3>
 402d734:	b02c943a 	slli	r22,r22,16
 402d738:	e089383a 	mul	r4,fp,r2
 402d73c:	843fffcc 	andi	r16,r16,65535
 402d740:	85a0b03a 	or	r16,r16,r22
 402d744:	d9800017 	ldw	r6,0(sp)
 402d748:	8100042e 	bgeu	r16,r4,402d75c <__udivdi3+0x3bc>
 402d74c:	85e1883a 	add	r16,r16,r23
 402d750:	10ffffc4 	addi	r3,r2,-1
 402d754:	85c05e2e 	bgeu	r16,r23,402d8d0 <__udivdi3+0x530>
 402d758:	1805883a 	mov	r2,r3
 402d75c:	300c943a 	slli	r6,r6,16
 402d760:	a17fffcc 	andi	r5,r20,65535
 402d764:	a028d43a 	srli	r20,r20,16
 402d768:	3084b03a 	or	r2,r6,r2
 402d76c:	10ffffcc 	andi	r3,r2,65535
 402d770:	100cd43a 	srli	r6,r2,16
 402d774:	194f383a 	mul	r7,r3,r5
 402d778:	1d07383a 	mul	r3,r3,r20
 402d77c:	314b383a 	mul	r5,r6,r5
 402d780:	3810d43a 	srli	r8,r7,16
 402d784:	8121c83a 	sub	r16,r16,r4
 402d788:	1947883a 	add	r3,r3,r5
 402d78c:	40c7883a 	add	r3,r8,r3
 402d790:	350d383a 	mul	r6,r6,r20
 402d794:	1940022e 	bgeu	r3,r5,402d7a0 <__udivdi3+0x400>
 402d798:	01000074 	movhi	r4,1
 402d79c:	310d883a 	add	r6,r6,r4
 402d7a0:	1828d43a 	srli	r20,r3,16
 402d7a4:	a18d883a 	add	r6,r20,r6
 402d7a8:	81803e36 	bltu	r16,r6,402d8a4 <__udivdi3+0x504>
 402d7ac:	81803826 	beq	r16,r6,402d890 <__udivdi3+0x4f0>
 402d7b0:	0007883a 	mov	r3,zero
 402d7b4:	003fa206 	br	402d640 <__flash_rwdata_start+0xffffc718>
 402d7b8:	88e2983a 	sll	r17,r17,r3
 402d7bc:	80a8d83a 	srl	r20,r16,r2
 402d7c0:	80e0983a 	sll	r16,r16,r3
 402d7c4:	882ad43a 	srli	r21,r17,16
 402d7c8:	9884d83a 	srl	r2,r19,r2
 402d7cc:	a009883a 	mov	r4,r20
 402d7d0:	a80b883a 	mov	r5,r21
 402d7d4:	142eb03a 	or	r23,r2,r16
 402d7d8:	98e4983a 	sll	r18,r19,r3
 402d7dc:	40216100 	call	4021610 <__umodsi3>
 402d7e0:	a009883a 	mov	r4,r20
 402d7e4:	a80b883a 	mov	r5,r21
 402d7e8:	1021883a 	mov	r16,r2
 402d7ec:	40215ac0 	call	40215ac <__udivsi3>
 402d7f0:	1039883a 	mov	fp,r2
 402d7f4:	8d3fffcc 	andi	r20,r17,65535
 402d7f8:	8020943a 	slli	r16,r16,16
 402d7fc:	b804d43a 	srli	r2,r23,16
 402d800:	a72d383a 	mul	r22,r20,fp
 402d804:	1404b03a 	or	r2,r2,r16
 402d808:	1580062e 	bgeu	r2,r22,402d824 <__udivdi3+0x484>
 402d80c:	1445883a 	add	r2,r2,r17
 402d810:	e0ffffc4 	addi	r3,fp,-1
 402d814:	14403836 	bltu	r2,r17,402d8f8 <__udivdi3+0x558>
 402d818:	1580372e 	bgeu	r2,r22,402d8f8 <__udivdi3+0x558>
 402d81c:	e73fff84 	addi	fp,fp,-2
 402d820:	1445883a 	add	r2,r2,r17
 402d824:	15adc83a 	sub	r22,r2,r22
 402d828:	a80b883a 	mov	r5,r21
 402d82c:	b009883a 	mov	r4,r22
 402d830:	40216100 	call	4021610 <__umodsi3>
 402d834:	1027883a 	mov	r19,r2
 402d838:	b009883a 	mov	r4,r22
 402d83c:	a80b883a 	mov	r5,r21
 402d840:	40215ac0 	call	40215ac <__udivsi3>
 402d844:	9826943a 	slli	r19,r19,16
 402d848:	a0a1383a 	mul	r16,r20,r2
 402d84c:	b93fffcc 	andi	r4,r23,65535
 402d850:	24c8b03a 	or	r4,r4,r19
 402d854:	2400062e 	bgeu	r4,r16,402d870 <__udivdi3+0x4d0>
 402d858:	2449883a 	add	r4,r4,r17
 402d85c:	10ffffc4 	addi	r3,r2,-1
 402d860:	24402336 	bltu	r4,r17,402d8f0 <__udivdi3+0x550>
 402d864:	2400222e 	bgeu	r4,r16,402d8f0 <__udivdi3+0x550>
 402d868:	10bfff84 	addi	r2,r2,-2
 402d86c:	2449883a 	add	r4,r4,r17
 402d870:	e038943a 	slli	fp,fp,16
 402d874:	2421c83a 	sub	r16,r4,r16
 402d878:	e086b03a 	or	r3,fp,r2
 402d87c:	003f4306 	br	402d58c <__flash_rwdata_start+0xffffc664>
 402d880:	2005883a 	mov	r2,r4
 402d884:	003f6906 	br	402d62c <__flash_rwdata_start+0xffffc704>
 402d888:	1805883a 	mov	r2,r3
 402d88c:	003f0f06 	br	402d4cc <__flash_rwdata_start+0xffffc5a4>
 402d890:	1806943a 	slli	r3,r3,16
 402d894:	9d66983a 	sll	r19,r19,r21
 402d898:	39ffffcc 	andi	r7,r7,65535
 402d89c:	19c7883a 	add	r3,r3,r7
 402d8a0:	98ffc32e 	bgeu	r19,r3,402d7b0 <__flash_rwdata_start+0xffffc888>
 402d8a4:	10bfffc4 	addi	r2,r2,-1
 402d8a8:	003fc106 	br	402d7b0 <__flash_rwdata_start+0xffffc888>
 402d8ac:	00800604 	movi	r2,24
 402d8b0:	003f1106 	br	402d4f8 <__flash_rwdata_start+0xffffc5d0>
 402d8b4:	00800604 	movi	r2,24
 402d8b8:	003f2706 	br	402d558 <__flash_rwdata_start+0xffffc630>
 402d8bc:	00800604 	movi	r2,24
 402d8c0:	003ece06 	br	402d3fc <__flash_rwdata_start+0xffffc4d4>
 402d8c4:	0007883a 	mov	r3,zero
 402d8c8:	00800044 	movi	r2,1
 402d8cc:	003f5c06 	br	402d640 <__flash_rwdata_start+0xffffc718>
 402d8d0:	813fa12e 	bgeu	r16,r4,402d758 <__flash_rwdata_start+0xffffc830>
 402d8d4:	10bfff84 	addi	r2,r2,-2
 402d8d8:	85e1883a 	add	r16,r16,r23
 402d8dc:	003f9f06 	br	402d75c <__flash_rwdata_start+0xffffc834>
 402d8e0:	1c7f8a2e 	bgeu	r3,r17,402d70c <__flash_rwdata_start+0xffffc7e4>
 402d8e4:	31bfff84 	addi	r6,r6,-2
 402d8e8:	1dc7883a 	add	r3,r3,r23
 402d8ec:	003f8806 	br	402d710 <__flash_rwdata_start+0xffffc7e8>
 402d8f0:	1805883a 	mov	r2,r3
 402d8f4:	003fde06 	br	402d870 <__flash_rwdata_start+0xffffc948>
 402d8f8:	1839883a 	mov	fp,r3
 402d8fc:	003fc906 	br	402d824 <__flash_rwdata_start+0xffffc8fc>
 402d900:	b5bfff84 	addi	r22,r22,-2
 402d904:	2449883a 	add	r4,r4,r17
 402d908:	003f3406 	br	402d5dc <__flash_rwdata_start+0xffffc6b4>
 402d90c:	b5bfff84 	addi	r22,r22,-2
 402d910:	1445883a 	add	r2,r2,r17
 402d914:	003edb06 	br	402d484 <__flash_rwdata_start+0xffffc55c>

0402d918 <__umoddi3>:
 402d918:	defff404 	addi	sp,sp,-48
 402d91c:	df000a15 	stw	fp,40(sp)
 402d920:	dc400315 	stw	r17,12(sp)
 402d924:	dc000215 	stw	r16,8(sp)
 402d928:	dfc00b15 	stw	ra,44(sp)
 402d92c:	ddc00915 	stw	r23,36(sp)
 402d930:	dd800815 	stw	r22,32(sp)
 402d934:	dd400715 	stw	r21,28(sp)
 402d938:	dd000615 	stw	r20,24(sp)
 402d93c:	dcc00515 	stw	r19,20(sp)
 402d940:	dc800415 	stw	r18,16(sp)
 402d944:	2021883a 	mov	r16,r4
 402d948:	2823883a 	mov	r17,r5
 402d94c:	2839883a 	mov	fp,r5
 402d950:	38003c1e 	bne	r7,zero,402da44 <__umoddi3+0x12c>
 402d954:	3027883a 	mov	r19,r6
 402d958:	2029883a 	mov	r20,r4
 402d95c:	2980512e 	bgeu	r5,r6,402daa4 <__umoddi3+0x18c>
 402d960:	00bfffd4 	movui	r2,65535
 402d964:	11809a36 	bltu	r2,r6,402dbd0 <__umoddi3+0x2b8>
 402d968:	01003fc4 	movi	r4,255
 402d96c:	2189803a 	cmpltu	r4,r4,r6
 402d970:	200890fa 	slli	r4,r4,3
 402d974:	3104d83a 	srl	r2,r6,r4
 402d978:	00c00034 	movhi	r3,0
 402d97c:	18c01a84 	addi	r3,r3,106
 402d980:	1885883a 	add	r2,r3,r2
 402d984:	10c00003 	ldbu	r3,0(r2)
 402d988:	00800804 	movi	r2,32
 402d98c:	1909883a 	add	r4,r3,r4
 402d990:	1125c83a 	sub	r18,r2,r4
 402d994:	90000526 	beq	r18,zero,402d9ac <__umoddi3+0x94>
 402d998:	8ca2983a 	sll	r17,r17,r18
 402d99c:	8108d83a 	srl	r4,r16,r4
 402d9a0:	34a6983a 	sll	r19,r6,r18
 402d9a4:	84a8983a 	sll	r20,r16,r18
 402d9a8:	2478b03a 	or	fp,r4,r17
 402d9ac:	982ed43a 	srli	r23,r19,16
 402d9b0:	e009883a 	mov	r4,fp
 402d9b4:	9dbfffcc 	andi	r22,r19,65535
 402d9b8:	b80b883a 	mov	r5,r23
 402d9bc:	40216100 	call	4021610 <__umodsi3>
 402d9c0:	e009883a 	mov	r4,fp
 402d9c4:	b80b883a 	mov	r5,r23
 402d9c8:	102b883a 	mov	r21,r2
 402d9cc:	40215ac0 	call	40215ac <__udivsi3>
 402d9d0:	a806943a 	slli	r3,r21,16
 402d9d4:	a008d43a 	srli	r4,r20,16
 402d9d8:	b085383a 	mul	r2,r22,r2
 402d9dc:	20c8b03a 	or	r4,r4,r3
 402d9e0:	2080032e 	bgeu	r4,r2,402d9f0 <__umoddi3+0xd8>
 402d9e4:	24c9883a 	add	r4,r4,r19
 402d9e8:	24c00136 	bltu	r4,r19,402d9f0 <__umoddi3+0xd8>
 402d9ec:	20811036 	bltu	r4,r2,402de30 <__umoddi3+0x518>
 402d9f0:	20abc83a 	sub	r21,r4,r2
 402d9f4:	b80b883a 	mov	r5,r23
 402d9f8:	a809883a 	mov	r4,r21
 402d9fc:	40216100 	call	4021610 <__umodsi3>
 402da00:	1023883a 	mov	r17,r2
 402da04:	b80b883a 	mov	r5,r23
 402da08:	a809883a 	mov	r4,r21
 402da0c:	40215ac0 	call	40215ac <__udivsi3>
 402da10:	8822943a 	slli	r17,r17,16
 402da14:	b085383a 	mul	r2,r22,r2
 402da18:	a0ffffcc 	andi	r3,r20,65535
 402da1c:	1c46b03a 	or	r3,r3,r17
 402da20:	1880042e 	bgeu	r3,r2,402da34 <__umoddi3+0x11c>
 402da24:	1cc7883a 	add	r3,r3,r19
 402da28:	1cc00236 	bltu	r3,r19,402da34 <__umoddi3+0x11c>
 402da2c:	1880012e 	bgeu	r3,r2,402da34 <__umoddi3+0x11c>
 402da30:	1cc7883a 	add	r3,r3,r19
 402da34:	1885c83a 	sub	r2,r3,r2
 402da38:	1484d83a 	srl	r2,r2,r18
 402da3c:	0007883a 	mov	r3,zero
 402da40:	00004f06 	br	402db80 <__umoddi3+0x268>
 402da44:	29c04c36 	bltu	r5,r7,402db78 <__umoddi3+0x260>
 402da48:	00bfffd4 	movui	r2,65535
 402da4c:	11c0582e 	bgeu	r2,r7,402dbb0 <__umoddi3+0x298>
 402da50:	00804034 	movhi	r2,256
 402da54:	10bfffc4 	addi	r2,r2,-1
 402da58:	11c0e736 	bltu	r2,r7,402ddf8 <__umoddi3+0x4e0>
 402da5c:	01000404 	movi	r4,16
 402da60:	3904d83a 	srl	r2,r7,r4
 402da64:	00c00034 	movhi	r3,0
 402da68:	18c01a84 	addi	r3,r3,106
 402da6c:	1885883a 	add	r2,r3,r2
 402da70:	14c00003 	ldbu	r19,0(r2)
 402da74:	00c00804 	movi	r3,32
 402da78:	9927883a 	add	r19,r19,r4
 402da7c:	1ce9c83a 	sub	r20,r3,r19
 402da80:	a000581e 	bne	r20,zero,402dbe4 <__umoddi3+0x2cc>
 402da84:	3c400136 	bltu	r7,r17,402da8c <__umoddi3+0x174>
 402da88:	8180eb36 	bltu	r16,r6,402de38 <__umoddi3+0x520>
 402da8c:	8185c83a 	sub	r2,r16,r6
 402da90:	89e3c83a 	sub	r17,r17,r7
 402da94:	8089803a 	cmpltu	r4,r16,r2
 402da98:	8939c83a 	sub	fp,r17,r4
 402da9c:	e007883a 	mov	r3,fp
 402daa0:	00003706 	br	402db80 <__umoddi3+0x268>
 402daa4:	3000041e 	bne	r6,zero,402dab8 <__umoddi3+0x1a0>
 402daa8:	000b883a 	mov	r5,zero
 402daac:	01000044 	movi	r4,1
 402dab0:	40215ac0 	call	40215ac <__udivsi3>
 402dab4:	1027883a 	mov	r19,r2
 402dab8:	00bfffd4 	movui	r2,65535
 402dabc:	14c0402e 	bgeu	r2,r19,402dbc0 <__umoddi3+0x2a8>
 402dac0:	00804034 	movhi	r2,256
 402dac4:	10bfffc4 	addi	r2,r2,-1
 402dac8:	14c0cd36 	bltu	r2,r19,402de00 <__umoddi3+0x4e8>
 402dacc:	00800404 	movi	r2,16
 402dad0:	9886d83a 	srl	r3,r19,r2
 402dad4:	01000034 	movhi	r4,0
 402dad8:	21001a84 	addi	r4,r4,106
 402dadc:	20c7883a 	add	r3,r4,r3
 402dae0:	18c00003 	ldbu	r3,0(r3)
 402dae4:	1887883a 	add	r3,r3,r2
 402dae8:	00800804 	movi	r2,32
 402daec:	10e5c83a 	sub	r18,r2,r3
 402daf0:	9000901e 	bne	r18,zero,402dd34 <__umoddi3+0x41c>
 402daf4:	982cd43a 	srli	r22,r19,16
 402daf8:	8ce3c83a 	sub	r17,r17,r19
 402dafc:	9d7fffcc 	andi	r21,r19,65535
 402db00:	b00b883a 	mov	r5,r22
 402db04:	8809883a 	mov	r4,r17
 402db08:	40216100 	call	4021610 <__umodsi3>
 402db0c:	8809883a 	mov	r4,r17
 402db10:	b00b883a 	mov	r5,r22
 402db14:	1021883a 	mov	r16,r2
 402db18:	40215ac0 	call	40215ac <__udivsi3>
 402db1c:	8006943a 	slli	r3,r16,16
 402db20:	a008d43a 	srli	r4,r20,16
 402db24:	1545383a 	mul	r2,r2,r21
 402db28:	20c8b03a 	or	r4,r4,r3
 402db2c:	2080042e 	bgeu	r4,r2,402db40 <__umoddi3+0x228>
 402db30:	24c9883a 	add	r4,r4,r19
 402db34:	24c00236 	bltu	r4,r19,402db40 <__umoddi3+0x228>
 402db38:	2080012e 	bgeu	r4,r2,402db40 <__umoddi3+0x228>
 402db3c:	24c9883a 	add	r4,r4,r19
 402db40:	20a1c83a 	sub	r16,r4,r2
 402db44:	b00b883a 	mov	r5,r22
 402db48:	8009883a 	mov	r4,r16
 402db4c:	40216100 	call	4021610 <__umodsi3>
 402db50:	1023883a 	mov	r17,r2
 402db54:	b00b883a 	mov	r5,r22
 402db58:	8009883a 	mov	r4,r16
 402db5c:	40215ac0 	call	40215ac <__udivsi3>
 402db60:	8822943a 	slli	r17,r17,16
 402db64:	1545383a 	mul	r2,r2,r21
 402db68:	a53fffcc 	andi	r20,r20,65535
 402db6c:	a446b03a 	or	r3,r20,r17
 402db70:	18bfb02e 	bgeu	r3,r2,402da34 <__flash_rwdata_start+0xffffcb0c>
 402db74:	003fab06 	br	402da24 <__flash_rwdata_start+0xffffcafc>
 402db78:	2005883a 	mov	r2,r4
 402db7c:	2807883a 	mov	r3,r5
 402db80:	dfc00b17 	ldw	ra,44(sp)
 402db84:	df000a17 	ldw	fp,40(sp)
 402db88:	ddc00917 	ldw	r23,36(sp)
 402db8c:	dd800817 	ldw	r22,32(sp)
 402db90:	dd400717 	ldw	r21,28(sp)
 402db94:	dd000617 	ldw	r20,24(sp)
 402db98:	dcc00517 	ldw	r19,20(sp)
 402db9c:	dc800417 	ldw	r18,16(sp)
 402dba0:	dc400317 	ldw	r17,12(sp)
 402dba4:	dc000217 	ldw	r16,8(sp)
 402dba8:	dec00c04 	addi	sp,sp,48
 402dbac:	f800283a 	ret
 402dbb0:	04c03fc4 	movi	r19,255
 402dbb4:	99c9803a 	cmpltu	r4,r19,r7
 402dbb8:	200890fa 	slli	r4,r4,3
 402dbbc:	003fa806 	br	402da60 <__flash_rwdata_start+0xffffcb38>
 402dbc0:	00803fc4 	movi	r2,255
 402dbc4:	14c5803a 	cmpltu	r2,r2,r19
 402dbc8:	100490fa 	slli	r2,r2,3
 402dbcc:	003fc006 	br	402dad0 <__flash_rwdata_start+0xffffcba8>
 402dbd0:	00804034 	movhi	r2,256
 402dbd4:	10bfffc4 	addi	r2,r2,-1
 402dbd8:	11808b36 	bltu	r2,r6,402de08 <__umoddi3+0x4f0>
 402dbdc:	01000404 	movi	r4,16
 402dbe0:	003f6406 	br	402d974 <__flash_rwdata_start+0xffffca4c>
 402dbe4:	34c4d83a 	srl	r2,r6,r19
 402dbe8:	3d0e983a 	sll	r7,r7,r20
 402dbec:	8cf8d83a 	srl	fp,r17,r19
 402dbf0:	8d10983a 	sll	r8,r17,r20
 402dbf4:	38aab03a 	or	r21,r7,r2
 402dbf8:	a82cd43a 	srli	r22,r21,16
 402dbfc:	84e2d83a 	srl	r17,r16,r19
 402dc00:	e009883a 	mov	r4,fp
 402dc04:	b00b883a 	mov	r5,r22
 402dc08:	8a22b03a 	or	r17,r17,r8
 402dc0c:	3524983a 	sll	r18,r6,r20
 402dc10:	40216100 	call	4021610 <__umodsi3>
 402dc14:	e009883a 	mov	r4,fp
 402dc18:	b00b883a 	mov	r5,r22
 402dc1c:	102f883a 	mov	r23,r2
 402dc20:	40215ac0 	call	40215ac <__udivsi3>
 402dc24:	100d883a 	mov	r6,r2
 402dc28:	b808943a 	slli	r4,r23,16
 402dc2c:	aa3fffcc 	andi	r8,r21,65535
 402dc30:	8804d43a 	srli	r2,r17,16
 402dc34:	41af383a 	mul	r23,r8,r6
 402dc38:	8520983a 	sll	r16,r16,r20
 402dc3c:	1104b03a 	or	r2,r2,r4
 402dc40:	15c0042e 	bgeu	r2,r23,402dc54 <__umoddi3+0x33c>
 402dc44:	1545883a 	add	r2,r2,r21
 402dc48:	30ffffc4 	addi	r3,r6,-1
 402dc4c:	1540742e 	bgeu	r2,r21,402de20 <__umoddi3+0x508>
 402dc50:	180d883a 	mov	r6,r3
 402dc54:	15efc83a 	sub	r23,r2,r23
 402dc58:	b00b883a 	mov	r5,r22
 402dc5c:	b809883a 	mov	r4,r23
 402dc60:	d9800115 	stw	r6,4(sp)
 402dc64:	da000015 	stw	r8,0(sp)
 402dc68:	40216100 	call	4021610 <__umodsi3>
 402dc6c:	b00b883a 	mov	r5,r22
 402dc70:	b809883a 	mov	r4,r23
 402dc74:	1039883a 	mov	fp,r2
 402dc78:	40215ac0 	call	40215ac <__udivsi3>
 402dc7c:	da000017 	ldw	r8,0(sp)
 402dc80:	e038943a 	slli	fp,fp,16
 402dc84:	100b883a 	mov	r5,r2
 402dc88:	4089383a 	mul	r4,r8,r2
 402dc8c:	8a3fffcc 	andi	r8,r17,65535
 402dc90:	4710b03a 	or	r8,r8,fp
 402dc94:	d9800117 	ldw	r6,4(sp)
 402dc98:	4100042e 	bgeu	r8,r4,402dcac <__umoddi3+0x394>
 402dc9c:	4551883a 	add	r8,r8,r21
 402dca0:	10bfffc4 	addi	r2,r2,-1
 402dca4:	45405a2e 	bgeu	r8,r21,402de10 <__umoddi3+0x4f8>
 402dca8:	100b883a 	mov	r5,r2
 402dcac:	300c943a 	slli	r6,r6,16
 402dcb0:	91ffffcc 	andi	r7,r18,65535
 402dcb4:	9004d43a 	srli	r2,r18,16
 402dcb8:	314cb03a 	or	r6,r6,r5
 402dcbc:	317fffcc 	andi	r5,r6,65535
 402dcc0:	300cd43a 	srli	r6,r6,16
 402dcc4:	29d3383a 	mul	r9,r5,r7
 402dcc8:	288b383a 	mul	r5,r5,r2
 402dccc:	31cf383a 	mul	r7,r6,r7
 402dcd0:	4806d43a 	srli	r3,r9,16
 402dcd4:	4111c83a 	sub	r8,r8,r4
 402dcd8:	29cb883a 	add	r5,r5,r7
 402dcdc:	194b883a 	add	r5,r3,r5
 402dce0:	3085383a 	mul	r2,r6,r2
 402dce4:	29c0022e 	bgeu	r5,r7,402dcf0 <__umoddi3+0x3d8>
 402dce8:	00c00074 	movhi	r3,1
 402dcec:	10c5883a 	add	r2,r2,r3
 402dcf0:	2808d43a 	srli	r4,r5,16
 402dcf4:	280a943a 	slli	r5,r5,16
 402dcf8:	4a7fffcc 	andi	r9,r9,65535
 402dcfc:	2085883a 	add	r2,r4,r2
 402dd00:	2a4b883a 	add	r5,r5,r9
 402dd04:	40803636 	bltu	r8,r2,402dde0 <__umoddi3+0x4c8>
 402dd08:	40804d26 	beq	r8,r2,402de40 <__umoddi3+0x528>
 402dd0c:	4089c83a 	sub	r4,r8,r2
 402dd10:	280f883a 	mov	r7,r5
 402dd14:	81cfc83a 	sub	r7,r16,r7
 402dd18:	81c7803a 	cmpltu	r3,r16,r7
 402dd1c:	20c7c83a 	sub	r3,r4,r3
 402dd20:	1cc4983a 	sll	r2,r3,r19
 402dd24:	3d0ed83a 	srl	r7,r7,r20
 402dd28:	1d06d83a 	srl	r3,r3,r20
 402dd2c:	11c4b03a 	or	r2,r2,r7
 402dd30:	003f9306 	br	402db80 <__flash_rwdata_start+0xffffcc58>
 402dd34:	9ca6983a 	sll	r19,r19,r18
 402dd38:	88e8d83a 	srl	r20,r17,r3
 402dd3c:	80c4d83a 	srl	r2,r16,r3
 402dd40:	982cd43a 	srli	r22,r19,16
 402dd44:	8ca2983a 	sll	r17,r17,r18
 402dd48:	a009883a 	mov	r4,r20
 402dd4c:	b00b883a 	mov	r5,r22
 402dd50:	1478b03a 	or	fp,r2,r17
 402dd54:	40216100 	call	4021610 <__umodsi3>
 402dd58:	a009883a 	mov	r4,r20
 402dd5c:	b00b883a 	mov	r5,r22
 402dd60:	1023883a 	mov	r17,r2
 402dd64:	40215ac0 	call	40215ac <__udivsi3>
 402dd68:	9d7fffcc 	andi	r21,r19,65535
 402dd6c:	880a943a 	slli	r5,r17,16
 402dd70:	e008d43a 	srli	r4,fp,16
 402dd74:	a885383a 	mul	r2,r21,r2
 402dd78:	84a8983a 	sll	r20,r16,r18
 402dd7c:	2148b03a 	or	r4,r4,r5
 402dd80:	2080042e 	bgeu	r4,r2,402dd94 <__umoddi3+0x47c>
 402dd84:	24c9883a 	add	r4,r4,r19
 402dd88:	24c00236 	bltu	r4,r19,402dd94 <__umoddi3+0x47c>
 402dd8c:	2080012e 	bgeu	r4,r2,402dd94 <__umoddi3+0x47c>
 402dd90:	24c9883a 	add	r4,r4,r19
 402dd94:	20a3c83a 	sub	r17,r4,r2
 402dd98:	b00b883a 	mov	r5,r22
 402dd9c:	8809883a 	mov	r4,r17
 402dda0:	40216100 	call	4021610 <__umodsi3>
 402dda4:	102f883a 	mov	r23,r2
 402dda8:	8809883a 	mov	r4,r17
 402ddac:	b00b883a 	mov	r5,r22
 402ddb0:	40215ac0 	call	40215ac <__udivsi3>
 402ddb4:	b82e943a 	slli	r23,r23,16
 402ddb8:	a885383a 	mul	r2,r21,r2
 402ddbc:	e13fffcc 	andi	r4,fp,65535
 402ddc0:	25c8b03a 	or	r4,r4,r23
 402ddc4:	2080042e 	bgeu	r4,r2,402ddd8 <__umoddi3+0x4c0>
 402ddc8:	24c9883a 	add	r4,r4,r19
 402ddcc:	24c00236 	bltu	r4,r19,402ddd8 <__umoddi3+0x4c0>
 402ddd0:	2080012e 	bgeu	r4,r2,402ddd8 <__umoddi3+0x4c0>
 402ddd4:	24c9883a 	add	r4,r4,r19
 402ddd8:	20a3c83a 	sub	r17,r4,r2
 402dddc:	003f4806 	br	402db00 <__flash_rwdata_start+0xffffcbd8>
 402dde0:	2c8fc83a 	sub	r7,r5,r18
 402dde4:	1545c83a 	sub	r2,r2,r21
 402dde8:	29cb803a 	cmpltu	r5,r5,r7
 402ddec:	1145c83a 	sub	r2,r2,r5
 402ddf0:	4089c83a 	sub	r4,r8,r2
 402ddf4:	003fc706 	br	402dd14 <__flash_rwdata_start+0xffffcdec>
 402ddf8:	01000604 	movi	r4,24
 402ddfc:	003f1806 	br	402da60 <__flash_rwdata_start+0xffffcb38>
 402de00:	00800604 	movi	r2,24
 402de04:	003f3206 	br	402dad0 <__flash_rwdata_start+0xffffcba8>
 402de08:	01000604 	movi	r4,24
 402de0c:	003ed906 	br	402d974 <__flash_rwdata_start+0xffffca4c>
 402de10:	413fa52e 	bgeu	r8,r4,402dca8 <__flash_rwdata_start+0xffffcd80>
 402de14:	297fff84 	addi	r5,r5,-2
 402de18:	4551883a 	add	r8,r8,r21
 402de1c:	003fa306 	br	402dcac <__flash_rwdata_start+0xffffcd84>
 402de20:	15ff8b2e 	bgeu	r2,r23,402dc50 <__flash_rwdata_start+0xffffcd28>
 402de24:	31bfff84 	addi	r6,r6,-2
 402de28:	1545883a 	add	r2,r2,r21
 402de2c:	003f8906 	br	402dc54 <__flash_rwdata_start+0xffffcd2c>
 402de30:	24c9883a 	add	r4,r4,r19
 402de34:	003eee06 	br	402d9f0 <__flash_rwdata_start+0xffffcac8>
 402de38:	8005883a 	mov	r2,r16
 402de3c:	003f1706 	br	402da9c <__flash_rwdata_start+0xffffcb74>
 402de40:	817fe736 	bltu	r16,r5,402dde0 <__flash_rwdata_start+0xffffceb8>
 402de44:	280f883a 	mov	r7,r5
 402de48:	0009883a 	mov	r4,zero
 402de4c:	003fb106 	br	402dd14 <__flash_rwdata_start+0xffffcdec>

0402de50 <__floatunsidf>:
 402de50:	defffe04 	addi	sp,sp,-8
 402de54:	dc000015 	stw	r16,0(sp)
 402de58:	dfc00115 	stw	ra,4(sp)
 402de5c:	2021883a 	mov	r16,r4
 402de60:	20002226 	beq	r4,zero,402deec <__floatunsidf+0x9c>
 402de64:	4023bc40 	call	4023bc4 <__clzsi2>
 402de68:	01010784 	movi	r4,1054
 402de6c:	2089c83a 	sub	r4,r4,r2
 402de70:	01810cc4 	movi	r6,1075
 402de74:	310dc83a 	sub	r6,r6,r4
 402de78:	00c007c4 	movi	r3,31
 402de7c:	1980120e 	bge	r3,r6,402dec8 <__floatunsidf+0x78>
 402de80:	00c104c4 	movi	r3,1043
 402de84:	1907c83a 	sub	r3,r3,r4
 402de88:	80ca983a 	sll	r5,r16,r3
 402de8c:	00800434 	movhi	r2,16
 402de90:	10bfffc4 	addi	r2,r2,-1
 402de94:	2101ffcc 	andi	r4,r4,2047
 402de98:	0021883a 	mov	r16,zero
 402de9c:	288a703a 	and	r5,r5,r2
 402dea0:	2008953a 	slli	r4,r4,20
 402dea4:	00c00434 	movhi	r3,16
 402dea8:	18ffffc4 	addi	r3,r3,-1
 402deac:	28c6703a 	and	r3,r5,r3
 402deb0:	8005883a 	mov	r2,r16
 402deb4:	1906b03a 	or	r3,r3,r4
 402deb8:	dfc00117 	ldw	ra,4(sp)
 402debc:	dc000017 	ldw	r16,0(sp)
 402dec0:	dec00204 	addi	sp,sp,8
 402dec4:	f800283a 	ret
 402dec8:	00c002c4 	movi	r3,11
 402decc:	188bc83a 	sub	r5,r3,r2
 402ded0:	814ad83a 	srl	r5,r16,r5
 402ded4:	00c00434 	movhi	r3,16
 402ded8:	18ffffc4 	addi	r3,r3,-1
 402dedc:	81a0983a 	sll	r16,r16,r6
 402dee0:	2101ffcc 	andi	r4,r4,2047
 402dee4:	28ca703a 	and	r5,r5,r3
 402dee8:	003fed06 	br	402dea0 <__flash_rwdata_start+0xffffcf78>
 402deec:	0009883a 	mov	r4,zero
 402def0:	000b883a 	mov	r5,zero
 402def4:	003fea06 	br	402dea0 <__flash_rwdata_start+0xffffcf78>

0402def8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402def8:	defffe04 	addi	sp,sp,-8
 402defc:	dfc00115 	stw	ra,4(sp)
 402df00:	df000015 	stw	fp,0(sp)
 402df04:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402df08:	d0a00c17 	ldw	r2,-32720(gp)
 402df0c:	10000326 	beq	r2,zero,402df1c <alt_get_errno+0x24>
 402df10:	d0a00c17 	ldw	r2,-32720(gp)
 402df14:	103ee83a 	callr	r2
 402df18:	00000106 	br	402df20 <alt_get_errno+0x28>
 402df1c:	d0a01204 	addi	r2,gp,-32696
}
 402df20:	e037883a 	mov	sp,fp
 402df24:	dfc00117 	ldw	ra,4(sp)
 402df28:	df000017 	ldw	fp,0(sp)
 402df2c:	dec00204 	addi	sp,sp,8
 402df30:	f800283a 	ret

0402df34 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 402df34:	defffb04 	addi	sp,sp,-20
 402df38:	dfc00415 	stw	ra,16(sp)
 402df3c:	df000315 	stw	fp,12(sp)
 402df40:	df000304 	addi	fp,sp,12
 402df44:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 402df48:	e0bfff17 	ldw	r2,-4(fp)
 402df4c:	10000616 	blt	r2,zero,402df68 <close+0x34>
 402df50:	e0bfff17 	ldw	r2,-4(fp)
 402df54:	10c00324 	muli	r3,r2,12
 402df58:	00800034 	movhi	r2,0
 402df5c:	10831504 	addi	r2,r2,3156
 402df60:	1885883a 	add	r2,r3,r2
 402df64:	00000106 	br	402df6c <close+0x38>
 402df68:	0005883a 	mov	r2,zero
 402df6c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 402df70:	e0bffd17 	ldw	r2,-12(fp)
 402df74:	10001926 	beq	r2,zero,402dfdc <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 402df78:	e0bffd17 	ldw	r2,-12(fp)
 402df7c:	10800017 	ldw	r2,0(r2)
 402df80:	10800417 	ldw	r2,16(r2)
 402df84:	10000626 	beq	r2,zero,402dfa0 <close+0x6c>
 402df88:	e0bffd17 	ldw	r2,-12(fp)
 402df8c:	10800017 	ldw	r2,0(r2)
 402df90:	10800417 	ldw	r2,16(r2)
 402df94:	e13ffd17 	ldw	r4,-12(fp)
 402df98:	103ee83a 	callr	r2
 402df9c:	00000106 	br	402dfa4 <close+0x70>
 402dfa0:	0005883a 	mov	r2,zero
 402dfa4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 402dfa8:	e13fff17 	ldw	r4,-4(fp)
 402dfac:	402e9680 	call	402e968 <alt_release_fd>
    if (rval < 0)
 402dfb0:	e0bffe17 	ldw	r2,-8(fp)
 402dfb4:	1000070e 	bge	r2,zero,402dfd4 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 402dfb8:	402def80 	call	402def8 <alt_get_errno>
 402dfbc:	1007883a 	mov	r3,r2
 402dfc0:	e0bffe17 	ldw	r2,-8(fp)
 402dfc4:	0085c83a 	sub	r2,zero,r2
 402dfc8:	18800015 	stw	r2,0(r3)
      return -1;
 402dfcc:	00bfffc4 	movi	r2,-1
 402dfd0:	00000706 	br	402dff0 <close+0xbc>
    }
    return 0;
 402dfd4:	0005883a 	mov	r2,zero
 402dfd8:	00000506 	br	402dff0 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402dfdc:	402def80 	call	402def8 <alt_get_errno>
 402dfe0:	1007883a 	mov	r3,r2
 402dfe4:	00801444 	movi	r2,81
 402dfe8:	18800015 	stw	r2,0(r3)
    return -1;
 402dfec:	00bfffc4 	movi	r2,-1
  }
}
 402dff0:	e037883a 	mov	sp,fp
 402dff4:	dfc00117 	ldw	ra,4(sp)
 402dff8:	df000017 	ldw	fp,0(sp)
 402dffc:	dec00204 	addi	sp,sp,8
 402e000:	f800283a 	ret

0402e004 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 402e004:	defffc04 	addi	sp,sp,-16
 402e008:	df000315 	stw	fp,12(sp)
 402e00c:	df000304 	addi	fp,sp,12
 402e010:	e13ffd15 	stw	r4,-12(fp)
 402e014:	e17ffe15 	stw	r5,-8(fp)
 402e018:	e1bfff15 	stw	r6,-4(fp)
  return len;
 402e01c:	e0bfff17 	ldw	r2,-4(fp)
}
 402e020:	e037883a 	mov	sp,fp
 402e024:	df000017 	ldw	fp,0(sp)
 402e028:	dec00104 	addi	sp,sp,4
 402e02c:	f800283a 	ret

0402e030 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e030:	defffe04 	addi	sp,sp,-8
 402e034:	dfc00115 	stw	ra,4(sp)
 402e038:	df000015 	stw	fp,0(sp)
 402e03c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e040:	d0a00c17 	ldw	r2,-32720(gp)
 402e044:	10000326 	beq	r2,zero,402e054 <alt_get_errno+0x24>
 402e048:	d0a00c17 	ldw	r2,-32720(gp)
 402e04c:	103ee83a 	callr	r2
 402e050:	00000106 	br	402e058 <alt_get_errno+0x28>
 402e054:	d0a01204 	addi	r2,gp,-32696
}
 402e058:	e037883a 	mov	sp,fp
 402e05c:	dfc00117 	ldw	ra,4(sp)
 402e060:	df000017 	ldw	fp,0(sp)
 402e064:	dec00204 	addi	sp,sp,8
 402e068:	f800283a 	ret

0402e06c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 402e06c:	defffb04 	addi	sp,sp,-20
 402e070:	dfc00415 	stw	ra,16(sp)
 402e074:	df000315 	stw	fp,12(sp)
 402e078:	df000304 	addi	fp,sp,12
 402e07c:	e13ffe15 	stw	r4,-8(fp)
 402e080:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e084:	e0bffe17 	ldw	r2,-8(fp)
 402e088:	10000616 	blt	r2,zero,402e0a4 <fstat+0x38>
 402e08c:	e0bffe17 	ldw	r2,-8(fp)
 402e090:	10c00324 	muli	r3,r2,12
 402e094:	00800034 	movhi	r2,0
 402e098:	10831504 	addi	r2,r2,3156
 402e09c:	1885883a 	add	r2,r3,r2
 402e0a0:	00000106 	br	402e0a8 <fstat+0x3c>
 402e0a4:	0005883a 	mov	r2,zero
 402e0a8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 402e0ac:	e0bffd17 	ldw	r2,-12(fp)
 402e0b0:	10001026 	beq	r2,zero,402e0f4 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 402e0b4:	e0bffd17 	ldw	r2,-12(fp)
 402e0b8:	10800017 	ldw	r2,0(r2)
 402e0bc:	10800817 	ldw	r2,32(r2)
 402e0c0:	10000726 	beq	r2,zero,402e0e0 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 402e0c4:	e0bffd17 	ldw	r2,-12(fp)
 402e0c8:	10800017 	ldw	r2,0(r2)
 402e0cc:	10800817 	ldw	r2,32(r2)
 402e0d0:	e17fff17 	ldw	r5,-4(fp)
 402e0d4:	e13ffd17 	ldw	r4,-12(fp)
 402e0d8:	103ee83a 	callr	r2
 402e0dc:	00000a06 	br	402e108 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 402e0e0:	e0bfff17 	ldw	r2,-4(fp)
 402e0e4:	00c80004 	movi	r3,8192
 402e0e8:	10c00115 	stw	r3,4(r2)
      return 0;
 402e0ec:	0005883a 	mov	r2,zero
 402e0f0:	00000506 	br	402e108 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402e0f4:	402e0300 	call	402e030 <alt_get_errno>
 402e0f8:	1007883a 	mov	r3,r2
 402e0fc:	00801444 	movi	r2,81
 402e100:	18800015 	stw	r2,0(r3)
    return -1;
 402e104:	00bfffc4 	movi	r2,-1
  }
}
 402e108:	e037883a 	mov	sp,fp
 402e10c:	dfc00117 	ldw	ra,4(sp)
 402e110:	df000017 	ldw	fp,0(sp)
 402e114:	dec00204 	addi	sp,sp,8
 402e118:	f800283a 	ret

0402e11c <gettimeofday>:
 */
 

#if defined (__GNUC__) && (__GNUC__ >= 4)
int ALT_GETTIMEOFDAY (struct timeval  *ptimeval, void *ptimezone_vptr)
{
 402e11c:	defff404 	addi	sp,sp,-48
 402e120:	dfc00b15 	stw	ra,44(sp)
 402e124:	df000a15 	stw	fp,40(sp)
 402e128:	dd000915 	stw	r20,36(sp)
 402e12c:	dcc00815 	stw	r19,32(sp)
 402e130:	dc800715 	stw	r18,28(sp)
 402e134:	dc400615 	stw	r17,24(sp)
 402e138:	dc000515 	stw	r16,20(sp)
 402e13c:	df000a04 	addi	fp,sp,40
 402e140:	e13ff915 	stw	r4,-28(fp)
 402e144:	e17ffa15 	stw	r5,-24(fp)
  struct timezone *ptimezone = (struct timezone*)ptimezone_vptr;
 402e148:	e0bffa17 	ldw	r2,-24(fp)
 402e14c:	e0bff615 	stw	r2,-40(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 402e150:	d0a02217 	ldw	r2,-32632(gp)
#else
int ALT_GETTIMEOFDAY (struct timeval  *ptimeval, struct timezone *ptimezone)
{
#endif
  
  alt_u32 nticks = alt_nticks (); 
 402e154:	e0bff715 	stw	r2,-36(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 402e158:	d0a02117 	ldw	r2,-32636(gp)
  alt_u32 tick_rate = alt_ticks_per_second ();
 402e15c:	e0bff815 	stw	r2,-32(fp)
   * non-zero system clock rate. If the system clock is not running, an error
   * is generated and the contents of "ptimeval" and "ptimezone" are not
   * updated.
   */

  if (tick_rate)
 402e160:	e0bff817 	ldw	r2,-32(fp)
 402e164:	10005f26 	beq	r2,zero,402e2e4 <gettimeofday+0x1c8>
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
 402e168:	d0a01b17 	ldw	r2,-32660(gp)
 402e16c:	1029883a 	mov	r20,r2
 402e170:	e17ff817 	ldw	r5,-32(fp)
 402e174:	e13ff717 	ldw	r4,-36(fp)
 402e178:	40215ac0 	call	40215ac <__udivsi3>
 402e17c:	a085883a 	add	r2,r20,r2
 402e180:	1007883a 	mov	r3,r2
 402e184:	e0bff917 	ldw	r2,-28(fp)
 402e188:	10c00015 	stw	r3,0(r2)
    ptimeval->tv_usec = alt_resettime.tv_usec +
 402e18c:	d0a01c17 	ldw	r2,-32656(gp)
 402e190:	1029883a 	mov	r20,r2
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
 402e194:	e0bff717 	ldw	r2,-36(fp)
 402e198:	1021883a 	mov	r16,r2
 402e19c:	0023883a 	mov	r17,zero
 402e1a0:	e17ff817 	ldw	r5,-32(fp)
 402e1a4:	010003f4 	movhi	r4,15
 402e1a8:	21109004 	addi	r4,r4,16960
 402e1ac:	40215ac0 	call	40215ac <__udivsi3>
 402e1b0:	1025883a 	mov	r18,r2
 402e1b4:	0027883a 	mov	r19,zero
 402e1b8:	900d883a 	mov	r6,r18
 402e1bc:	980f883a 	mov	r7,r19
 402e1c0:	8009883a 	mov	r4,r16
 402e1c4:	880b883a 	mov	r5,r17
 402e1c8:	402d3400 	call	402d340 <__muldi3>
 402e1cc:	1009883a 	mov	r4,r2
 402e1d0:	180b883a 	mov	r5,r3
 402e1d4:	2005883a 	mov	r2,r4
 402e1d8:	2807883a 	mov	r3,r5
 402e1dc:	018003f4 	movhi	r6,15
 402e1e0:	31909004 	addi	r6,r6,16960
 402e1e4:	000f883a 	mov	r7,zero
 402e1e8:	1009883a 	mov	r4,r2
 402e1ec:	180b883a 	mov	r5,r3
 402e1f0:	402d9180 	call	402d918 <__umoddi3>
 402e1f4:	1009883a 	mov	r4,r2
 402e1f8:	180b883a 	mov	r5,r3
 402e1fc:	2005883a 	mov	r2,r4
 402e200:	2807883a 	mov	r3,r5
   */

  if (tick_rate)
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    ptimeval->tv_usec = alt_resettime.tv_usec +
 402e204:	a085883a 	add	r2,r20,r2
 402e208:	1007883a 	mov	r3,r2
 402e20c:	e0bff917 	ldw	r2,-28(fp)
 402e210:	10c00115 	stw	r3,4(r2)
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
      
    while(ptimeval->tv_usec < 0) {
 402e214:	00001406 	br	402e268 <gettimeofday+0x14c>
      if (ptimeval->tv_sec <= 0)
 402e218:	e0bff917 	ldw	r2,-28(fp)
 402e21c:	10800017 	ldw	r2,0(r2)
 402e220:	00800516 	blt	zero,r2,402e238 <gettimeofday+0x11c>
      {
          ptimeval->tv_sec = 0;
 402e224:	e0bff917 	ldw	r2,-28(fp)
 402e228:	10000015 	stw	zero,0(r2)
          ptimeval->tv_usec = 0;
 402e22c:	e0bff917 	ldw	r2,-28(fp)
 402e230:	10000115 	stw	zero,4(r2)
          break;
 402e234:	00000f06 	br	402e274 <gettimeofday+0x158>
      }
      else
      {
          ptimeval->tv_sec--;
 402e238:	e0bff917 	ldw	r2,-28(fp)
 402e23c:	10800017 	ldw	r2,0(r2)
 402e240:	10ffffc4 	addi	r3,r2,-1
 402e244:	e0bff917 	ldw	r2,-28(fp)
 402e248:	10c00015 	stw	r3,0(r2)
          ptimeval->tv_usec += ALT_US;
 402e24c:	e0bff917 	ldw	r2,-28(fp)
 402e250:	10c00117 	ldw	r3,4(r2)
 402e254:	008003f4 	movhi	r2,15
 402e258:	10909004 	addi	r2,r2,16960
 402e25c:	1887883a 	add	r3,r3,r2
 402e260:	e0bff917 	ldw	r2,-28(fp)
 402e264:	10c00115 	stw	r3,4(r2)
  {
    ptimeval->tv_sec  = alt_resettime.tv_sec  + nticks/tick_rate;
    ptimeval->tv_usec = alt_resettime.tv_usec +
     (alt_u32)(((alt_u64)nticks*(ALT_US/tick_rate))%ALT_US);
      
    while(ptimeval->tv_usec < 0) {
 402e268:	e0bff917 	ldw	r2,-28(fp)
 402e26c:	10800117 	ldw	r2,4(r2)
 402e270:	103fe916 	blt	r2,zero,402e218 <__flash_rwdata_start+0xffffd2f0>
          ptimeval->tv_sec--;
          ptimeval->tv_usec += ALT_US;
      }
    }
    
    while(ptimeval->tv_usec >= ALT_US) {
 402e274:	00000c06 	br	402e2a8 <gettimeofday+0x18c>
      ptimeval->tv_sec++;
 402e278:	e0bff917 	ldw	r2,-28(fp)
 402e27c:	10800017 	ldw	r2,0(r2)
 402e280:	10c00044 	addi	r3,r2,1
 402e284:	e0bff917 	ldw	r2,-28(fp)
 402e288:	10c00015 	stw	r3,0(r2)
      ptimeval->tv_usec -= ALT_US;
 402e28c:	e0bff917 	ldw	r2,-28(fp)
 402e290:	10c00117 	ldw	r3,4(r2)
 402e294:	00bffc74 	movhi	r2,65521
 402e298:	10af7004 	addi	r2,r2,-16960
 402e29c:	1887883a 	add	r3,r3,r2
 402e2a0:	e0bff917 	ldw	r2,-28(fp)
 402e2a4:	10c00115 	stw	r3,4(r2)
          ptimeval->tv_sec--;
          ptimeval->tv_usec += ALT_US;
      }
    }
    
    while(ptimeval->tv_usec >= ALT_US) {
 402e2a8:	e0bff917 	ldw	r2,-28(fp)
 402e2ac:	10c00117 	ldw	r3,4(r2)
 402e2b0:	008003f4 	movhi	r2,15
 402e2b4:	10908fc4 	addi	r2,r2,16959
 402e2b8:	10ffef16 	blt	r2,r3,402e278 <__flash_rwdata_start+0xffffd350>
      ptimeval->tv_sec++;
      ptimeval->tv_usec -= ALT_US;
    }
      
    if (ptimezone)
 402e2bc:	e0bff617 	ldw	r2,-40(fp)
 402e2c0:	10000626 	beq	r2,zero,402e2dc <gettimeofday+0x1c0>
    { 
      ptimezone->tz_minuteswest = alt_timezone.tz_minuteswest;
 402e2c4:	d0e01917 	ldw	r3,-32668(gp)
 402e2c8:	e0bff617 	ldw	r2,-40(fp)
 402e2cc:	10c00015 	stw	r3,0(r2)
      ptimezone->tz_dsttime     = alt_timezone.tz_dsttime;
 402e2d0:	d0e01a17 	ldw	r3,-32664(gp)
 402e2d4:	e0bff617 	ldw	r2,-40(fp)
 402e2d8:	10c00115 	stw	r3,4(r2)
    }

    return 0;
 402e2dc:	0005883a 	mov	r2,zero
 402e2e0:	00000106 	br	402e2e8 <gettimeofday+0x1cc>
  }

  return -ENOTSUP;
 402e2e4:	00bfde84 	movi	r2,-134
}
 402e2e8:	e6fffb04 	addi	sp,fp,-20
 402e2ec:	dfc00617 	ldw	ra,24(sp)
 402e2f0:	df000517 	ldw	fp,20(sp)
 402e2f4:	dd000417 	ldw	r20,16(sp)
 402e2f8:	dcc00317 	ldw	r19,12(sp)
 402e2fc:	dc800217 	ldw	r18,8(sp)
 402e300:	dc400117 	ldw	r17,4(sp)
 402e304:	dc000017 	ldw	r16,0(sp)
 402e308:	dec00704 	addi	sp,sp,28
 402e30c:	f800283a 	ret

0402e310 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 402e310:	defff004 	addi	sp,sp,-64
 402e314:	df000f15 	stw	fp,60(sp)
 402e318:	df000f04 	addi	fp,sp,60
 402e31c:	e13ffd15 	stw	r4,-12(fp)
 402e320:	e17ffe15 	stw	r5,-8(fp)
 402e324:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
 402e328:	00bffa84 	movi	r2,-22
 402e32c:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 402e330:	e0bffd17 	ldw	r2,-12(fp)
 402e334:	10800828 	cmpgeui	r2,r2,32
 402e338:	1000501e 	bne	r2,zero,402e47c <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402e33c:	0005303a 	rdctl	r2,status
 402e340:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402e344:	e0fff617 	ldw	r3,-40(fp)
 402e348:	00bfff84 	movi	r2,-2
 402e34c:	1884703a 	and	r2,r3,r2
 402e350:	1001703a 	wrctl	status,r2
  
  return context;
 402e354:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 402e358:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
 402e35c:	00800034 	movhi	r2,0
 402e360:	1087bd04 	addi	r2,r2,7924
 402e364:	e0fffd17 	ldw	r3,-12(fp)
 402e368:	180690fa 	slli	r3,r3,3
 402e36c:	10c5883a 	add	r2,r2,r3
 402e370:	e0ffff17 	ldw	r3,-4(fp)
 402e374:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
 402e378:	00800034 	movhi	r2,0
 402e37c:	1087bd04 	addi	r2,r2,7924
 402e380:	e0fffd17 	ldw	r3,-12(fp)
 402e384:	180690fa 	slli	r3,r3,3
 402e388:	10c5883a 	add	r2,r2,r3
 402e38c:	10800104 	addi	r2,r2,4
 402e390:	e0fffe17 	ldw	r3,-8(fp)
 402e394:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 402e398:	e0bfff17 	ldw	r2,-4(fp)
 402e39c:	10001926 	beq	r2,zero,402e404 <alt_irq_register+0xf4>
 402e3a0:	e0bffd17 	ldw	r2,-12(fp)
 402e3a4:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402e3a8:	0005303a 	rdctl	r2,status
 402e3ac:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402e3b0:	e0fff717 	ldw	r3,-36(fp)
 402e3b4:	00bfff84 	movi	r2,-2
 402e3b8:	1884703a 	and	r2,r3,r2
 402e3bc:	1001703a 	wrctl	status,r2
  
  return context;
 402e3c0:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 402e3c4:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
 402e3c8:	00c00044 	movi	r3,1
 402e3cc:	e0bff217 	ldw	r2,-56(fp)
 402e3d0:	1884983a 	sll	r2,r3,r2
 402e3d4:	1007883a 	mov	r3,r2
 402e3d8:	d0a01d17 	ldw	r2,-32652(gp)
 402e3dc:	1884b03a 	or	r2,r3,r2
 402e3e0:	d0a01d15 	stw	r2,-32652(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 402e3e4:	d0a01d17 	ldw	r2,-32652(gp)
 402e3e8:	100170fa 	wrctl	ienable,r2
 402e3ec:	e0bff817 	ldw	r2,-32(fp)
 402e3f0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402e3f4:	e0bff917 	ldw	r2,-28(fp)
 402e3f8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 402e3fc:	0005883a 	mov	r2,zero
 402e400:	00001906 	br	402e468 <alt_irq_register+0x158>
 402e404:	e0bffd17 	ldw	r2,-12(fp)
 402e408:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402e40c:	0005303a 	rdctl	r2,status
 402e410:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402e414:	e0fffa17 	ldw	r3,-24(fp)
 402e418:	00bfff84 	movi	r2,-2
 402e41c:	1884703a 	and	r2,r3,r2
 402e420:	1001703a 	wrctl	status,r2
  
  return context;
 402e424:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 402e428:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
 402e42c:	00c00044 	movi	r3,1
 402e430:	e0bff417 	ldw	r2,-48(fp)
 402e434:	1884983a 	sll	r2,r3,r2
 402e438:	0084303a 	nor	r2,zero,r2
 402e43c:	1007883a 	mov	r3,r2
 402e440:	d0a01d17 	ldw	r2,-32652(gp)
 402e444:	1884703a 	and	r2,r3,r2
 402e448:	d0a01d15 	stw	r2,-32652(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 402e44c:	d0a01d17 	ldw	r2,-32652(gp)
 402e450:	100170fa 	wrctl	ienable,r2
 402e454:	e0bffb17 	ldw	r2,-20(fp)
 402e458:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402e45c:	e0bffc17 	ldw	r2,-16(fp)
 402e460:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 402e464:	0005883a 	mov	r2,zero
 402e468:	e0bff115 	stw	r2,-60(fp)
 402e46c:	e0bff317 	ldw	r2,-52(fp)
 402e470:	e0bff515 	stw	r2,-44(fp)
 402e474:	e0bff517 	ldw	r2,-44(fp)
 402e478:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
 402e47c:	e0bff117 	ldw	r2,-60(fp)
}
 402e480:	e037883a 	mov	sp,fp
 402e484:	df000017 	ldw	fp,0(sp)
 402e488:	dec00104 	addi	sp,sp,4
 402e48c:	f800283a 	ret

0402e490 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e490:	defffe04 	addi	sp,sp,-8
 402e494:	dfc00115 	stw	ra,4(sp)
 402e498:	df000015 	stw	fp,0(sp)
 402e49c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e4a0:	d0a00c17 	ldw	r2,-32720(gp)
 402e4a4:	10000326 	beq	r2,zero,402e4b4 <alt_get_errno+0x24>
 402e4a8:	d0a00c17 	ldw	r2,-32720(gp)
 402e4ac:	103ee83a 	callr	r2
 402e4b0:	00000106 	br	402e4b8 <alt_get_errno+0x28>
 402e4b4:	d0a01204 	addi	r2,gp,-32696
}
 402e4b8:	e037883a 	mov	sp,fp
 402e4bc:	dfc00117 	ldw	ra,4(sp)
 402e4c0:	df000017 	ldw	fp,0(sp)
 402e4c4:	dec00204 	addi	sp,sp,8
 402e4c8:	f800283a 	ret

0402e4cc <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 402e4cc:	deffed04 	addi	sp,sp,-76
 402e4d0:	dfc01215 	stw	ra,72(sp)
 402e4d4:	df001115 	stw	fp,68(sp)
 402e4d8:	df001104 	addi	fp,sp,68
 402e4dc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e4e0:	e0bfff17 	ldw	r2,-4(fp)
 402e4e4:	10000616 	blt	r2,zero,402e500 <isatty+0x34>
 402e4e8:	e0bfff17 	ldw	r2,-4(fp)
 402e4ec:	10c00324 	muli	r3,r2,12
 402e4f0:	00800034 	movhi	r2,0
 402e4f4:	10831504 	addi	r2,r2,3156
 402e4f8:	1885883a 	add	r2,r3,r2
 402e4fc:	00000106 	br	402e504 <isatty+0x38>
 402e500:	0005883a 	mov	r2,zero
 402e504:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 402e508:	e0bfef17 	ldw	r2,-68(fp)
 402e50c:	10000e26 	beq	r2,zero,402e548 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 402e510:	e0bfef17 	ldw	r2,-68(fp)
 402e514:	10800017 	ldw	r2,0(r2)
 402e518:	10800817 	ldw	r2,32(r2)
 402e51c:	1000021e 	bne	r2,zero,402e528 <isatty+0x5c>
    {
      return 1;
 402e520:	00800044 	movi	r2,1
 402e524:	00000d06 	br	402e55c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 402e528:	e0bff004 	addi	r2,fp,-64
 402e52c:	100b883a 	mov	r5,r2
 402e530:	e13fff17 	ldw	r4,-4(fp)
 402e534:	402e06c0 	call	402e06c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 402e538:	e0bff117 	ldw	r2,-60(fp)
 402e53c:	10880020 	cmpeqi	r2,r2,8192
 402e540:	10803fcc 	andi	r2,r2,255
 402e544:	00000506 	br	402e55c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 402e548:	402e4900 	call	402e490 <alt_get_errno>
 402e54c:	1007883a 	mov	r3,r2
 402e550:	00801444 	movi	r2,81
 402e554:	18800015 	stw	r2,0(r3)
    return 0;
 402e558:	0005883a 	mov	r2,zero
  }
}
 402e55c:	e037883a 	mov	sp,fp
 402e560:	dfc00117 	ldw	ra,4(sp)
 402e564:	df000017 	ldw	fp,0(sp)
 402e568:	dec00204 	addi	sp,sp,8
 402e56c:	f800283a 	ret

0402e570 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 402e570:	defffc04 	addi	sp,sp,-16
 402e574:	df000315 	stw	fp,12(sp)
 402e578:	df000304 	addi	fp,sp,12
 402e57c:	e13ffd15 	stw	r4,-12(fp)
 402e580:	e17ffe15 	stw	r5,-8(fp)
 402e584:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 402e588:	e0fffe17 	ldw	r3,-8(fp)
 402e58c:	e0bffd17 	ldw	r2,-12(fp)
 402e590:	18800c26 	beq	r3,r2,402e5c4 <alt_load_section+0x54>
  {
    while( to != end )
 402e594:	00000806 	br	402e5b8 <alt_load_section+0x48>
    {
      *to++ = *from++;
 402e598:	e0bffe17 	ldw	r2,-8(fp)
 402e59c:	10c00104 	addi	r3,r2,4
 402e5a0:	e0fffe15 	stw	r3,-8(fp)
 402e5a4:	e0fffd17 	ldw	r3,-12(fp)
 402e5a8:	19000104 	addi	r4,r3,4
 402e5ac:	e13ffd15 	stw	r4,-12(fp)
 402e5b0:	18c00017 	ldw	r3,0(r3)
 402e5b4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 402e5b8:	e0fffe17 	ldw	r3,-8(fp)
 402e5bc:	e0bfff17 	ldw	r2,-4(fp)
 402e5c0:	18bff51e 	bne	r3,r2,402e598 <__flash_rwdata_start+0xffffd670>
    {
      *to++ = *from++;
    }
  }
}
 402e5c4:	0001883a 	nop
 402e5c8:	e037883a 	mov	sp,fp
 402e5cc:	df000017 	ldw	fp,0(sp)
 402e5d0:	dec00104 	addi	sp,sp,4
 402e5d4:	f800283a 	ret

0402e5d8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 402e5d8:	defffe04 	addi	sp,sp,-8
 402e5dc:	dfc00115 	stw	ra,4(sp)
 402e5e0:	df000015 	stw	fp,0(sp)
 402e5e4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 402e5e8:	01800034 	movhi	r6,0
 402e5ec:	31879e04 	addi	r6,r6,7800
 402e5f0:	01400034 	movhi	r5,0
 402e5f4:	2940d804 	addi	r5,r5,864
 402e5f8:	010100f4 	movhi	r4,1027
 402e5fc:	2103ca04 	addi	r4,r4,3880
 402e600:	402e5700 	call	402e570 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 402e604:	018100b4 	movhi	r6,1026
 402e608:	31809104 	addi	r6,r6,580
 402e60c:	014100b4 	movhi	r5,1026
 402e610:	29400804 	addi	r5,r5,32
 402e614:	010100b4 	movhi	r4,1026
 402e618:	21000804 	addi	r4,r4,32
 402e61c:	402e5700 	call	402e570 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 402e620:	01800034 	movhi	r6,0
 402e624:	3180d804 	addi	r6,r6,864
 402e628:	01400034 	movhi	r5,0
 402e62c:	29400004 	addi	r5,r5,0
 402e630:	010100f4 	movhi	r4,1027
 402e634:	2102f204 	addi	r4,r4,3016
 402e638:	402e5700 	call	402e570 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 402e63c:	402fc580 	call	402fc58 <alt_dcache_flush_all>
  alt_icache_flush_all();
 402e640:	402fe400 	call	402fe40 <alt_icache_flush_all>
}
 402e644:	0001883a 	nop
 402e648:	e037883a 	mov	sp,fp
 402e64c:	dfc00117 	ldw	ra,4(sp)
 402e650:	df000017 	ldw	fp,0(sp)
 402e654:	dec00204 	addi	sp,sp,8
 402e658:	f800283a 	ret

0402e65c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e65c:	defffe04 	addi	sp,sp,-8
 402e660:	dfc00115 	stw	ra,4(sp)
 402e664:	df000015 	stw	fp,0(sp)
 402e668:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e66c:	d0a00c17 	ldw	r2,-32720(gp)
 402e670:	10000326 	beq	r2,zero,402e680 <alt_get_errno+0x24>
 402e674:	d0a00c17 	ldw	r2,-32720(gp)
 402e678:	103ee83a 	callr	r2
 402e67c:	00000106 	br	402e684 <alt_get_errno+0x28>
 402e680:	d0a01204 	addi	r2,gp,-32696
}
 402e684:	e037883a 	mov	sp,fp
 402e688:	dfc00117 	ldw	ra,4(sp)
 402e68c:	df000017 	ldw	fp,0(sp)
 402e690:	dec00204 	addi	sp,sp,8
 402e694:	f800283a 	ret

0402e698 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 402e698:	defff904 	addi	sp,sp,-28
 402e69c:	dfc00615 	stw	ra,24(sp)
 402e6a0:	df000515 	stw	fp,20(sp)
 402e6a4:	df000504 	addi	fp,sp,20
 402e6a8:	e13ffd15 	stw	r4,-12(fp)
 402e6ac:	e17ffe15 	stw	r5,-8(fp)
 402e6b0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 402e6b4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e6b8:	e0bffd17 	ldw	r2,-12(fp)
 402e6bc:	10000616 	blt	r2,zero,402e6d8 <lseek+0x40>
 402e6c0:	e0bffd17 	ldw	r2,-12(fp)
 402e6c4:	10c00324 	muli	r3,r2,12
 402e6c8:	00800034 	movhi	r2,0
 402e6cc:	10831504 	addi	r2,r2,3156
 402e6d0:	1885883a 	add	r2,r3,r2
 402e6d4:	00000106 	br	402e6dc <lseek+0x44>
 402e6d8:	0005883a 	mov	r2,zero
 402e6dc:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 402e6e0:	e0bffc17 	ldw	r2,-16(fp)
 402e6e4:	10001026 	beq	r2,zero,402e728 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 402e6e8:	e0bffc17 	ldw	r2,-16(fp)
 402e6ec:	10800017 	ldw	r2,0(r2)
 402e6f0:	10800717 	ldw	r2,28(r2)
 402e6f4:	10000926 	beq	r2,zero,402e71c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 402e6f8:	e0bffc17 	ldw	r2,-16(fp)
 402e6fc:	10800017 	ldw	r2,0(r2)
 402e700:	10800717 	ldw	r2,28(r2)
 402e704:	e1bfff17 	ldw	r6,-4(fp)
 402e708:	e17ffe17 	ldw	r5,-8(fp)
 402e70c:	e13ffc17 	ldw	r4,-16(fp)
 402e710:	103ee83a 	callr	r2
 402e714:	e0bffb15 	stw	r2,-20(fp)
 402e718:	00000506 	br	402e730 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 402e71c:	00bfde84 	movi	r2,-134
 402e720:	e0bffb15 	stw	r2,-20(fp)
 402e724:	00000206 	br	402e730 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 402e728:	00bfebc4 	movi	r2,-81
 402e72c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 402e730:	e0bffb17 	ldw	r2,-20(fp)
 402e734:	1000070e 	bge	r2,zero,402e754 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 402e738:	402e65c0 	call	402e65c <alt_get_errno>
 402e73c:	1007883a 	mov	r3,r2
 402e740:	e0bffb17 	ldw	r2,-20(fp)
 402e744:	0085c83a 	sub	r2,zero,r2
 402e748:	18800015 	stw	r2,0(r3)
    rc = -1;
 402e74c:	00bfffc4 	movi	r2,-1
 402e750:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 402e754:	e0bffb17 	ldw	r2,-20(fp)
}
 402e758:	e037883a 	mov	sp,fp
 402e75c:	dfc00117 	ldw	ra,4(sp)
 402e760:	df000017 	ldw	fp,0(sp)
 402e764:	dec00204 	addi	sp,sp,8
 402e768:	f800283a 	ret

0402e76c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 402e76c:	defffd04 	addi	sp,sp,-12
 402e770:	dfc00215 	stw	ra,8(sp)
 402e774:	df000115 	stw	fp,4(sp)
 402e778:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 402e77c:	0009883a 	mov	r4,zero
 402e780:	402edb80 	call	402edb8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 402e784:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 402e788:	402edf00 	call	402edf0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 402e78c:	01800034 	movhi	r6,0
 402e790:	3180d004 	addi	r6,r6,832
 402e794:	01400034 	movhi	r5,0
 402e798:	2940d004 	addi	r5,r5,832
 402e79c:	01000034 	movhi	r4,0
 402e7a0:	2100d004 	addi	r4,r4,832
 402e7a4:	40301d80 	call	40301d8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 402e7a8:	402fd800 	call	402fd80 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 402e7ac:	010100f4 	movhi	r4,1027
 402e7b0:	213f7804 	addi	r4,r4,-544
 402e7b4:	40308340 	call	4030834 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 402e7b8:	d0a01e17 	ldw	r2,-32648(gp)
 402e7bc:	d0e01f17 	ldw	r3,-32644(gp)
 402e7c0:	d1202017 	ldw	r4,-32640(gp)
 402e7c4:	200d883a 	mov	r6,r4
 402e7c8:	180b883a 	mov	r5,r3
 402e7cc:	1009883a 	mov	r4,r2
 402e7d0:	40207c00 	call	40207c0 <main>
 402e7d4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 402e7d8:	01000044 	movi	r4,1
 402e7dc:	402df340 	call	402df34 <close>
  exit (result);
 402e7e0:	e13fff17 	ldw	r4,-4(fp)
 402e7e4:	40308480 	call	4030848 <exit>

0402e7e8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 402e7e8:	defffe04 	addi	sp,sp,-8
 402e7ec:	df000115 	stw	fp,4(sp)
 402e7f0:	df000104 	addi	fp,sp,4
 402e7f4:	e13fff15 	stw	r4,-4(fp)
}
 402e7f8:	0001883a 	nop
 402e7fc:	e037883a 	mov	sp,fp
 402e800:	df000017 	ldw	fp,0(sp)
 402e804:	dec00104 	addi	sp,sp,4
 402e808:	f800283a 	ret

0402e80c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 402e80c:	defffe04 	addi	sp,sp,-8
 402e810:	df000115 	stw	fp,4(sp)
 402e814:	df000104 	addi	fp,sp,4
 402e818:	e13fff15 	stw	r4,-4(fp)
}
 402e81c:	0001883a 	nop
 402e820:	e037883a 	mov	sp,fp
 402e824:	df000017 	ldw	fp,0(sp)
 402e828:	dec00104 	addi	sp,sp,4
 402e82c:	f800283a 	ret

0402e830 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402e830:	defffe04 	addi	sp,sp,-8
 402e834:	dfc00115 	stw	ra,4(sp)
 402e838:	df000015 	stw	fp,0(sp)
 402e83c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402e840:	d0a00c17 	ldw	r2,-32720(gp)
 402e844:	10000326 	beq	r2,zero,402e854 <alt_get_errno+0x24>
 402e848:	d0a00c17 	ldw	r2,-32720(gp)
 402e84c:	103ee83a 	callr	r2
 402e850:	00000106 	br	402e858 <alt_get_errno+0x28>
 402e854:	d0a01204 	addi	r2,gp,-32696
}
 402e858:	e037883a 	mov	sp,fp
 402e85c:	dfc00117 	ldw	ra,4(sp)
 402e860:	df000017 	ldw	fp,0(sp)
 402e864:	dec00204 	addi	sp,sp,8
 402e868:	f800283a 	ret

0402e86c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 402e86c:	defff904 	addi	sp,sp,-28
 402e870:	dfc00615 	stw	ra,24(sp)
 402e874:	df000515 	stw	fp,20(sp)
 402e878:	df000504 	addi	fp,sp,20
 402e87c:	e13ffd15 	stw	r4,-12(fp)
 402e880:	e17ffe15 	stw	r5,-8(fp)
 402e884:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402e888:	e0bffd17 	ldw	r2,-12(fp)
 402e88c:	10000616 	blt	r2,zero,402e8a8 <read+0x3c>
 402e890:	e0bffd17 	ldw	r2,-12(fp)
 402e894:	10c00324 	muli	r3,r2,12
 402e898:	00800034 	movhi	r2,0
 402e89c:	10831504 	addi	r2,r2,3156
 402e8a0:	1885883a 	add	r2,r3,r2
 402e8a4:	00000106 	br	402e8ac <read+0x40>
 402e8a8:	0005883a 	mov	r2,zero
 402e8ac:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 402e8b0:	e0bffb17 	ldw	r2,-20(fp)
 402e8b4:	10002226 	beq	r2,zero,402e940 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 402e8b8:	e0bffb17 	ldw	r2,-20(fp)
 402e8bc:	10800217 	ldw	r2,8(r2)
 402e8c0:	108000cc 	andi	r2,r2,3
 402e8c4:	10800060 	cmpeqi	r2,r2,1
 402e8c8:	1000181e 	bne	r2,zero,402e92c <read+0xc0>
        (fd->dev->read))
 402e8cc:	e0bffb17 	ldw	r2,-20(fp)
 402e8d0:	10800017 	ldw	r2,0(r2)
 402e8d4:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 402e8d8:	10001426 	beq	r2,zero,402e92c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 402e8dc:	e0bffb17 	ldw	r2,-20(fp)
 402e8e0:	10800017 	ldw	r2,0(r2)
 402e8e4:	10800517 	ldw	r2,20(r2)
 402e8e8:	e0ffff17 	ldw	r3,-4(fp)
 402e8ec:	180d883a 	mov	r6,r3
 402e8f0:	e17ffe17 	ldw	r5,-8(fp)
 402e8f4:	e13ffb17 	ldw	r4,-20(fp)
 402e8f8:	103ee83a 	callr	r2
 402e8fc:	e0bffc15 	stw	r2,-16(fp)
 402e900:	e0bffc17 	ldw	r2,-16(fp)
 402e904:	1000070e 	bge	r2,zero,402e924 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 402e908:	402e8300 	call	402e830 <alt_get_errno>
 402e90c:	1007883a 	mov	r3,r2
 402e910:	e0bffc17 	ldw	r2,-16(fp)
 402e914:	0085c83a 	sub	r2,zero,r2
 402e918:	18800015 	stw	r2,0(r3)
          return -1;
 402e91c:	00bfffc4 	movi	r2,-1
 402e920:	00000c06 	br	402e954 <read+0xe8>
        }
        return rval;
 402e924:	e0bffc17 	ldw	r2,-16(fp)
 402e928:	00000a06 	br	402e954 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 402e92c:	402e8300 	call	402e830 <alt_get_errno>
 402e930:	1007883a 	mov	r3,r2
 402e934:	00800344 	movi	r2,13
 402e938:	18800015 	stw	r2,0(r3)
 402e93c:	00000406 	br	402e950 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 402e940:	402e8300 	call	402e830 <alt_get_errno>
 402e944:	1007883a 	mov	r3,r2
 402e948:	00801444 	movi	r2,81
 402e94c:	18800015 	stw	r2,0(r3)
  }
  return -1;
 402e950:	00bfffc4 	movi	r2,-1
}
 402e954:	e037883a 	mov	sp,fp
 402e958:	dfc00117 	ldw	ra,4(sp)
 402e95c:	df000017 	ldw	fp,0(sp)
 402e960:	dec00204 	addi	sp,sp,8
 402e964:	f800283a 	ret

0402e968 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 402e968:	defffe04 	addi	sp,sp,-8
 402e96c:	df000115 	stw	fp,4(sp)
 402e970:	df000104 	addi	fp,sp,4
 402e974:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 402e978:	e0bfff17 	ldw	r2,-4(fp)
 402e97c:	108000d0 	cmplti	r2,r2,3
 402e980:	10000d1e 	bne	r2,zero,402e9b8 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 402e984:	00800034 	movhi	r2,0
 402e988:	10831504 	addi	r2,r2,3156
 402e98c:	e0ffff17 	ldw	r3,-4(fp)
 402e990:	18c00324 	muli	r3,r3,12
 402e994:	10c5883a 	add	r2,r2,r3
 402e998:	10800204 	addi	r2,r2,8
 402e99c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 402e9a0:	00800034 	movhi	r2,0
 402e9a4:	10831504 	addi	r2,r2,3156
 402e9a8:	e0ffff17 	ldw	r3,-4(fp)
 402e9ac:	18c00324 	muli	r3,r3,12
 402e9b0:	10c5883a 	add	r2,r2,r3
 402e9b4:	10000015 	stw	zero,0(r2)
  }
}
 402e9b8:	0001883a 	nop
 402e9bc:	e037883a 	mov	sp,fp
 402e9c0:	df000017 	ldw	fp,0(sp)
 402e9c4:	dec00104 	addi	sp,sp,4
 402e9c8:	f800283a 	ret

0402e9cc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 402e9cc:	defff904 	addi	sp,sp,-28
 402e9d0:	df000615 	stw	fp,24(sp)
 402e9d4:	df000604 	addi	fp,sp,24
 402e9d8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402e9dc:	0005303a 	rdctl	r2,status
 402e9e0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402e9e4:	e0fffe17 	ldw	r3,-8(fp)
 402e9e8:	00bfff84 	movi	r2,-2
 402e9ec:	1884703a 	and	r2,r3,r2
 402e9f0:	1001703a 	wrctl	status,r2
  
  return context;
 402e9f4:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 402e9f8:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 402e9fc:	d0a00e17 	ldw	r2,-32712(gp)
 402ea00:	10c000c4 	addi	r3,r2,3
 402ea04:	00bfff04 	movi	r2,-4
 402ea08:	1884703a 	and	r2,r3,r2
 402ea0c:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 402ea10:	d0e00e17 	ldw	r3,-32712(gp)
 402ea14:	e0bfff17 	ldw	r2,-4(fp)
 402ea18:	1887883a 	add	r3,r3,r2
 402ea1c:	00810034 	movhi	r2,1024
 402ea20:	10800004 	addi	r2,r2,0
 402ea24:	10c0062e 	bgeu	r2,r3,402ea40 <sbrk+0x74>
 402ea28:	e0bffb17 	ldw	r2,-20(fp)
 402ea2c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402ea30:	e0bffa17 	ldw	r2,-24(fp)
 402ea34:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 402ea38:	00bfffc4 	movi	r2,-1
 402ea3c:	00000b06 	br	402ea6c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 402ea40:	d0a00e17 	ldw	r2,-32712(gp)
 402ea44:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 402ea48:	d0e00e17 	ldw	r3,-32712(gp)
 402ea4c:	e0bfff17 	ldw	r2,-4(fp)
 402ea50:	1885883a 	add	r2,r3,r2
 402ea54:	d0a00e15 	stw	r2,-32712(gp)
 402ea58:	e0bffb17 	ldw	r2,-20(fp)
 402ea5c:	e0bffc15 	stw	r2,-16(fp)
 402ea60:	e0bffc17 	ldw	r2,-16(fp)
 402ea64:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 402ea68:	e0bffd17 	ldw	r2,-12(fp)
} 
 402ea6c:	e037883a 	mov	sp,fp
 402ea70:	df000017 	ldw	fp,0(sp)
 402ea74:	dec00104 	addi	sp,sp,4
 402ea78:	f800283a 	ret

0402ea7c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 402ea7c:	defffa04 	addi	sp,sp,-24
 402ea80:	df000515 	stw	fp,20(sp)
 402ea84:	df000504 	addi	fp,sp,20
 402ea88:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402ea8c:	0005303a 	rdctl	r2,status
 402ea90:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402ea94:	e0fffc17 	ldw	r3,-16(fp)
 402ea98:	00bfff84 	movi	r2,-2
 402ea9c:	1884703a 	and	r2,r3,r2
 402eaa0:	1001703a 	wrctl	status,r2
  
  return context;
 402eaa4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 402eaa8:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 402eaac:	e0bfff17 	ldw	r2,-4(fp)
 402eab0:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 402eab4:	e0bffd17 	ldw	r2,-12(fp)
 402eab8:	10800017 	ldw	r2,0(r2)
 402eabc:	e0fffd17 	ldw	r3,-12(fp)
 402eac0:	18c00117 	ldw	r3,4(r3)
 402eac4:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 402eac8:	e0bffd17 	ldw	r2,-12(fp)
 402eacc:	10800117 	ldw	r2,4(r2)
 402ead0:	e0fffd17 	ldw	r3,-12(fp)
 402ead4:	18c00017 	ldw	r3,0(r3)
 402ead8:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 402eadc:	e0bffd17 	ldw	r2,-12(fp)
 402eae0:	e0fffd17 	ldw	r3,-12(fp)
 402eae4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 402eae8:	e0bffd17 	ldw	r2,-12(fp)
 402eaec:	e0fffd17 	ldw	r3,-12(fp)
 402eaf0:	10c00015 	stw	r3,0(r2)
 402eaf4:	e0bffb17 	ldw	r2,-20(fp)
 402eaf8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402eafc:	e0bffe17 	ldw	r2,-8(fp)
 402eb00:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 402eb04:	0001883a 	nop
 402eb08:	e037883a 	mov	sp,fp
 402eb0c:	df000017 	ldw	fp,0(sp)
 402eb10:	dec00104 	addi	sp,sp,4
 402eb14:	f800283a 	ret

0402eb18 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 402eb18:	defffb04 	addi	sp,sp,-20
 402eb1c:	dfc00415 	stw	ra,16(sp)
 402eb20:	df000315 	stw	fp,12(sp)
 402eb24:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 402eb28:	d0a00f17 	ldw	r2,-32708(gp)
 402eb2c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 402eb30:	d0a02217 	ldw	r2,-32632(gp)
 402eb34:	10800044 	addi	r2,r2,1
 402eb38:	d0a02215 	stw	r2,-32632(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 402eb3c:	00002e06 	br	402ebf8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 402eb40:	e0bffd17 	ldw	r2,-12(fp)
 402eb44:	10800017 	ldw	r2,0(r2)
 402eb48:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 402eb4c:	e0bffd17 	ldw	r2,-12(fp)
 402eb50:	10800403 	ldbu	r2,16(r2)
 402eb54:	10803fcc 	andi	r2,r2,255
 402eb58:	10000426 	beq	r2,zero,402eb6c <alt_tick+0x54>
 402eb5c:	d0a02217 	ldw	r2,-32632(gp)
 402eb60:	1000021e 	bne	r2,zero,402eb6c <alt_tick+0x54>
    {
      alarm->rollover = 0;
 402eb64:	e0bffd17 	ldw	r2,-12(fp)
 402eb68:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 402eb6c:	e0bffd17 	ldw	r2,-12(fp)
 402eb70:	10800217 	ldw	r2,8(r2)
 402eb74:	d0e02217 	ldw	r3,-32632(gp)
 402eb78:	18801d36 	bltu	r3,r2,402ebf0 <alt_tick+0xd8>
 402eb7c:	e0bffd17 	ldw	r2,-12(fp)
 402eb80:	10800403 	ldbu	r2,16(r2)
 402eb84:	10803fcc 	andi	r2,r2,255
 402eb88:	1000191e 	bne	r2,zero,402ebf0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 402eb8c:	e0bffd17 	ldw	r2,-12(fp)
 402eb90:	10800317 	ldw	r2,12(r2)
 402eb94:	e0fffd17 	ldw	r3,-12(fp)
 402eb98:	18c00517 	ldw	r3,20(r3)
 402eb9c:	1809883a 	mov	r4,r3
 402eba0:	103ee83a 	callr	r2
 402eba4:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 402eba8:	e0bfff17 	ldw	r2,-4(fp)
 402ebac:	1000031e 	bne	r2,zero,402ebbc <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 402ebb0:	e13ffd17 	ldw	r4,-12(fp)
 402ebb4:	402ea7c0 	call	402ea7c <alt_alarm_stop>
 402ebb8:	00000d06 	br	402ebf0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 402ebbc:	e0bffd17 	ldw	r2,-12(fp)
 402ebc0:	10c00217 	ldw	r3,8(r2)
 402ebc4:	e0bfff17 	ldw	r2,-4(fp)
 402ebc8:	1887883a 	add	r3,r3,r2
 402ebcc:	e0bffd17 	ldw	r2,-12(fp)
 402ebd0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 402ebd4:	e0bffd17 	ldw	r2,-12(fp)
 402ebd8:	10c00217 	ldw	r3,8(r2)
 402ebdc:	d0a02217 	ldw	r2,-32632(gp)
 402ebe0:	1880032e 	bgeu	r3,r2,402ebf0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 402ebe4:	e0bffd17 	ldw	r2,-12(fp)
 402ebe8:	00c00044 	movi	r3,1
 402ebec:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 402ebf0:	e0bffe17 	ldw	r2,-8(fp)
 402ebf4:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 402ebf8:	e0fffd17 	ldw	r3,-12(fp)
 402ebfc:	d0a00f04 	addi	r2,gp,-32708
 402ec00:	18bfcf1e 	bne	r3,r2,402eb40 <__flash_rwdata_start+0xffffdc18>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 402ec04:	0001883a 	nop
}
 402ec08:	0001883a 	nop
 402ec0c:	e037883a 	mov	sp,fp
 402ec10:	dfc00117 	ldw	ra,4(sp)
 402ec14:	df000017 	ldw	fp,0(sp)
 402ec18:	dec00204 	addi	sp,sp,8
 402ec1c:	f800283a 	ret

0402ec20 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 402ec20:	defffd04 	addi	sp,sp,-12
 402ec24:	dfc00215 	stw	ra,8(sp)
 402ec28:	df000115 	stw	fp,4(sp)
 402ec2c:	df000104 	addi	fp,sp,4
 402ec30:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 402ec34:	e13fff17 	ldw	r4,-4(fp)
 402ec38:	402fb000 	call	402fb00 <alt_busy_sleep>
}
 402ec3c:	e037883a 	mov	sp,fp
 402ec40:	dfc00117 	ldw	ra,4(sp)
 402ec44:	df000017 	ldw	fp,0(sp)
 402ec48:	dec00204 	addi	sp,sp,8
 402ec4c:	f800283a 	ret

0402ec50 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402ec50:	defffe04 	addi	sp,sp,-8
 402ec54:	dfc00115 	stw	ra,4(sp)
 402ec58:	df000015 	stw	fp,0(sp)
 402ec5c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402ec60:	d0a00c17 	ldw	r2,-32720(gp)
 402ec64:	10000326 	beq	r2,zero,402ec74 <alt_get_errno+0x24>
 402ec68:	d0a00c17 	ldw	r2,-32720(gp)
 402ec6c:	103ee83a 	callr	r2
 402ec70:	00000106 	br	402ec78 <alt_get_errno+0x28>
 402ec74:	d0a01204 	addi	r2,gp,-32696
}
 402ec78:	e037883a 	mov	sp,fp
 402ec7c:	dfc00117 	ldw	ra,4(sp)
 402ec80:	df000017 	ldw	fp,0(sp)
 402ec84:	dec00204 	addi	sp,sp,8
 402ec88:	f800283a 	ret

0402ec8c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 402ec8c:	defff904 	addi	sp,sp,-28
 402ec90:	dfc00615 	stw	ra,24(sp)
 402ec94:	df000515 	stw	fp,20(sp)
 402ec98:	df000504 	addi	fp,sp,20
 402ec9c:	e13ffd15 	stw	r4,-12(fp)
 402eca0:	e17ffe15 	stw	r5,-8(fp)
 402eca4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 402eca8:	e0bffd17 	ldw	r2,-12(fp)
 402ecac:	10000616 	blt	r2,zero,402ecc8 <write+0x3c>
 402ecb0:	e0bffd17 	ldw	r2,-12(fp)
 402ecb4:	10c00324 	muli	r3,r2,12
 402ecb8:	00800034 	movhi	r2,0
 402ecbc:	10831504 	addi	r2,r2,3156
 402ecc0:	1885883a 	add	r2,r3,r2
 402ecc4:	00000106 	br	402eccc <write+0x40>
 402ecc8:	0005883a 	mov	r2,zero
 402eccc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 402ecd0:	e0bffb17 	ldw	r2,-20(fp)
 402ecd4:	10002126 	beq	r2,zero,402ed5c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 402ecd8:	e0bffb17 	ldw	r2,-20(fp)
 402ecdc:	10800217 	ldw	r2,8(r2)
 402ece0:	108000cc 	andi	r2,r2,3
 402ece4:	10001826 	beq	r2,zero,402ed48 <write+0xbc>
 402ece8:	e0bffb17 	ldw	r2,-20(fp)
 402ecec:	10800017 	ldw	r2,0(r2)
 402ecf0:	10800617 	ldw	r2,24(r2)
 402ecf4:	10001426 	beq	r2,zero,402ed48 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 402ecf8:	e0bffb17 	ldw	r2,-20(fp)
 402ecfc:	10800017 	ldw	r2,0(r2)
 402ed00:	10800617 	ldw	r2,24(r2)
 402ed04:	e0ffff17 	ldw	r3,-4(fp)
 402ed08:	180d883a 	mov	r6,r3
 402ed0c:	e17ffe17 	ldw	r5,-8(fp)
 402ed10:	e13ffb17 	ldw	r4,-20(fp)
 402ed14:	103ee83a 	callr	r2
 402ed18:	e0bffc15 	stw	r2,-16(fp)
 402ed1c:	e0bffc17 	ldw	r2,-16(fp)
 402ed20:	1000070e 	bge	r2,zero,402ed40 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 402ed24:	402ec500 	call	402ec50 <alt_get_errno>
 402ed28:	1007883a 	mov	r3,r2
 402ed2c:	e0bffc17 	ldw	r2,-16(fp)
 402ed30:	0085c83a 	sub	r2,zero,r2
 402ed34:	18800015 	stw	r2,0(r3)
        return -1;
 402ed38:	00bfffc4 	movi	r2,-1
 402ed3c:	00000c06 	br	402ed70 <write+0xe4>
      }
      return rval;
 402ed40:	e0bffc17 	ldw	r2,-16(fp)
 402ed44:	00000a06 	br	402ed70 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 402ed48:	402ec500 	call	402ec50 <alt_get_errno>
 402ed4c:	1007883a 	mov	r3,r2
 402ed50:	00800344 	movi	r2,13
 402ed54:	18800015 	stw	r2,0(r3)
 402ed58:	00000406 	br	402ed6c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 402ed5c:	402ec500 	call	402ec50 <alt_get_errno>
 402ed60:	1007883a 	mov	r3,r2
 402ed64:	00801444 	movi	r2,81
 402ed68:	18800015 	stw	r2,0(r3)
  }
  return -1;
 402ed6c:	00bfffc4 	movi	r2,-1
}
 402ed70:	e037883a 	mov	sp,fp
 402ed74:	dfc00117 	ldw	ra,4(sp)
 402ed78:	df000017 	ldw	fp,0(sp)
 402ed7c:	dec00204 	addi	sp,sp,8
 402ed80:	f800283a 	ret

0402ed84 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 402ed84:	defffd04 	addi	sp,sp,-12
 402ed88:	dfc00215 	stw	ra,8(sp)
 402ed8c:	df000115 	stw	fp,4(sp)
 402ed90:	df000104 	addi	fp,sp,4
 402ed94:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 402ed98:	d1600904 	addi	r5,gp,-32732
 402ed9c:	e13fff17 	ldw	r4,-4(fp)
 402eda0:	402fcdc0 	call	402fcdc <alt_dev_llist_insert>
}
 402eda4:	e037883a 	mov	sp,fp
 402eda8:	dfc00117 	ldw	ra,4(sp)
 402edac:	df000017 	ldw	fp,0(sp)
 402edb0:	dec00204 	addi	sp,sp,8
 402edb4:	f800283a 	ret

0402edb8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 402edb8:	defffd04 	addi	sp,sp,-12
 402edbc:	dfc00215 	stw	ra,8(sp)
 402edc0:	df000115 	stw	fp,4(sp)
 402edc4:	df000104 	addi	fp,sp,4
 402edc8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 402edcc:	40304a80 	call	40304a8 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 402edd0:	00800044 	movi	r2,1
 402edd4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 402edd8:	0001883a 	nop
 402eddc:	e037883a 	mov	sp,fp
 402ede0:	dfc00117 	ldw	ra,4(sp)
 402ede4:	df000017 	ldw	fp,0(sp)
 402ede8:	dec00204 	addi	sp,sp,8
 402edec:	f800283a 	ret

0402edf0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 402edf0:	defffe04 	addi	sp,sp,-8
 402edf4:	dfc00115 	stw	ra,4(sp)
 402edf8:	df000015 	stw	fp,0(sp)
 402edfc:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
 402ee00:	00810134 	movhi	r2,1028
 402ee04:	10843804 	addi	r2,r2,4320
 402ee08:	d0a02315 	stw	r2,-32628(gp)
 402ee0c:	00817db4 	movhi	r2,1526
 402ee10:	10b84004 	addi	r2,r2,-7936
 402ee14:	d0a02415 	stw	r2,-32624(gp)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 402ee18:	000d883a 	mov	r6,zero
 402ee1c:	000b883a 	mov	r5,zero
 402ee20:	01000034 	movhi	r4,0
 402ee24:	21037f04 	addi	r4,r4,3580
 402ee28:	402efb80 	call	402efb8 <altera_avalon_jtag_uart_init>
 402ee2c:	01000034 	movhi	r4,0
 402ee30:	21037504 	addi	r4,r4,3540
 402ee34:	402ed840 	call	402ed84 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
 402ee38:	0001883a 	nop
}
 402ee3c:	0001883a 	nop
 402ee40:	e037883a 	mov	sp,fp
 402ee44:	dfc00117 	ldw	ra,4(sp)
 402ee48:	df000017 	ldw	fp,0(sp)
 402ee4c:	dec00204 	addi	sp,sp,8
 402ee50:	f800283a 	ret

0402ee54 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 402ee54:	defffa04 	addi	sp,sp,-24
 402ee58:	dfc00515 	stw	ra,20(sp)
 402ee5c:	df000415 	stw	fp,16(sp)
 402ee60:	df000404 	addi	fp,sp,16
 402ee64:	e13ffd15 	stw	r4,-12(fp)
 402ee68:	e17ffe15 	stw	r5,-8(fp)
 402ee6c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402ee70:	e0bffd17 	ldw	r2,-12(fp)
 402ee74:	10800017 	ldw	r2,0(r2)
 402ee78:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 402ee7c:	e0bffc17 	ldw	r2,-16(fp)
 402ee80:	10c00a04 	addi	r3,r2,40
 402ee84:	e0bffd17 	ldw	r2,-12(fp)
 402ee88:	10800217 	ldw	r2,8(r2)
 402ee8c:	100f883a 	mov	r7,r2
 402ee90:	e1bfff17 	ldw	r6,-4(fp)
 402ee94:	e17ffe17 	ldw	r5,-8(fp)
 402ee98:	1809883a 	mov	r4,r3
 402ee9c:	402f47c0 	call	402f47c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 402eea0:	e037883a 	mov	sp,fp
 402eea4:	dfc00117 	ldw	ra,4(sp)
 402eea8:	df000017 	ldw	fp,0(sp)
 402eeac:	dec00204 	addi	sp,sp,8
 402eeb0:	f800283a 	ret

0402eeb4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 402eeb4:	defffa04 	addi	sp,sp,-24
 402eeb8:	dfc00515 	stw	ra,20(sp)
 402eebc:	df000415 	stw	fp,16(sp)
 402eec0:	df000404 	addi	fp,sp,16
 402eec4:	e13ffd15 	stw	r4,-12(fp)
 402eec8:	e17ffe15 	stw	r5,-8(fp)
 402eecc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402eed0:	e0bffd17 	ldw	r2,-12(fp)
 402eed4:	10800017 	ldw	r2,0(r2)
 402eed8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 402eedc:	e0bffc17 	ldw	r2,-16(fp)
 402eee0:	10c00a04 	addi	r3,r2,40
 402eee4:	e0bffd17 	ldw	r2,-12(fp)
 402eee8:	10800217 	ldw	r2,8(r2)
 402eeec:	100f883a 	mov	r7,r2
 402eef0:	e1bfff17 	ldw	r6,-4(fp)
 402eef4:	e17ffe17 	ldw	r5,-8(fp)
 402eef8:	1809883a 	mov	r4,r3
 402eefc:	402f6980 	call	402f698 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 402ef00:	e037883a 	mov	sp,fp
 402ef04:	dfc00117 	ldw	ra,4(sp)
 402ef08:	df000017 	ldw	fp,0(sp)
 402ef0c:	dec00204 	addi	sp,sp,8
 402ef10:	f800283a 	ret

0402ef14 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 402ef14:	defffc04 	addi	sp,sp,-16
 402ef18:	dfc00315 	stw	ra,12(sp)
 402ef1c:	df000215 	stw	fp,8(sp)
 402ef20:	df000204 	addi	fp,sp,8
 402ef24:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 402ef28:	e0bfff17 	ldw	r2,-4(fp)
 402ef2c:	10800017 	ldw	r2,0(r2)
 402ef30:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 402ef34:	e0bffe17 	ldw	r2,-8(fp)
 402ef38:	10c00a04 	addi	r3,r2,40
 402ef3c:	e0bfff17 	ldw	r2,-4(fp)
 402ef40:	10800217 	ldw	r2,8(r2)
 402ef44:	100b883a 	mov	r5,r2
 402ef48:	1809883a 	mov	r4,r3
 402ef4c:	402f3240 	call	402f324 <altera_avalon_jtag_uart_close>
}
 402ef50:	e037883a 	mov	sp,fp
 402ef54:	dfc00117 	ldw	ra,4(sp)
 402ef58:	df000017 	ldw	fp,0(sp)
 402ef5c:	dec00204 	addi	sp,sp,8
 402ef60:	f800283a 	ret

0402ef64 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 402ef64:	defffa04 	addi	sp,sp,-24
 402ef68:	dfc00515 	stw	ra,20(sp)
 402ef6c:	df000415 	stw	fp,16(sp)
 402ef70:	df000404 	addi	fp,sp,16
 402ef74:	e13ffd15 	stw	r4,-12(fp)
 402ef78:	e17ffe15 	stw	r5,-8(fp)
 402ef7c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 402ef80:	e0bffd17 	ldw	r2,-12(fp)
 402ef84:	10800017 	ldw	r2,0(r2)
 402ef88:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 402ef8c:	e0bffc17 	ldw	r2,-16(fp)
 402ef90:	10800a04 	addi	r2,r2,40
 402ef94:	e1bfff17 	ldw	r6,-4(fp)
 402ef98:	e17ffe17 	ldw	r5,-8(fp)
 402ef9c:	1009883a 	mov	r4,r2
 402efa0:	402f38c0 	call	402f38c <altera_avalon_jtag_uart_ioctl>
}
 402efa4:	e037883a 	mov	sp,fp
 402efa8:	dfc00117 	ldw	ra,4(sp)
 402efac:	df000017 	ldw	fp,0(sp)
 402efb0:	dec00204 	addi	sp,sp,8
 402efb4:	f800283a 	ret

0402efb8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 402efb8:	defffa04 	addi	sp,sp,-24
 402efbc:	dfc00515 	stw	ra,20(sp)
 402efc0:	df000415 	stw	fp,16(sp)
 402efc4:	df000404 	addi	fp,sp,16
 402efc8:	e13ffd15 	stw	r4,-12(fp)
 402efcc:	e17ffe15 	stw	r5,-8(fp)
 402efd0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402efd4:	e0bffd17 	ldw	r2,-12(fp)
 402efd8:	00c00044 	movi	r3,1
 402efdc:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 402efe0:	e0bffd17 	ldw	r2,-12(fp)
 402efe4:	10800017 	ldw	r2,0(r2)
 402efe8:	10800104 	addi	r2,r2,4
 402efec:	1007883a 	mov	r3,r2
 402eff0:	e0bffd17 	ldw	r2,-12(fp)
 402eff4:	10800817 	ldw	r2,32(r2)
 402eff8:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 402effc:	e0bffe17 	ldw	r2,-8(fp)
 402f000:	e0ffff17 	ldw	r3,-4(fp)
 402f004:	d8000015 	stw	zero,0(sp)
 402f008:	e1fffd17 	ldw	r7,-12(fp)
 402f00c:	018100f4 	movhi	r6,1027
 402f010:	31bc1e04 	addi	r6,r6,-3976
 402f014:	180b883a 	mov	r5,r3
 402f018:	1009883a 	mov	r4,r2
 402f01c:	402fe740 	call	402fe74 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 402f020:	e0bffd17 	ldw	r2,-12(fp)
 402f024:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 402f028:	e0bffd17 	ldw	r2,-12(fp)
 402f02c:	10800204 	addi	r2,r2,8
 402f030:	d0e02117 	ldw	r3,-32636(gp)
 402f034:	e1fffd17 	ldw	r7,-12(fp)
 402f038:	018100f4 	movhi	r6,1027
 402f03c:	31bca104 	addi	r6,r6,-3452
 402f040:	180b883a 	mov	r5,r3
 402f044:	1009883a 	mov	r4,r2
 402f048:	402f9d40 	call	402f9d4 <alt_alarm_start>
 402f04c:	1000040e 	bge	r2,zero,402f060 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 402f050:	e0fffd17 	ldw	r3,-12(fp)
 402f054:	00a00034 	movhi	r2,32768
 402f058:	10bfffc4 	addi	r2,r2,-1
 402f05c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 402f060:	0001883a 	nop
 402f064:	e037883a 	mov	sp,fp
 402f068:	dfc00117 	ldw	ra,4(sp)
 402f06c:	df000017 	ldw	fp,0(sp)
 402f070:	dec00204 	addi	sp,sp,8
 402f074:	f800283a 	ret

0402f078 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 402f078:	defff804 	addi	sp,sp,-32
 402f07c:	df000715 	stw	fp,28(sp)
 402f080:	df000704 	addi	fp,sp,28
 402f084:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 402f088:	e0bfff17 	ldw	r2,-4(fp)
 402f08c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 402f090:	e0bffb17 	ldw	r2,-20(fp)
 402f094:	10800017 	ldw	r2,0(r2)
 402f098:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402f09c:	e0bffc17 	ldw	r2,-16(fp)
 402f0a0:	10800104 	addi	r2,r2,4
 402f0a4:	10800037 	ldwio	r2,0(r2)
 402f0a8:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 402f0ac:	e0bffd17 	ldw	r2,-12(fp)
 402f0b0:	1080c00c 	andi	r2,r2,768
 402f0b4:	10006d26 	beq	r2,zero,402f26c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 402f0b8:	e0bffd17 	ldw	r2,-12(fp)
 402f0bc:	1080400c 	andi	r2,r2,256
 402f0c0:	10003526 	beq	r2,zero,402f198 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 402f0c4:	00800074 	movhi	r2,1
 402f0c8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402f0cc:	e0bffb17 	ldw	r2,-20(fp)
 402f0d0:	10800a17 	ldw	r2,40(r2)
 402f0d4:	10800044 	addi	r2,r2,1
 402f0d8:	1081ffcc 	andi	r2,r2,2047
 402f0dc:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 402f0e0:	e0bffb17 	ldw	r2,-20(fp)
 402f0e4:	10c00b17 	ldw	r3,44(r2)
 402f0e8:	e0bffe17 	ldw	r2,-8(fp)
 402f0ec:	18801526 	beq	r3,r2,402f144 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 402f0f0:	e0bffc17 	ldw	r2,-16(fp)
 402f0f4:	10800037 	ldwio	r2,0(r2)
 402f0f8:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 402f0fc:	e0bff917 	ldw	r2,-28(fp)
 402f100:	10a0000c 	andi	r2,r2,32768
 402f104:	10001126 	beq	r2,zero,402f14c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 402f108:	e0bffb17 	ldw	r2,-20(fp)
 402f10c:	10800a17 	ldw	r2,40(r2)
 402f110:	e0fff917 	ldw	r3,-28(fp)
 402f114:	1809883a 	mov	r4,r3
 402f118:	e0fffb17 	ldw	r3,-20(fp)
 402f11c:	1885883a 	add	r2,r3,r2
 402f120:	10800e04 	addi	r2,r2,56
 402f124:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402f128:	e0bffb17 	ldw	r2,-20(fp)
 402f12c:	10800a17 	ldw	r2,40(r2)
 402f130:	10800044 	addi	r2,r2,1
 402f134:	10c1ffcc 	andi	r3,r2,2047
 402f138:	e0bffb17 	ldw	r2,-20(fp)
 402f13c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 402f140:	003fe206 	br	402f0cc <__flash_rwdata_start+0xffffe1a4>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 402f144:	0001883a 	nop
 402f148:	00000106 	br	402f150 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 402f14c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 402f150:	e0bff917 	ldw	r2,-28(fp)
 402f154:	10bfffec 	andhi	r2,r2,65535
 402f158:	10000f26 	beq	r2,zero,402f198 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402f15c:	e0bffb17 	ldw	r2,-20(fp)
 402f160:	10c00817 	ldw	r3,32(r2)
 402f164:	00bfff84 	movi	r2,-2
 402f168:	1886703a 	and	r3,r3,r2
 402f16c:	e0bffb17 	ldw	r2,-20(fp)
 402f170:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 402f174:	e0bffc17 	ldw	r2,-16(fp)
 402f178:	10800104 	addi	r2,r2,4
 402f17c:	1007883a 	mov	r3,r2
 402f180:	e0bffb17 	ldw	r2,-20(fp)
 402f184:	10800817 	ldw	r2,32(r2)
 402f188:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402f18c:	e0bffc17 	ldw	r2,-16(fp)
 402f190:	10800104 	addi	r2,r2,4
 402f194:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 402f198:	e0bffd17 	ldw	r2,-12(fp)
 402f19c:	1080800c 	andi	r2,r2,512
 402f1a0:	103fbe26 	beq	r2,zero,402f09c <__flash_rwdata_start+0xffffe174>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 402f1a4:	e0bffd17 	ldw	r2,-12(fp)
 402f1a8:	1004d43a 	srli	r2,r2,16
 402f1ac:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 402f1b0:	00001406 	br	402f204 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 402f1b4:	e0bffc17 	ldw	r2,-16(fp)
 402f1b8:	e0fffb17 	ldw	r3,-20(fp)
 402f1bc:	18c00d17 	ldw	r3,52(r3)
 402f1c0:	e13ffb17 	ldw	r4,-20(fp)
 402f1c4:	20c7883a 	add	r3,r4,r3
 402f1c8:	18c20e04 	addi	r3,r3,2104
 402f1cc:	18c00003 	ldbu	r3,0(r3)
 402f1d0:	18c03fcc 	andi	r3,r3,255
 402f1d4:	18c0201c 	xori	r3,r3,128
 402f1d8:	18ffe004 	addi	r3,r3,-128
 402f1dc:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402f1e0:	e0bffb17 	ldw	r2,-20(fp)
 402f1e4:	10800d17 	ldw	r2,52(r2)
 402f1e8:	10800044 	addi	r2,r2,1
 402f1ec:	10c1ffcc 	andi	r3,r2,2047
 402f1f0:	e0bffb17 	ldw	r2,-20(fp)
 402f1f4:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 402f1f8:	e0bffa17 	ldw	r2,-24(fp)
 402f1fc:	10bfffc4 	addi	r2,r2,-1
 402f200:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 402f204:	e0bffa17 	ldw	r2,-24(fp)
 402f208:	10000526 	beq	r2,zero,402f220 <altera_avalon_jtag_uart_irq+0x1a8>
 402f20c:	e0bffb17 	ldw	r2,-20(fp)
 402f210:	10c00d17 	ldw	r3,52(r2)
 402f214:	e0bffb17 	ldw	r2,-20(fp)
 402f218:	10800c17 	ldw	r2,48(r2)
 402f21c:	18bfe51e 	bne	r3,r2,402f1b4 <__flash_rwdata_start+0xffffe28c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 402f220:	e0bffa17 	ldw	r2,-24(fp)
 402f224:	103f9d26 	beq	r2,zero,402f09c <__flash_rwdata_start+0xffffe174>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 402f228:	e0bffb17 	ldw	r2,-20(fp)
 402f22c:	10c00817 	ldw	r3,32(r2)
 402f230:	00bfff44 	movi	r2,-3
 402f234:	1886703a 	and	r3,r3,r2
 402f238:	e0bffb17 	ldw	r2,-20(fp)
 402f23c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402f240:	e0bffb17 	ldw	r2,-20(fp)
 402f244:	10800017 	ldw	r2,0(r2)
 402f248:	10800104 	addi	r2,r2,4
 402f24c:	1007883a 	mov	r3,r2
 402f250:	e0bffb17 	ldw	r2,-20(fp)
 402f254:	10800817 	ldw	r2,32(r2)
 402f258:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 402f25c:	e0bffc17 	ldw	r2,-16(fp)
 402f260:	10800104 	addi	r2,r2,4
 402f264:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 402f268:	003f8c06 	br	402f09c <__flash_rwdata_start+0xffffe174>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 402f26c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 402f270:	0001883a 	nop
 402f274:	e037883a 	mov	sp,fp
 402f278:	df000017 	ldw	fp,0(sp)
 402f27c:	dec00104 	addi	sp,sp,4
 402f280:	f800283a 	ret

0402f284 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 402f284:	defff804 	addi	sp,sp,-32
 402f288:	df000715 	stw	fp,28(sp)
 402f28c:	df000704 	addi	fp,sp,28
 402f290:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 402f294:	e0bffb17 	ldw	r2,-20(fp)
 402f298:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 402f29c:	e0bff917 	ldw	r2,-28(fp)
 402f2a0:	10800017 	ldw	r2,0(r2)
 402f2a4:	10800104 	addi	r2,r2,4
 402f2a8:	10800037 	ldwio	r2,0(r2)
 402f2ac:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 402f2b0:	e0bffa17 	ldw	r2,-24(fp)
 402f2b4:	1081000c 	andi	r2,r2,1024
 402f2b8:	10000b26 	beq	r2,zero,402f2e8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 402f2bc:	e0bff917 	ldw	r2,-28(fp)
 402f2c0:	10800017 	ldw	r2,0(r2)
 402f2c4:	10800104 	addi	r2,r2,4
 402f2c8:	1007883a 	mov	r3,r2
 402f2cc:	e0bff917 	ldw	r2,-28(fp)
 402f2d0:	10800817 	ldw	r2,32(r2)
 402f2d4:	10810014 	ori	r2,r2,1024
 402f2d8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 402f2dc:	e0bff917 	ldw	r2,-28(fp)
 402f2e0:	10000915 	stw	zero,36(r2)
 402f2e4:	00000a06 	br	402f310 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 402f2e8:	e0bff917 	ldw	r2,-28(fp)
 402f2ec:	10c00917 	ldw	r3,36(r2)
 402f2f0:	00a00034 	movhi	r2,32768
 402f2f4:	10bfff04 	addi	r2,r2,-4
 402f2f8:	10c00536 	bltu	r2,r3,402f310 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 402f2fc:	e0bff917 	ldw	r2,-28(fp)
 402f300:	10800917 	ldw	r2,36(r2)
 402f304:	10c00044 	addi	r3,r2,1
 402f308:	e0bff917 	ldw	r2,-28(fp)
 402f30c:	10c00915 	stw	r3,36(r2)
 402f310:	d0a02117 	ldw	r2,-32636(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 402f314:	e037883a 	mov	sp,fp
 402f318:	df000017 	ldw	fp,0(sp)
 402f31c:	dec00104 	addi	sp,sp,4
 402f320:	f800283a 	ret

0402f324 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 402f324:	defffd04 	addi	sp,sp,-12
 402f328:	df000215 	stw	fp,8(sp)
 402f32c:	df000204 	addi	fp,sp,8
 402f330:	e13ffe15 	stw	r4,-8(fp)
 402f334:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 402f338:	00000506 	br	402f350 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 402f33c:	e0bfff17 	ldw	r2,-4(fp)
 402f340:	1090000c 	andi	r2,r2,16384
 402f344:	10000226 	beq	r2,zero,402f350 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 402f348:	00bffd44 	movi	r2,-11
 402f34c:	00000b06 	br	402f37c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 402f350:	e0bffe17 	ldw	r2,-8(fp)
 402f354:	10c00d17 	ldw	r3,52(r2)
 402f358:	e0bffe17 	ldw	r2,-8(fp)
 402f35c:	10800c17 	ldw	r2,48(r2)
 402f360:	18800526 	beq	r3,r2,402f378 <altera_avalon_jtag_uart_close+0x54>
 402f364:	e0bffe17 	ldw	r2,-8(fp)
 402f368:	10c00917 	ldw	r3,36(r2)
 402f36c:	e0bffe17 	ldw	r2,-8(fp)
 402f370:	10800117 	ldw	r2,4(r2)
 402f374:	18bff136 	bltu	r3,r2,402f33c <__flash_rwdata_start+0xffffe414>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 402f378:	0005883a 	mov	r2,zero
}
 402f37c:	e037883a 	mov	sp,fp
 402f380:	df000017 	ldw	fp,0(sp)
 402f384:	dec00104 	addi	sp,sp,4
 402f388:	f800283a 	ret

0402f38c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 402f38c:	defffa04 	addi	sp,sp,-24
 402f390:	df000515 	stw	fp,20(sp)
 402f394:	df000504 	addi	fp,sp,20
 402f398:	e13ffd15 	stw	r4,-12(fp)
 402f39c:	e17ffe15 	stw	r5,-8(fp)
 402f3a0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 402f3a4:	00bff9c4 	movi	r2,-25
 402f3a8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 402f3ac:	e0bffe17 	ldw	r2,-8(fp)
 402f3b0:	10da8060 	cmpeqi	r3,r2,27137
 402f3b4:	1800031e 	bne	r3,zero,402f3c4 <altera_avalon_jtag_uart_ioctl+0x38>
 402f3b8:	109a80a0 	cmpeqi	r2,r2,27138
 402f3bc:	1000181e 	bne	r2,zero,402f420 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 402f3c0:	00002906 	br	402f468 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 402f3c4:	e0bffd17 	ldw	r2,-12(fp)
 402f3c8:	10c00117 	ldw	r3,4(r2)
 402f3cc:	00a00034 	movhi	r2,32768
 402f3d0:	10bfffc4 	addi	r2,r2,-1
 402f3d4:	18802126 	beq	r3,r2,402f45c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 402f3d8:	e0bfff17 	ldw	r2,-4(fp)
 402f3dc:	10800017 	ldw	r2,0(r2)
 402f3e0:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 402f3e4:	e0bffc17 	ldw	r2,-16(fp)
 402f3e8:	10800090 	cmplti	r2,r2,2
 402f3ec:	1000061e 	bne	r2,zero,402f408 <altera_avalon_jtag_uart_ioctl+0x7c>
 402f3f0:	e0fffc17 	ldw	r3,-16(fp)
 402f3f4:	00a00034 	movhi	r2,32768
 402f3f8:	10bfffc4 	addi	r2,r2,-1
 402f3fc:	18800226 	beq	r3,r2,402f408 <altera_avalon_jtag_uart_ioctl+0x7c>
 402f400:	e0bffc17 	ldw	r2,-16(fp)
 402f404:	00000206 	br	402f410 <altera_avalon_jtag_uart_ioctl+0x84>
 402f408:	00a00034 	movhi	r2,32768
 402f40c:	10bfff84 	addi	r2,r2,-2
 402f410:	e0fffd17 	ldw	r3,-12(fp)
 402f414:	18800115 	stw	r2,4(r3)
      rc = 0;
 402f418:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 402f41c:	00000f06 	br	402f45c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 402f420:	e0bffd17 	ldw	r2,-12(fp)
 402f424:	10c00117 	ldw	r3,4(r2)
 402f428:	00a00034 	movhi	r2,32768
 402f42c:	10bfffc4 	addi	r2,r2,-1
 402f430:	18800c26 	beq	r3,r2,402f464 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 402f434:	e0bffd17 	ldw	r2,-12(fp)
 402f438:	10c00917 	ldw	r3,36(r2)
 402f43c:	e0bffd17 	ldw	r2,-12(fp)
 402f440:	10800117 	ldw	r2,4(r2)
 402f444:	1885803a 	cmpltu	r2,r3,r2
 402f448:	10c03fcc 	andi	r3,r2,255
 402f44c:	e0bfff17 	ldw	r2,-4(fp)
 402f450:	10c00015 	stw	r3,0(r2)
      rc = 0;
 402f454:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 402f458:	00000206 	br	402f464 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 402f45c:	0001883a 	nop
 402f460:	00000106 	br	402f468 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 402f464:	0001883a 	nop

  default:
    break;
  }

  return rc;
 402f468:	e0bffb17 	ldw	r2,-20(fp)
}
 402f46c:	e037883a 	mov	sp,fp
 402f470:	df000017 	ldw	fp,0(sp)
 402f474:	dec00104 	addi	sp,sp,4
 402f478:	f800283a 	ret

0402f47c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 402f47c:	defff304 	addi	sp,sp,-52
 402f480:	dfc00c15 	stw	ra,48(sp)
 402f484:	df000b15 	stw	fp,44(sp)
 402f488:	df000b04 	addi	fp,sp,44
 402f48c:	e13ffc15 	stw	r4,-16(fp)
 402f490:	e17ffd15 	stw	r5,-12(fp)
 402f494:	e1bffe15 	stw	r6,-8(fp)
 402f498:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 402f49c:	e0bffd17 	ldw	r2,-12(fp)
 402f4a0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 402f4a4:	00004706 	br	402f5c4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 402f4a8:	e0bffc17 	ldw	r2,-16(fp)
 402f4ac:	10800a17 	ldw	r2,40(r2)
 402f4b0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 402f4b4:	e0bffc17 	ldw	r2,-16(fp)
 402f4b8:	10800b17 	ldw	r2,44(r2)
 402f4bc:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 402f4c0:	e0fff717 	ldw	r3,-36(fp)
 402f4c4:	e0bff817 	ldw	r2,-32(fp)
 402f4c8:	18800536 	bltu	r3,r2,402f4e0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 402f4cc:	e0fff717 	ldw	r3,-36(fp)
 402f4d0:	e0bff817 	ldw	r2,-32(fp)
 402f4d4:	1885c83a 	sub	r2,r3,r2
 402f4d8:	e0bff615 	stw	r2,-40(fp)
 402f4dc:	00000406 	br	402f4f0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 402f4e0:	00c20004 	movi	r3,2048
 402f4e4:	e0bff817 	ldw	r2,-32(fp)
 402f4e8:	1885c83a 	sub	r2,r3,r2
 402f4ec:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 402f4f0:	e0bff617 	ldw	r2,-40(fp)
 402f4f4:	10001e26 	beq	r2,zero,402f570 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 402f4f8:	e0fffe17 	ldw	r3,-8(fp)
 402f4fc:	e0bff617 	ldw	r2,-40(fp)
 402f500:	1880022e 	bgeu	r3,r2,402f50c <altera_avalon_jtag_uart_read+0x90>
        n = space;
 402f504:	e0bffe17 	ldw	r2,-8(fp)
 402f508:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 402f50c:	e0bffc17 	ldw	r2,-16(fp)
 402f510:	10c00e04 	addi	r3,r2,56
 402f514:	e0bff817 	ldw	r2,-32(fp)
 402f518:	1885883a 	add	r2,r3,r2
 402f51c:	e1bff617 	ldw	r6,-40(fp)
 402f520:	100b883a 	mov	r5,r2
 402f524:	e13ff517 	ldw	r4,-44(fp)
 402f528:	402982c0 	call	402982c <memcpy>
      ptr   += n;
 402f52c:	e0fff517 	ldw	r3,-44(fp)
 402f530:	e0bff617 	ldw	r2,-40(fp)
 402f534:	1885883a 	add	r2,r3,r2
 402f538:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 402f53c:	e0fffe17 	ldw	r3,-8(fp)
 402f540:	e0bff617 	ldw	r2,-40(fp)
 402f544:	1885c83a 	sub	r2,r3,r2
 402f548:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402f54c:	e0fff817 	ldw	r3,-32(fp)
 402f550:	e0bff617 	ldw	r2,-40(fp)
 402f554:	1885883a 	add	r2,r3,r2
 402f558:	10c1ffcc 	andi	r3,r2,2047
 402f55c:	e0bffc17 	ldw	r2,-16(fp)
 402f560:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 402f564:	e0bffe17 	ldw	r2,-8(fp)
 402f568:	00bfcf16 	blt	zero,r2,402f4a8 <__flash_rwdata_start+0xffffe580>
 402f56c:	00000106 	br	402f574 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 402f570:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 402f574:	e0fff517 	ldw	r3,-44(fp)
 402f578:	e0bffd17 	ldw	r2,-12(fp)
 402f57c:	1880141e 	bne	r3,r2,402f5d0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 402f580:	e0bfff17 	ldw	r2,-4(fp)
 402f584:	1090000c 	andi	r2,r2,16384
 402f588:	1000131e 	bne	r2,zero,402f5d8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 402f58c:	0001883a 	nop
 402f590:	e0bffc17 	ldw	r2,-16(fp)
 402f594:	10c00a17 	ldw	r3,40(r2)
 402f598:	e0bff717 	ldw	r2,-36(fp)
 402f59c:	1880051e 	bne	r3,r2,402f5b4 <altera_avalon_jtag_uart_read+0x138>
 402f5a0:	e0bffc17 	ldw	r2,-16(fp)
 402f5a4:	10c00917 	ldw	r3,36(r2)
 402f5a8:	e0bffc17 	ldw	r2,-16(fp)
 402f5ac:	10800117 	ldw	r2,4(r2)
 402f5b0:	18bff736 	bltu	r3,r2,402f590 <__flash_rwdata_start+0xffffe668>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 402f5b4:	e0bffc17 	ldw	r2,-16(fp)
 402f5b8:	10c00a17 	ldw	r3,40(r2)
 402f5bc:	e0bff717 	ldw	r2,-36(fp)
 402f5c0:	18800726 	beq	r3,r2,402f5e0 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 402f5c4:	e0bffe17 	ldw	r2,-8(fp)
 402f5c8:	00bfb716 	blt	zero,r2,402f4a8 <__flash_rwdata_start+0xffffe580>
 402f5cc:	00000506 	br	402f5e4 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 402f5d0:	0001883a 	nop
 402f5d4:	00000306 	br	402f5e4 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 402f5d8:	0001883a 	nop
 402f5dc:	00000106 	br	402f5e4 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 402f5e0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 402f5e4:	e0fff517 	ldw	r3,-44(fp)
 402f5e8:	e0bffd17 	ldw	r2,-12(fp)
 402f5ec:	18801826 	beq	r3,r2,402f650 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f5f0:	0005303a 	rdctl	r2,status
 402f5f4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f5f8:	e0fffb17 	ldw	r3,-20(fp)
 402f5fc:	00bfff84 	movi	r2,-2
 402f600:	1884703a 	and	r2,r3,r2
 402f604:	1001703a 	wrctl	status,r2
  
  return context;
 402f608:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 402f60c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 402f610:	e0bffc17 	ldw	r2,-16(fp)
 402f614:	10800817 	ldw	r2,32(r2)
 402f618:	10c00054 	ori	r3,r2,1
 402f61c:	e0bffc17 	ldw	r2,-16(fp)
 402f620:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402f624:	e0bffc17 	ldw	r2,-16(fp)
 402f628:	10800017 	ldw	r2,0(r2)
 402f62c:	10800104 	addi	r2,r2,4
 402f630:	1007883a 	mov	r3,r2
 402f634:	e0bffc17 	ldw	r2,-16(fp)
 402f638:	10800817 	ldw	r2,32(r2)
 402f63c:	18800035 	stwio	r2,0(r3)
 402f640:	e0bffa17 	ldw	r2,-24(fp)
 402f644:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f648:	e0bff917 	ldw	r2,-28(fp)
 402f64c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 402f650:	e0fff517 	ldw	r3,-44(fp)
 402f654:	e0bffd17 	ldw	r2,-12(fp)
 402f658:	18800426 	beq	r3,r2,402f66c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 402f65c:	e0fff517 	ldw	r3,-44(fp)
 402f660:	e0bffd17 	ldw	r2,-12(fp)
 402f664:	1885c83a 	sub	r2,r3,r2
 402f668:	00000606 	br	402f684 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 402f66c:	e0bfff17 	ldw	r2,-4(fp)
 402f670:	1090000c 	andi	r2,r2,16384
 402f674:	10000226 	beq	r2,zero,402f680 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 402f678:	00bffd44 	movi	r2,-11
 402f67c:	00000106 	br	402f684 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 402f680:	00bffec4 	movi	r2,-5
}
 402f684:	e037883a 	mov	sp,fp
 402f688:	dfc00117 	ldw	ra,4(sp)
 402f68c:	df000017 	ldw	fp,0(sp)
 402f690:	dec00204 	addi	sp,sp,8
 402f694:	f800283a 	ret

0402f698 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 402f698:	defff304 	addi	sp,sp,-52
 402f69c:	dfc00c15 	stw	ra,48(sp)
 402f6a0:	df000b15 	stw	fp,44(sp)
 402f6a4:	df000b04 	addi	fp,sp,44
 402f6a8:	e13ffc15 	stw	r4,-16(fp)
 402f6ac:	e17ffd15 	stw	r5,-12(fp)
 402f6b0:	e1bffe15 	stw	r6,-8(fp)
 402f6b4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 402f6b8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 402f6bc:	e0bffd17 	ldw	r2,-12(fp)
 402f6c0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 402f6c4:	00003706 	br	402f7a4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 402f6c8:	e0bffc17 	ldw	r2,-16(fp)
 402f6cc:	10800c17 	ldw	r2,48(r2)
 402f6d0:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 402f6d4:	e0bffc17 	ldw	r2,-16(fp)
 402f6d8:	10800d17 	ldw	r2,52(r2)
 402f6dc:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 402f6e0:	e0fff917 	ldw	r3,-28(fp)
 402f6e4:	e0bff517 	ldw	r2,-44(fp)
 402f6e8:	1880062e 	bgeu	r3,r2,402f704 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 402f6ec:	e0fff517 	ldw	r3,-44(fp)
 402f6f0:	e0bff917 	ldw	r2,-28(fp)
 402f6f4:	1885c83a 	sub	r2,r3,r2
 402f6f8:	10bfffc4 	addi	r2,r2,-1
 402f6fc:	e0bff615 	stw	r2,-40(fp)
 402f700:	00000b06 	br	402f730 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 402f704:	e0bff517 	ldw	r2,-44(fp)
 402f708:	10000526 	beq	r2,zero,402f720 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 402f70c:	00c20004 	movi	r3,2048
 402f710:	e0bff917 	ldw	r2,-28(fp)
 402f714:	1885c83a 	sub	r2,r3,r2
 402f718:	e0bff615 	stw	r2,-40(fp)
 402f71c:	00000406 	br	402f730 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 402f720:	00c1ffc4 	movi	r3,2047
 402f724:	e0bff917 	ldw	r2,-28(fp)
 402f728:	1885c83a 	sub	r2,r3,r2
 402f72c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 402f730:	e0bff617 	ldw	r2,-40(fp)
 402f734:	10001e26 	beq	r2,zero,402f7b0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 402f738:	e0fffe17 	ldw	r3,-8(fp)
 402f73c:	e0bff617 	ldw	r2,-40(fp)
 402f740:	1880022e 	bgeu	r3,r2,402f74c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 402f744:	e0bffe17 	ldw	r2,-8(fp)
 402f748:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 402f74c:	e0bffc17 	ldw	r2,-16(fp)
 402f750:	10c20e04 	addi	r3,r2,2104
 402f754:	e0bff917 	ldw	r2,-28(fp)
 402f758:	1885883a 	add	r2,r3,r2
 402f75c:	e1bff617 	ldw	r6,-40(fp)
 402f760:	e17ffd17 	ldw	r5,-12(fp)
 402f764:	1009883a 	mov	r4,r2
 402f768:	402982c0 	call	402982c <memcpy>
      ptr   += n;
 402f76c:	e0fffd17 	ldw	r3,-12(fp)
 402f770:	e0bff617 	ldw	r2,-40(fp)
 402f774:	1885883a 	add	r2,r3,r2
 402f778:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 402f77c:	e0fffe17 	ldw	r3,-8(fp)
 402f780:	e0bff617 	ldw	r2,-40(fp)
 402f784:	1885c83a 	sub	r2,r3,r2
 402f788:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 402f78c:	e0fff917 	ldw	r3,-28(fp)
 402f790:	e0bff617 	ldw	r2,-40(fp)
 402f794:	1885883a 	add	r2,r3,r2
 402f798:	10c1ffcc 	andi	r3,r2,2047
 402f79c:	e0bffc17 	ldw	r2,-16(fp)
 402f7a0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 402f7a4:	e0bffe17 	ldw	r2,-8(fp)
 402f7a8:	00bfc716 	blt	zero,r2,402f6c8 <__flash_rwdata_start+0xffffe7a0>
 402f7ac:	00000106 	br	402f7b4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 402f7b0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402f7b4:	0005303a 	rdctl	r2,status
 402f7b8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402f7bc:	e0fffb17 	ldw	r3,-20(fp)
 402f7c0:	00bfff84 	movi	r2,-2
 402f7c4:	1884703a 	and	r2,r3,r2
 402f7c8:	1001703a 	wrctl	status,r2
  
  return context;
 402f7cc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 402f7d0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 402f7d4:	e0bffc17 	ldw	r2,-16(fp)
 402f7d8:	10800817 	ldw	r2,32(r2)
 402f7dc:	10c00094 	ori	r3,r2,2
 402f7e0:	e0bffc17 	ldw	r2,-16(fp)
 402f7e4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 402f7e8:	e0bffc17 	ldw	r2,-16(fp)
 402f7ec:	10800017 	ldw	r2,0(r2)
 402f7f0:	10800104 	addi	r2,r2,4
 402f7f4:	1007883a 	mov	r3,r2
 402f7f8:	e0bffc17 	ldw	r2,-16(fp)
 402f7fc:	10800817 	ldw	r2,32(r2)
 402f800:	18800035 	stwio	r2,0(r3)
 402f804:	e0bffa17 	ldw	r2,-24(fp)
 402f808:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402f80c:	e0bff817 	ldw	r2,-32(fp)
 402f810:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 402f814:	e0bffe17 	ldw	r2,-8(fp)
 402f818:	0080100e 	bge	zero,r2,402f85c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 402f81c:	e0bfff17 	ldw	r2,-4(fp)
 402f820:	1090000c 	andi	r2,r2,16384
 402f824:	1000101e 	bne	r2,zero,402f868 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 402f828:	0001883a 	nop
 402f82c:	e0bffc17 	ldw	r2,-16(fp)
 402f830:	10c00d17 	ldw	r3,52(r2)
 402f834:	e0bff517 	ldw	r2,-44(fp)
 402f838:	1880051e 	bne	r3,r2,402f850 <altera_avalon_jtag_uart_write+0x1b8>
 402f83c:	e0bffc17 	ldw	r2,-16(fp)
 402f840:	10c00917 	ldw	r3,36(r2)
 402f844:	e0bffc17 	ldw	r2,-16(fp)
 402f848:	10800117 	ldw	r2,4(r2)
 402f84c:	18bff736 	bltu	r3,r2,402f82c <__flash_rwdata_start+0xffffe904>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 402f850:	e0bffc17 	ldw	r2,-16(fp)
 402f854:	10800917 	ldw	r2,36(r2)
 402f858:	1000051e 	bne	r2,zero,402f870 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 402f85c:	e0bffe17 	ldw	r2,-8(fp)
 402f860:	00bfd016 	blt	zero,r2,402f7a4 <__flash_rwdata_start+0xffffe87c>
 402f864:	00000306 	br	402f874 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 402f868:	0001883a 	nop
 402f86c:	00000106 	br	402f874 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 402f870:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 402f874:	e0fffd17 	ldw	r3,-12(fp)
 402f878:	e0bff717 	ldw	r2,-36(fp)
 402f87c:	18800426 	beq	r3,r2,402f890 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 402f880:	e0fffd17 	ldw	r3,-12(fp)
 402f884:	e0bff717 	ldw	r2,-36(fp)
 402f888:	1885c83a 	sub	r2,r3,r2
 402f88c:	00000606 	br	402f8a8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 402f890:	e0bfff17 	ldw	r2,-4(fp)
 402f894:	1090000c 	andi	r2,r2,16384
 402f898:	10000226 	beq	r2,zero,402f8a4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 402f89c:	00bffd44 	movi	r2,-11
 402f8a0:	00000106 	br	402f8a8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 402f8a4:	00bffec4 	movi	r2,-5
}
 402f8a8:	e037883a 	mov	sp,fp
 402f8ac:	dfc00117 	ldw	ra,4(sp)
 402f8b0:	df000017 	ldw	fp,0(sp)
 402f8b4:	dec00204 	addi	sp,sp,8
 402f8b8:	f800283a 	ret

0402f8bc <alt_timestamp_start>:
 * The return value of this function is 0 upon sucess and -1 if in timestamp
 * device has not been registered. 
 */

int alt_timestamp_start(void)
{
 402f8bc:	defffe04 	addi	sp,sp,-8
 402f8c0:	df000115 	stw	fp,4(sp)
 402f8c4:	df000104 	addi	fp,sp,4
  void* base = altera_avalon_timer_ts_base;
 402f8c8:	d0a02317 	ldw	r2,-32628(gp)
 402f8cc:	e0bfff15 	stw	r2,-4(fp)

  if (!altera_avalon_timer_ts_freq)
 402f8d0:	d0a02417 	ldw	r2,-32624(gp)
 402f8d4:	1000021e 	bne	r2,zero,402f8e0 <alt_timestamp_start+0x24>
  {
    return -1;
 402f8d8:	00bfffc4 	movi	r2,-1
 402f8dc:	00001106 	br	402f924 <alt_timestamp_start+0x68>
        IOWR_ALTERA_AVALON_TIMER_PERIOD_1 (base, 0xFFFF);;
        IOWR_ALTERA_AVALON_TIMER_PERIOD_2 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_PERIOD_3 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK);
    } else {
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base,ALTERA_AVALON_TIMER_CONTROL_STOP_MSK);
 402f8e0:	e0bfff17 	ldw	r2,-4(fp)
 402f8e4:	10800104 	addi	r2,r2,4
 402f8e8:	00c00204 	movi	r3,8
 402f8ec:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODL (base, 0xFFFF);
 402f8f0:	e0bfff17 	ldw	r2,-4(fp)
 402f8f4:	10800204 	addi	r2,r2,8
 402f8f8:	00ffffd4 	movui	r3,65535
 402f8fc:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODH (base, 0xFFFF);
 402f900:	e0bfff17 	ldw	r2,-4(fp)
 402f904:	10800304 	addi	r2,r2,12
 402f908:	00ffffd4 	movui	r3,65535
 402f90c:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK); 
 402f910:	e0bfff17 	ldw	r2,-4(fp)
 402f914:	10800104 	addi	r2,r2,4
 402f918:	00c00104 	movi	r3,4
 402f91c:	10c00035 	stwio	r3,0(r2)
    } 
  }
  return 0;
 402f920:	0005883a 	mov	r2,zero
}
 402f924:	e037883a 	mov	sp,fp
 402f928:	df000017 	ldw	fp,0(sp)
 402f92c:	dec00104 	addi	sp,sp,4
 402f930:	f800283a 	ret

0402f934 <alt_timestamp>:
 * The returned timestamp counts up from the last time the period register
 * was reset. 
 */

alt_timestamp_type alt_timestamp(void)
{
 402f934:	defffc04 	addi	sp,sp,-16
 402f938:	df000315 	stw	fp,12(sp)
 402f93c:	df000304 	addi	fp,sp,12

  void* base = altera_avalon_timer_ts_base;
 402f940:	d0a02317 	ldw	r2,-32628(gp)
 402f944:	e0bffd15 	stw	r2,-12(fp)

  if (!altera_avalon_timer_ts_freq)
 402f948:	d0a02417 	ldw	r2,-32624(gp)
 402f94c:	1000021e 	bne	r2,zero,402f958 <alt_timestamp+0x24>
  {
#if (ALT_TIMESTAMP_COUNTER_SIZE == 64)
        return 0xFFFFFFFFFFFFFFFFULL;
#else
        return 0xFFFFFFFF;
 402f950:	00bfffc4 	movi	r2,-1
 402f954:	00001306 	br	402f9a4 <alt_timestamp+0x70>
        alt_timestamp_type snap_2 = IORD_ALTERA_AVALON_TIMER_SNAP_2(base) & ALTERA_AVALON_TIMER_SNAP_2_MSK;
        alt_timestamp_type snap_3 = IORD_ALTERA_AVALON_TIMER_SNAP_3(base) & ALTERA_AVALON_TIMER_SNAP_3_MSK;
        
        return (0xFFFFFFFFFFFFFFFFULL - ( (snap_3 << 48) | (snap_2 << 32) | (snap_1 << 16) | (snap_0) ));
#else
        IOWR_ALTERA_AVALON_TIMER_SNAPL (base, 0);
 402f958:	e0bffd17 	ldw	r2,-12(fp)
 402f95c:	10800404 	addi	r2,r2,16
 402f960:	0007883a 	mov	r3,zero
 402f964:	10c00035 	stwio	r3,0(r2)
        alt_timestamp_type lower = IORD_ALTERA_AVALON_TIMER_SNAPL(base) & ALTERA_AVALON_TIMER_SNAPL_MSK;
 402f968:	e0bffd17 	ldw	r2,-12(fp)
 402f96c:	10800404 	addi	r2,r2,16
 402f970:	10800037 	ldwio	r2,0(r2)
 402f974:	10bfffcc 	andi	r2,r2,65535
 402f978:	e0bffe15 	stw	r2,-8(fp)
        alt_timestamp_type upper = IORD_ALTERA_AVALON_TIMER_SNAPH(base) & ALTERA_AVALON_TIMER_SNAPH_MSK;
 402f97c:	e0bffd17 	ldw	r2,-12(fp)
 402f980:	10800504 	addi	r2,r2,20
 402f984:	10800037 	ldwio	r2,0(r2)
 402f988:	10bfffcc 	andi	r2,r2,65535
 402f98c:	e0bfff15 	stw	r2,-4(fp)
        
        return (0xFFFFFFFF - ((upper << 16) | lower)); 
 402f990:	e0bfff17 	ldw	r2,-4(fp)
 402f994:	1006943a 	slli	r3,r2,16
 402f998:	e0bffe17 	ldw	r2,-8(fp)
 402f99c:	1884b03a 	or	r2,r3,r2
 402f9a0:	0084303a 	nor	r2,zero,r2
#endif
  }
}
 402f9a4:	e037883a 	mov	sp,fp
 402f9a8:	df000017 	ldw	fp,0(sp)
 402f9ac:	dec00104 	addi	sp,sp,4
 402f9b0:	f800283a 	ret

0402f9b4 <alt_timestamp_freq>:
 * Return the number of timestamp ticks per second. This will be 0 if no
 * timestamp device has been registered.
 */

alt_u32 alt_timestamp_freq(void)
{
 402f9b4:	deffff04 	addi	sp,sp,-4
 402f9b8:	df000015 	stw	fp,0(sp)
 402f9bc:	d839883a 	mov	fp,sp
  return altera_avalon_timer_ts_freq;
 402f9c0:	d0a02417 	ldw	r2,-32624(gp)
}
 402f9c4:	e037883a 	mov	sp,fp
 402f9c8:	df000017 	ldw	fp,0(sp)
 402f9cc:	dec00104 	addi	sp,sp,4
 402f9d0:	f800283a 	ret

0402f9d4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 402f9d4:	defff504 	addi	sp,sp,-44
 402f9d8:	df000a15 	stw	fp,40(sp)
 402f9dc:	df000a04 	addi	fp,sp,40
 402f9e0:	e13ffc15 	stw	r4,-16(fp)
 402f9e4:	e17ffd15 	stw	r5,-12(fp)
 402f9e8:	e1bffe15 	stw	r6,-8(fp)
 402f9ec:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 402f9f0:	e03ff615 	stw	zero,-40(fp)
 402f9f4:	d0a02117 	ldw	r2,-32636(gp)
  
  if (alt_ticks_per_second ())
 402f9f8:	10003c26 	beq	r2,zero,402faec <alt_alarm_start+0x118>
  {
    if (alarm)
 402f9fc:	e0bffc17 	ldw	r2,-16(fp)
 402fa00:	10003826 	beq	r2,zero,402fae4 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 402fa04:	e0bffc17 	ldw	r2,-16(fp)
 402fa08:	e0fffe17 	ldw	r3,-8(fp)
 402fa0c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 402fa10:	e0bffc17 	ldw	r2,-16(fp)
 402fa14:	e0ffff17 	ldw	r3,-4(fp)
 402fa18:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402fa1c:	0005303a 	rdctl	r2,status
 402fa20:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402fa24:	e0fff917 	ldw	r3,-28(fp)
 402fa28:	00bfff84 	movi	r2,-2
 402fa2c:	1884703a 	and	r2,r3,r2
 402fa30:	1001703a 	wrctl	status,r2
  
  return context;
 402fa34:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 402fa38:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 402fa3c:	d0a02217 	ldw	r2,-32632(gp)
      
      current_nticks = alt_nticks();
 402fa40:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 402fa44:	e0fffd17 	ldw	r3,-12(fp)
 402fa48:	e0bff617 	ldw	r2,-40(fp)
 402fa4c:	1885883a 	add	r2,r3,r2
 402fa50:	10c00044 	addi	r3,r2,1
 402fa54:	e0bffc17 	ldw	r2,-16(fp)
 402fa58:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 402fa5c:	e0bffc17 	ldw	r2,-16(fp)
 402fa60:	10c00217 	ldw	r3,8(r2)
 402fa64:	e0bff617 	ldw	r2,-40(fp)
 402fa68:	1880042e 	bgeu	r3,r2,402fa7c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 402fa6c:	e0bffc17 	ldw	r2,-16(fp)
 402fa70:	00c00044 	movi	r3,1
 402fa74:	10c00405 	stb	r3,16(r2)
 402fa78:	00000206 	br	402fa84 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 402fa7c:	e0bffc17 	ldw	r2,-16(fp)
 402fa80:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 402fa84:	e0bffc17 	ldw	r2,-16(fp)
 402fa88:	d0e00f04 	addi	r3,gp,-32708
 402fa8c:	e0fffa15 	stw	r3,-24(fp)
 402fa90:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 402fa94:	e0bffb17 	ldw	r2,-20(fp)
 402fa98:	e0fffa17 	ldw	r3,-24(fp)
 402fa9c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 402faa0:	e0bffa17 	ldw	r2,-24(fp)
 402faa4:	10c00017 	ldw	r3,0(r2)
 402faa8:	e0bffb17 	ldw	r2,-20(fp)
 402faac:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 402fab0:	e0bffa17 	ldw	r2,-24(fp)
 402fab4:	10800017 	ldw	r2,0(r2)
 402fab8:	e0fffb17 	ldw	r3,-20(fp)
 402fabc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 402fac0:	e0bffa17 	ldw	r2,-24(fp)
 402fac4:	e0fffb17 	ldw	r3,-20(fp)
 402fac8:	10c00015 	stw	r3,0(r2)
 402facc:	e0bff817 	ldw	r2,-32(fp)
 402fad0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402fad4:	e0bff717 	ldw	r2,-36(fp)
 402fad8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 402fadc:	0005883a 	mov	r2,zero
 402fae0:	00000306 	br	402faf0 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 402fae4:	00bffa84 	movi	r2,-22
 402fae8:	00000106 	br	402faf0 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 402faec:	00bfde84 	movi	r2,-134
  }
}
 402faf0:	e037883a 	mov	sp,fp
 402faf4:	df000017 	ldw	fp,0(sp)
 402faf8:	dec00104 	addi	sp,sp,4
 402fafc:	f800283a 	ret

0402fb00 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 402fb00:	defffa04 	addi	sp,sp,-24
 402fb04:	dfc00515 	stw	ra,20(sp)
 402fb08:	df000415 	stw	fp,16(sp)
 402fb0c:	df000404 	addi	fp,sp,16
 402fb10:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
 402fb14:	008000c4 	movi	r2,3
 402fb18:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 402fb1c:	e0fffd17 	ldw	r3,-12(fp)
 402fb20:	008003f4 	movhi	r2,15
 402fb24:	10909004 	addi	r2,r2,16960
 402fb28:	1885383a 	mul	r2,r3,r2
 402fb2c:	100b883a 	mov	r5,r2
 402fb30:	01017db4 	movhi	r4,1526
 402fb34:	21384004 	addi	r4,r4,-7936
 402fb38:	40215ac0 	call	40215ac <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 402fb3c:	100b883a 	mov	r5,r2
 402fb40:	01200034 	movhi	r4,32768
 402fb44:	213fffc4 	addi	r4,r4,-1
 402fb48:	40215ac0 	call	40215ac <__udivsi3>
 402fb4c:	100b883a 	mov	r5,r2
 402fb50:	e13fff17 	ldw	r4,-4(fp)
 402fb54:	40215ac0 	call	40215ac <__udivsi3>
 402fb58:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 402fb5c:	e0bffe17 	ldw	r2,-8(fp)
 402fb60:	10002a26 	beq	r2,zero,402fc0c <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 402fb64:	e03ffc15 	stw	zero,-16(fp)
 402fb68:	00001706 	br	402fbc8 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 402fb6c:	00a00034 	movhi	r2,32768
 402fb70:	10bfffc4 	addi	r2,r2,-1
 402fb74:	10bfffc4 	addi	r2,r2,-1
 402fb78:	103ffe1e 	bne	r2,zero,402fb74 <__flash_rwdata_start+0xffffec4c>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 402fb7c:	e0fffd17 	ldw	r3,-12(fp)
 402fb80:	008003f4 	movhi	r2,15
 402fb84:	10909004 	addi	r2,r2,16960
 402fb88:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 402fb8c:	100b883a 	mov	r5,r2
 402fb90:	01017db4 	movhi	r4,1526
 402fb94:	21384004 	addi	r4,r4,-7936
 402fb98:	40215ac0 	call	40215ac <__udivsi3>
 402fb9c:	100b883a 	mov	r5,r2
 402fba0:	01200034 	movhi	r4,32768
 402fba4:	213fffc4 	addi	r4,r4,-1
 402fba8:	40215ac0 	call	40215ac <__udivsi3>
 402fbac:	1007883a 	mov	r3,r2
 402fbb0:	e0bfff17 	ldw	r2,-4(fp)
 402fbb4:	10c5c83a 	sub	r2,r2,r3
 402fbb8:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 402fbbc:	e0bffc17 	ldw	r2,-16(fp)
 402fbc0:	10800044 	addi	r2,r2,1
 402fbc4:	e0bffc15 	stw	r2,-16(fp)
 402fbc8:	e0fffc17 	ldw	r3,-16(fp)
 402fbcc:	e0bffe17 	ldw	r2,-8(fp)
 402fbd0:	18bfe616 	blt	r3,r2,402fb6c <__flash_rwdata_start+0xffffec44>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 402fbd4:	e0fffd17 	ldw	r3,-12(fp)
 402fbd8:	008003f4 	movhi	r2,15
 402fbdc:	10909004 	addi	r2,r2,16960
 402fbe0:	1885383a 	mul	r2,r3,r2
 402fbe4:	100b883a 	mov	r5,r2
 402fbe8:	01017db4 	movhi	r4,1526
 402fbec:	21384004 	addi	r4,r4,-7936
 402fbf0:	40215ac0 	call	40215ac <__udivsi3>
 402fbf4:	1007883a 	mov	r3,r2
 402fbf8:	e0bfff17 	ldw	r2,-4(fp)
 402fbfc:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 402fc00:	10bfffc4 	addi	r2,r2,-1
 402fc04:	103ffe1e 	bne	r2,zero,402fc00 <__flash_rwdata_start+0xffffecd8>
 402fc08:	00000d06 	br	402fc40 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 402fc0c:	e0fffd17 	ldw	r3,-12(fp)
 402fc10:	008003f4 	movhi	r2,15
 402fc14:	10909004 	addi	r2,r2,16960
 402fc18:	1885383a 	mul	r2,r3,r2
 402fc1c:	100b883a 	mov	r5,r2
 402fc20:	01017db4 	movhi	r4,1526
 402fc24:	21384004 	addi	r4,r4,-7936
 402fc28:	40215ac0 	call	40215ac <__udivsi3>
 402fc2c:	1007883a 	mov	r3,r2
 402fc30:	e0bfff17 	ldw	r2,-4(fp)
 402fc34:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 402fc38:	10bfffc4 	addi	r2,r2,-1
 402fc3c:	00bffe16 	blt	zero,r2,402fc38 <__flash_rwdata_start+0xffffed10>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 402fc40:	0005883a 	mov	r2,zero
}
 402fc44:	e037883a 	mov	sp,fp
 402fc48:	dfc00117 	ldw	ra,4(sp)
 402fc4c:	df000017 	ldw	fp,0(sp)
 402fc50:	dec00204 	addi	sp,sp,8
 402fc54:	f800283a 	ret

0402fc58 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 402fc58:	defffe04 	addi	sp,sp,-8
 402fc5c:	df000115 	stw	fp,4(sp)
 402fc60:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 402fc64:	e03fff15 	stw	zero,-4(fp)
 402fc68:	00000506 	br	402fc80 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 402fc6c:	e0bfff17 	ldw	r2,-4(fp)
 402fc70:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 402fc74:	e0bfff17 	ldw	r2,-4(fp)
 402fc78:	10800804 	addi	r2,r2,32
 402fc7c:	e0bfff15 	stw	r2,-4(fp)
 402fc80:	e0bfff17 	ldw	r2,-4(fp)
 402fc84:	10820030 	cmpltui	r2,r2,2048
 402fc88:	103ff81e 	bne	r2,zero,402fc6c <__flash_rwdata_start+0xffffed44>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 402fc8c:	0001883a 	nop
 402fc90:	e037883a 	mov	sp,fp
 402fc94:	df000017 	ldw	fp,0(sp)
 402fc98:	dec00104 	addi	sp,sp,4
 402fc9c:	f800283a 	ret

0402fca0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 402fca0:	defffe04 	addi	sp,sp,-8
 402fca4:	dfc00115 	stw	ra,4(sp)
 402fca8:	df000015 	stw	fp,0(sp)
 402fcac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 402fcb0:	d0a00c17 	ldw	r2,-32720(gp)
 402fcb4:	10000326 	beq	r2,zero,402fcc4 <alt_get_errno+0x24>
 402fcb8:	d0a00c17 	ldw	r2,-32720(gp)
 402fcbc:	103ee83a 	callr	r2
 402fcc0:	00000106 	br	402fcc8 <alt_get_errno+0x28>
 402fcc4:	d0a01204 	addi	r2,gp,-32696
}
 402fcc8:	e037883a 	mov	sp,fp
 402fccc:	dfc00117 	ldw	ra,4(sp)
 402fcd0:	df000017 	ldw	fp,0(sp)
 402fcd4:	dec00204 	addi	sp,sp,8
 402fcd8:	f800283a 	ret

0402fcdc <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 402fcdc:	defffa04 	addi	sp,sp,-24
 402fce0:	dfc00515 	stw	ra,20(sp)
 402fce4:	df000415 	stw	fp,16(sp)
 402fce8:	df000404 	addi	fp,sp,16
 402fcec:	e13ffe15 	stw	r4,-8(fp)
 402fcf0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 402fcf4:	e0bffe17 	ldw	r2,-8(fp)
 402fcf8:	10000326 	beq	r2,zero,402fd08 <alt_dev_llist_insert+0x2c>
 402fcfc:	e0bffe17 	ldw	r2,-8(fp)
 402fd00:	10800217 	ldw	r2,8(r2)
 402fd04:	1000061e 	bne	r2,zero,402fd20 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 402fd08:	402fca00 	call	402fca0 <alt_get_errno>
 402fd0c:	1007883a 	mov	r3,r2
 402fd10:	00800584 	movi	r2,22
 402fd14:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 402fd18:	00bffa84 	movi	r2,-22
 402fd1c:	00001306 	br	402fd6c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 402fd20:	e0bffe17 	ldw	r2,-8(fp)
 402fd24:	e0ffff17 	ldw	r3,-4(fp)
 402fd28:	e0fffc15 	stw	r3,-16(fp)
 402fd2c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 402fd30:	e0bffd17 	ldw	r2,-12(fp)
 402fd34:	e0fffc17 	ldw	r3,-16(fp)
 402fd38:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 402fd3c:	e0bffc17 	ldw	r2,-16(fp)
 402fd40:	10c00017 	ldw	r3,0(r2)
 402fd44:	e0bffd17 	ldw	r2,-12(fp)
 402fd48:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 402fd4c:	e0bffc17 	ldw	r2,-16(fp)
 402fd50:	10800017 	ldw	r2,0(r2)
 402fd54:	e0fffd17 	ldw	r3,-12(fp)
 402fd58:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 402fd5c:	e0bffc17 	ldw	r2,-16(fp)
 402fd60:	e0fffd17 	ldw	r3,-12(fp)
 402fd64:	10c00015 	stw	r3,0(r2)

  return 0;  
 402fd68:	0005883a 	mov	r2,zero
}
 402fd6c:	e037883a 	mov	sp,fp
 402fd70:	dfc00117 	ldw	ra,4(sp)
 402fd74:	df000017 	ldw	fp,0(sp)
 402fd78:	dec00204 	addi	sp,sp,8
 402fd7c:	f800283a 	ret

0402fd80 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 402fd80:	defffd04 	addi	sp,sp,-12
 402fd84:	dfc00215 	stw	ra,8(sp)
 402fd88:	df000115 	stw	fp,4(sp)
 402fd8c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 402fd90:	008100f4 	movhi	r2,1027
 402fd94:	1082f104 	addi	r2,r2,3012
 402fd98:	e0bfff15 	stw	r2,-4(fp)
 402fd9c:	00000606 	br	402fdb8 <_do_ctors+0x38>
        (*ctor) (); 
 402fda0:	e0bfff17 	ldw	r2,-4(fp)
 402fda4:	10800017 	ldw	r2,0(r2)
 402fda8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 402fdac:	e0bfff17 	ldw	r2,-4(fp)
 402fdb0:	10bfff04 	addi	r2,r2,-4
 402fdb4:	e0bfff15 	stw	r2,-4(fp)
 402fdb8:	e0ffff17 	ldw	r3,-4(fp)
 402fdbc:	008100f4 	movhi	r2,1027
 402fdc0:	1082f204 	addi	r2,r2,3016
 402fdc4:	18bff62e 	bgeu	r3,r2,402fda0 <__flash_rwdata_start+0xffffee78>
        (*ctor) (); 
}
 402fdc8:	0001883a 	nop
 402fdcc:	e037883a 	mov	sp,fp
 402fdd0:	dfc00117 	ldw	ra,4(sp)
 402fdd4:	df000017 	ldw	fp,0(sp)
 402fdd8:	dec00204 	addi	sp,sp,8
 402fddc:	f800283a 	ret

0402fde0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 402fde0:	defffd04 	addi	sp,sp,-12
 402fde4:	dfc00215 	stw	ra,8(sp)
 402fde8:	df000115 	stw	fp,4(sp)
 402fdec:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 402fdf0:	008100f4 	movhi	r2,1027
 402fdf4:	1082f104 	addi	r2,r2,3012
 402fdf8:	e0bfff15 	stw	r2,-4(fp)
 402fdfc:	00000606 	br	402fe18 <_do_dtors+0x38>
        (*dtor) (); 
 402fe00:	e0bfff17 	ldw	r2,-4(fp)
 402fe04:	10800017 	ldw	r2,0(r2)
 402fe08:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 402fe0c:	e0bfff17 	ldw	r2,-4(fp)
 402fe10:	10bfff04 	addi	r2,r2,-4
 402fe14:	e0bfff15 	stw	r2,-4(fp)
 402fe18:	e0ffff17 	ldw	r3,-4(fp)
 402fe1c:	008100f4 	movhi	r2,1027
 402fe20:	1082f204 	addi	r2,r2,3016
 402fe24:	18bff62e 	bgeu	r3,r2,402fe00 <__flash_rwdata_start+0xffffeed8>
        (*dtor) (); 
}
 402fe28:	0001883a 	nop
 402fe2c:	e037883a 	mov	sp,fp
 402fe30:	dfc00117 	ldw	ra,4(sp)
 402fe34:	df000017 	ldw	fp,0(sp)
 402fe38:	dec00204 	addi	sp,sp,8
 402fe3c:	f800283a 	ret

0402fe40 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 402fe40:	defffe04 	addi	sp,sp,-8
 402fe44:	dfc00115 	stw	ra,4(sp)
 402fe48:	df000015 	stw	fp,0(sp)
 402fe4c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 402fe50:	01440004 	movi	r5,4096
 402fe54:	0009883a 	mov	r4,zero
 402fe58:	40307080 	call	4030708 <alt_icache_flush>
#endif
}
 402fe5c:	0001883a 	nop
 402fe60:	e037883a 	mov	sp,fp
 402fe64:	dfc00117 	ldw	ra,4(sp)
 402fe68:	df000017 	ldw	fp,0(sp)
 402fe6c:	dec00204 	addi	sp,sp,8
 402fe70:	f800283a 	ret

0402fe74 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 402fe74:	defff904 	addi	sp,sp,-28
 402fe78:	dfc00615 	stw	ra,24(sp)
 402fe7c:	df000515 	stw	fp,20(sp)
 402fe80:	df000504 	addi	fp,sp,20
 402fe84:	e13ffc15 	stw	r4,-16(fp)
 402fe88:	e17ffd15 	stw	r5,-12(fp)
 402fe8c:	e1bffe15 	stw	r6,-8(fp)
 402fe90:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 402fe94:	e0800217 	ldw	r2,8(fp)
 402fe98:	d8800015 	stw	r2,0(sp)
 402fe9c:	e1ffff17 	ldw	r7,-4(fp)
 402fea0:	e1bffe17 	ldw	r6,-8(fp)
 402fea4:	e17ffd17 	ldw	r5,-12(fp)
 402fea8:	e13ffc17 	ldw	r4,-16(fp)
 402feac:	40300240 	call	4030024 <alt_iic_isr_register>
}  
 402feb0:	e037883a 	mov	sp,fp
 402feb4:	dfc00117 	ldw	ra,4(sp)
 402feb8:	df000017 	ldw	fp,0(sp)
 402febc:	dec00204 	addi	sp,sp,8
 402fec0:	f800283a 	ret

0402fec4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 402fec4:	defff904 	addi	sp,sp,-28
 402fec8:	df000615 	stw	fp,24(sp)
 402fecc:	df000604 	addi	fp,sp,24
 402fed0:	e13ffe15 	stw	r4,-8(fp)
 402fed4:	e17fff15 	stw	r5,-4(fp)
 402fed8:	e0bfff17 	ldw	r2,-4(fp)
 402fedc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402fee0:	0005303a 	rdctl	r2,status
 402fee4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402fee8:	e0fffb17 	ldw	r3,-20(fp)
 402feec:	00bfff84 	movi	r2,-2
 402fef0:	1884703a 	and	r2,r3,r2
 402fef4:	1001703a 	wrctl	status,r2
  
  return context;
 402fef8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 402fefc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 402ff00:	00c00044 	movi	r3,1
 402ff04:	e0bffa17 	ldw	r2,-24(fp)
 402ff08:	1884983a 	sll	r2,r3,r2
 402ff0c:	1007883a 	mov	r3,r2
 402ff10:	d0a01d17 	ldw	r2,-32652(gp)
 402ff14:	1884b03a 	or	r2,r3,r2
 402ff18:	d0a01d15 	stw	r2,-32652(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 402ff1c:	d0a01d17 	ldw	r2,-32652(gp)
 402ff20:	100170fa 	wrctl	ienable,r2
 402ff24:	e0bffc17 	ldw	r2,-16(fp)
 402ff28:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402ff2c:	e0bffd17 	ldw	r2,-12(fp)
 402ff30:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 402ff34:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 402ff38:	0001883a 	nop
}
 402ff3c:	e037883a 	mov	sp,fp
 402ff40:	df000017 	ldw	fp,0(sp)
 402ff44:	dec00104 	addi	sp,sp,4
 402ff48:	f800283a 	ret

0402ff4c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 402ff4c:	defff904 	addi	sp,sp,-28
 402ff50:	df000615 	stw	fp,24(sp)
 402ff54:	df000604 	addi	fp,sp,24
 402ff58:	e13ffe15 	stw	r4,-8(fp)
 402ff5c:	e17fff15 	stw	r5,-4(fp)
 402ff60:	e0bfff17 	ldw	r2,-4(fp)
 402ff64:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 402ff68:	0005303a 	rdctl	r2,status
 402ff6c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 402ff70:	e0fffb17 	ldw	r3,-20(fp)
 402ff74:	00bfff84 	movi	r2,-2
 402ff78:	1884703a 	and	r2,r3,r2
 402ff7c:	1001703a 	wrctl	status,r2
  
  return context;
 402ff80:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 402ff84:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 402ff88:	00c00044 	movi	r3,1
 402ff8c:	e0bffa17 	ldw	r2,-24(fp)
 402ff90:	1884983a 	sll	r2,r3,r2
 402ff94:	0084303a 	nor	r2,zero,r2
 402ff98:	1007883a 	mov	r3,r2
 402ff9c:	d0a01d17 	ldw	r2,-32652(gp)
 402ffa0:	1884703a 	and	r2,r3,r2
 402ffa4:	d0a01d15 	stw	r2,-32652(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 402ffa8:	d0a01d17 	ldw	r2,-32652(gp)
 402ffac:	100170fa 	wrctl	ienable,r2
 402ffb0:	e0bffc17 	ldw	r2,-16(fp)
 402ffb4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 402ffb8:	e0bffd17 	ldw	r2,-12(fp)
 402ffbc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 402ffc0:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 402ffc4:	0001883a 	nop
}
 402ffc8:	e037883a 	mov	sp,fp
 402ffcc:	df000017 	ldw	fp,0(sp)
 402ffd0:	dec00104 	addi	sp,sp,4
 402ffd4:	f800283a 	ret

0402ffd8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 402ffd8:	defffc04 	addi	sp,sp,-16
 402ffdc:	df000315 	stw	fp,12(sp)
 402ffe0:	df000304 	addi	fp,sp,12
 402ffe4:	e13ffe15 	stw	r4,-8(fp)
 402ffe8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 402ffec:	000530fa 	rdctl	r2,ienable
 402fff0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 402fff4:	00c00044 	movi	r3,1
 402fff8:	e0bfff17 	ldw	r2,-4(fp)
 402fffc:	1884983a 	sll	r2,r3,r2
 4030000:	1007883a 	mov	r3,r2
 4030004:	e0bffd17 	ldw	r2,-12(fp)
 4030008:	1884703a 	and	r2,r3,r2
 403000c:	1004c03a 	cmpne	r2,r2,zero
 4030010:	10803fcc 	andi	r2,r2,255
}
 4030014:	e037883a 	mov	sp,fp
 4030018:	df000017 	ldw	fp,0(sp)
 403001c:	dec00104 	addi	sp,sp,4
 4030020:	f800283a 	ret

04030024 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 4030024:	defff504 	addi	sp,sp,-44
 4030028:	dfc00a15 	stw	ra,40(sp)
 403002c:	df000915 	stw	fp,36(sp)
 4030030:	df000904 	addi	fp,sp,36
 4030034:	e13ffc15 	stw	r4,-16(fp)
 4030038:	e17ffd15 	stw	r5,-12(fp)
 403003c:	e1bffe15 	stw	r6,-8(fp)
 4030040:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 4030044:	00bffa84 	movi	r2,-22
 4030048:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 403004c:	e0bffd17 	ldw	r2,-12(fp)
 4030050:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 4030054:	e0bff817 	ldw	r2,-32(fp)
 4030058:	10800808 	cmpgei	r2,r2,32
 403005c:	1000271e 	bne	r2,zero,40300fc <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4030060:	0005303a 	rdctl	r2,status
 4030064:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4030068:	e0fffb17 	ldw	r3,-20(fp)
 403006c:	00bfff84 	movi	r2,-2
 4030070:	1884703a 	and	r2,r3,r2
 4030074:	1001703a 	wrctl	status,r2
  
  return context;
 4030078:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 403007c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 4030080:	00800034 	movhi	r2,0
 4030084:	1087bd04 	addi	r2,r2,7924
 4030088:	e0fff817 	ldw	r3,-32(fp)
 403008c:	180690fa 	slli	r3,r3,3
 4030090:	10c5883a 	add	r2,r2,r3
 4030094:	e0fffe17 	ldw	r3,-8(fp)
 4030098:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 403009c:	00800034 	movhi	r2,0
 40300a0:	1087bd04 	addi	r2,r2,7924
 40300a4:	e0fff817 	ldw	r3,-32(fp)
 40300a8:	180690fa 	slli	r3,r3,3
 40300ac:	10c5883a 	add	r2,r2,r3
 40300b0:	10800104 	addi	r2,r2,4
 40300b4:	e0ffff17 	ldw	r3,-4(fp)
 40300b8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 40300bc:	e0bffe17 	ldw	r2,-8(fp)
 40300c0:	10000526 	beq	r2,zero,40300d8 <alt_iic_isr_register+0xb4>
 40300c4:	e0bff817 	ldw	r2,-32(fp)
 40300c8:	100b883a 	mov	r5,r2
 40300cc:	e13ffc17 	ldw	r4,-16(fp)
 40300d0:	402fec40 	call	402fec4 <alt_ic_irq_enable>
 40300d4:	00000406 	br	40300e8 <alt_iic_isr_register+0xc4>
 40300d8:	e0bff817 	ldw	r2,-32(fp)
 40300dc:	100b883a 	mov	r5,r2
 40300e0:	e13ffc17 	ldw	r4,-16(fp)
 40300e4:	402ff4c0 	call	402ff4c <alt_ic_irq_disable>
 40300e8:	e0bff715 	stw	r2,-36(fp)
 40300ec:	e0bffa17 	ldw	r2,-24(fp)
 40300f0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 40300f4:	e0bff917 	ldw	r2,-28(fp)
 40300f8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 40300fc:	e0bff717 	ldw	r2,-36(fp)
}
 4030100:	e037883a 	mov	sp,fp
 4030104:	dfc00117 	ldw	ra,4(sp)
 4030108:	df000017 	ldw	fp,0(sp)
 403010c:	dec00204 	addi	sp,sp,8
 4030110:	f800283a 	ret

04030114 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 4030114:	defff904 	addi	sp,sp,-28
 4030118:	dfc00615 	stw	ra,24(sp)
 403011c:	df000515 	stw	fp,20(sp)
 4030120:	df000504 	addi	fp,sp,20
 4030124:	e13ffc15 	stw	r4,-16(fp)
 4030128:	e17ffd15 	stw	r5,-12(fp)
 403012c:	e1bffe15 	stw	r6,-8(fp)
 4030130:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 4030134:	e1bfff17 	ldw	r6,-4(fp)
 4030138:	e17ffe17 	ldw	r5,-8(fp)
 403013c:	e13ffd17 	ldw	r4,-12(fp)
 4030140:	40303540 	call	4030354 <open>
 4030144:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 4030148:	e0bffb17 	ldw	r2,-20(fp)
 403014c:	10001c16 	blt	r2,zero,40301c0 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 4030150:	00800034 	movhi	r2,0
 4030154:	10831504 	addi	r2,r2,3156
 4030158:	e0fffb17 	ldw	r3,-20(fp)
 403015c:	18c00324 	muli	r3,r3,12
 4030160:	10c5883a 	add	r2,r2,r3
 4030164:	10c00017 	ldw	r3,0(r2)
 4030168:	e0bffc17 	ldw	r2,-16(fp)
 403016c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 4030170:	00800034 	movhi	r2,0
 4030174:	10831504 	addi	r2,r2,3156
 4030178:	e0fffb17 	ldw	r3,-20(fp)
 403017c:	18c00324 	muli	r3,r3,12
 4030180:	10c5883a 	add	r2,r2,r3
 4030184:	10800104 	addi	r2,r2,4
 4030188:	10c00017 	ldw	r3,0(r2)
 403018c:	e0bffc17 	ldw	r2,-16(fp)
 4030190:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 4030194:	00800034 	movhi	r2,0
 4030198:	10831504 	addi	r2,r2,3156
 403019c:	e0fffb17 	ldw	r3,-20(fp)
 40301a0:	18c00324 	muli	r3,r3,12
 40301a4:	10c5883a 	add	r2,r2,r3
 40301a8:	10800204 	addi	r2,r2,8
 40301ac:	10c00017 	ldw	r3,0(r2)
 40301b0:	e0bffc17 	ldw	r2,-16(fp)
 40301b4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 40301b8:	e13ffb17 	ldw	r4,-20(fp)
 40301bc:	402e9680 	call	402e968 <alt_release_fd>
  }
} 
 40301c0:	0001883a 	nop
 40301c4:	e037883a 	mov	sp,fp
 40301c8:	dfc00117 	ldw	ra,4(sp)
 40301cc:	df000017 	ldw	fp,0(sp)
 40301d0:	dec00204 	addi	sp,sp,8
 40301d4:	f800283a 	ret

040301d8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 40301d8:	defffb04 	addi	sp,sp,-20
 40301dc:	dfc00415 	stw	ra,16(sp)
 40301e0:	df000315 	stw	fp,12(sp)
 40301e4:	df000304 	addi	fp,sp,12
 40301e8:	e13ffd15 	stw	r4,-12(fp)
 40301ec:	e17ffe15 	stw	r5,-8(fp)
 40301f0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 40301f4:	01c07fc4 	movi	r7,511
 40301f8:	01800044 	movi	r6,1
 40301fc:	e17ffd17 	ldw	r5,-12(fp)
 4030200:	01000034 	movhi	r4,0
 4030204:	21031804 	addi	r4,r4,3168
 4030208:	40301140 	call	4030114 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 403020c:	01c07fc4 	movi	r7,511
 4030210:	000d883a 	mov	r6,zero
 4030214:	e17ffe17 	ldw	r5,-8(fp)
 4030218:	01000034 	movhi	r4,0
 403021c:	21031504 	addi	r4,r4,3156
 4030220:	40301140 	call	4030114 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 4030224:	01c07fc4 	movi	r7,511
 4030228:	01800044 	movi	r6,1
 403022c:	e17fff17 	ldw	r5,-4(fp)
 4030230:	01000034 	movhi	r4,0
 4030234:	21031b04 	addi	r4,r4,3180
 4030238:	40301140 	call	4030114 <alt_open_fd>
}  
 403023c:	0001883a 	nop
 4030240:	e037883a 	mov	sp,fp
 4030244:	dfc00117 	ldw	ra,4(sp)
 4030248:	df000017 	ldw	fp,0(sp)
 403024c:	dec00204 	addi	sp,sp,8
 4030250:	f800283a 	ret

04030254 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4030254:	defffe04 	addi	sp,sp,-8
 4030258:	dfc00115 	stw	ra,4(sp)
 403025c:	df000015 	stw	fp,0(sp)
 4030260:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4030264:	d0a00c17 	ldw	r2,-32720(gp)
 4030268:	10000326 	beq	r2,zero,4030278 <alt_get_errno+0x24>
 403026c:	d0a00c17 	ldw	r2,-32720(gp)
 4030270:	103ee83a 	callr	r2
 4030274:	00000106 	br	403027c <alt_get_errno+0x28>
 4030278:	d0a01204 	addi	r2,gp,-32696
}
 403027c:	e037883a 	mov	sp,fp
 4030280:	dfc00117 	ldw	ra,4(sp)
 4030284:	df000017 	ldw	fp,0(sp)
 4030288:	dec00204 	addi	sp,sp,8
 403028c:	f800283a 	ret

04030290 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 4030290:	defffd04 	addi	sp,sp,-12
 4030294:	df000215 	stw	fp,8(sp)
 4030298:	df000204 	addi	fp,sp,8
 403029c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 40302a0:	e0bfff17 	ldw	r2,-4(fp)
 40302a4:	10800217 	ldw	r2,8(r2)
 40302a8:	10d00034 	orhi	r3,r2,16384
 40302ac:	e0bfff17 	ldw	r2,-4(fp)
 40302b0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 40302b4:	e03ffe15 	stw	zero,-8(fp)
 40302b8:	00001d06 	br	4030330 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 40302bc:	00800034 	movhi	r2,0
 40302c0:	10831504 	addi	r2,r2,3156
 40302c4:	e0fffe17 	ldw	r3,-8(fp)
 40302c8:	18c00324 	muli	r3,r3,12
 40302cc:	10c5883a 	add	r2,r2,r3
 40302d0:	10c00017 	ldw	r3,0(r2)
 40302d4:	e0bfff17 	ldw	r2,-4(fp)
 40302d8:	10800017 	ldw	r2,0(r2)
 40302dc:	1880111e 	bne	r3,r2,4030324 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 40302e0:	00800034 	movhi	r2,0
 40302e4:	10831504 	addi	r2,r2,3156
 40302e8:	e0fffe17 	ldw	r3,-8(fp)
 40302ec:	18c00324 	muli	r3,r3,12
 40302f0:	10c5883a 	add	r2,r2,r3
 40302f4:	10800204 	addi	r2,r2,8
 40302f8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 40302fc:	1000090e 	bge	r2,zero,4030324 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 4030300:	e0bffe17 	ldw	r2,-8(fp)
 4030304:	10c00324 	muli	r3,r2,12
 4030308:	00800034 	movhi	r2,0
 403030c:	10831504 	addi	r2,r2,3156
 4030310:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 4030314:	e0bfff17 	ldw	r2,-4(fp)
 4030318:	18800226 	beq	r3,r2,4030324 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 403031c:	00bffcc4 	movi	r2,-13
 4030320:	00000806 	br	4030344 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 4030324:	e0bffe17 	ldw	r2,-8(fp)
 4030328:	10800044 	addi	r2,r2,1
 403032c:	e0bffe15 	stw	r2,-8(fp)
 4030330:	d0a00b17 	ldw	r2,-32724(gp)
 4030334:	1007883a 	mov	r3,r2
 4030338:	e0bffe17 	ldw	r2,-8(fp)
 403033c:	18bfdf2e 	bgeu	r3,r2,40302bc <__flash_rwdata_start+0xfffff394>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 4030340:	0005883a 	mov	r2,zero
}
 4030344:	e037883a 	mov	sp,fp
 4030348:	df000017 	ldw	fp,0(sp)
 403034c:	dec00104 	addi	sp,sp,4
 4030350:	f800283a 	ret

04030354 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 4030354:	defff604 	addi	sp,sp,-40
 4030358:	dfc00915 	stw	ra,36(sp)
 403035c:	df000815 	stw	fp,32(sp)
 4030360:	df000804 	addi	fp,sp,32
 4030364:	e13ffd15 	stw	r4,-12(fp)
 4030368:	e17ffe15 	stw	r5,-8(fp)
 403036c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 4030370:	00bfffc4 	movi	r2,-1
 4030374:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 4030378:	00bffb44 	movi	r2,-19
 403037c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 4030380:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 4030384:	d1600904 	addi	r5,gp,-32732
 4030388:	e13ffd17 	ldw	r4,-12(fp)
 403038c:	40304cc0 	call	40304cc <alt_find_dev>
 4030390:	e0bff815 	stw	r2,-32(fp)
 4030394:	e0bff817 	ldw	r2,-32(fp)
 4030398:	1000051e 	bne	r2,zero,40303b0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 403039c:	e13ffd17 	ldw	r4,-12(fp)
 40303a0:	403055c0 	call	403055c <alt_find_file>
 40303a4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 40303a8:	00800044 	movi	r2,1
 40303ac:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 40303b0:	e0bff817 	ldw	r2,-32(fp)
 40303b4:	10002926 	beq	r2,zero,403045c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 40303b8:	e13ff817 	ldw	r4,-32(fp)
 40303bc:	40306640 	call	4030664 <alt_get_fd>
 40303c0:	e0bff915 	stw	r2,-28(fp)
 40303c4:	e0bff917 	ldw	r2,-28(fp)
 40303c8:	1000030e 	bge	r2,zero,40303d8 <open+0x84>
    {
      status = index;
 40303cc:	e0bff917 	ldw	r2,-28(fp)
 40303d0:	e0bffa15 	stw	r2,-24(fp)
 40303d4:	00002306 	br	4030464 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 40303d8:	e0bff917 	ldw	r2,-28(fp)
 40303dc:	10c00324 	muli	r3,r2,12
 40303e0:	00800034 	movhi	r2,0
 40303e4:	10831504 	addi	r2,r2,3156
 40303e8:	1885883a 	add	r2,r3,r2
 40303ec:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 40303f0:	e0fffe17 	ldw	r3,-8(fp)
 40303f4:	00900034 	movhi	r2,16384
 40303f8:	10bfffc4 	addi	r2,r2,-1
 40303fc:	1886703a 	and	r3,r3,r2
 4030400:	e0bffc17 	ldw	r2,-16(fp)
 4030404:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 4030408:	e0bffb17 	ldw	r2,-20(fp)
 403040c:	1000051e 	bne	r2,zero,4030424 <open+0xd0>
 4030410:	e13ffc17 	ldw	r4,-16(fp)
 4030414:	40302900 	call	4030290 <alt_file_locked>
 4030418:	e0bffa15 	stw	r2,-24(fp)
 403041c:	e0bffa17 	ldw	r2,-24(fp)
 4030420:	10001016 	blt	r2,zero,4030464 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 4030424:	e0bff817 	ldw	r2,-32(fp)
 4030428:	10800317 	ldw	r2,12(r2)
 403042c:	10000826 	beq	r2,zero,4030450 <open+0xfc>
 4030430:	e0bff817 	ldw	r2,-32(fp)
 4030434:	10800317 	ldw	r2,12(r2)
 4030438:	e1ffff17 	ldw	r7,-4(fp)
 403043c:	e1bffe17 	ldw	r6,-8(fp)
 4030440:	e17ffd17 	ldw	r5,-12(fp)
 4030444:	e13ffc17 	ldw	r4,-16(fp)
 4030448:	103ee83a 	callr	r2
 403044c:	00000106 	br	4030454 <open+0x100>
 4030450:	0005883a 	mov	r2,zero
 4030454:	e0bffa15 	stw	r2,-24(fp)
 4030458:	00000206 	br	4030464 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 403045c:	00bffb44 	movi	r2,-19
 4030460:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 4030464:	e0bffa17 	ldw	r2,-24(fp)
 4030468:	1000090e 	bge	r2,zero,4030490 <open+0x13c>
  {
    alt_release_fd (index);  
 403046c:	e13ff917 	ldw	r4,-28(fp)
 4030470:	402e9680 	call	402e968 <alt_release_fd>
    ALT_ERRNO = -status;
 4030474:	40302540 	call	4030254 <alt_get_errno>
 4030478:	1007883a 	mov	r3,r2
 403047c:	e0bffa17 	ldw	r2,-24(fp)
 4030480:	0085c83a 	sub	r2,zero,r2
 4030484:	18800015 	stw	r2,0(r3)
    return -1;
 4030488:	00bfffc4 	movi	r2,-1
 403048c:	00000106 	br	4030494 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 4030490:	e0bff917 	ldw	r2,-28(fp)
}
 4030494:	e037883a 	mov	sp,fp
 4030498:	dfc00117 	ldw	ra,4(sp)
 403049c:	df000017 	ldw	fp,0(sp)
 40304a0:	dec00204 	addi	sp,sp,8
 40304a4:	f800283a 	ret

040304a8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 40304a8:	deffff04 	addi	sp,sp,-4
 40304ac:	df000015 	stw	fp,0(sp)
 40304b0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 40304b4:	000170fa 	wrctl	ienable,zero
}
 40304b8:	0001883a 	nop
 40304bc:	e037883a 	mov	sp,fp
 40304c0:	df000017 	ldw	fp,0(sp)
 40304c4:	dec00104 	addi	sp,sp,4
 40304c8:	f800283a 	ret

040304cc <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 40304cc:	defffa04 	addi	sp,sp,-24
 40304d0:	dfc00515 	stw	ra,20(sp)
 40304d4:	df000415 	stw	fp,16(sp)
 40304d8:	df000404 	addi	fp,sp,16
 40304dc:	e13ffe15 	stw	r4,-8(fp)
 40304e0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 40304e4:	e0bfff17 	ldw	r2,-4(fp)
 40304e8:	10800017 	ldw	r2,0(r2)
 40304ec:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 40304f0:	e13ffe17 	ldw	r4,-8(fp)
 40304f4:	4023df40 	call	4023df4 <strlen>
 40304f8:	10800044 	addi	r2,r2,1
 40304fc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 4030500:	00000d06 	br	4030538 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 4030504:	e0bffc17 	ldw	r2,-16(fp)
 4030508:	10800217 	ldw	r2,8(r2)
 403050c:	e0fffd17 	ldw	r3,-12(fp)
 4030510:	180d883a 	mov	r6,r3
 4030514:	e17ffe17 	ldw	r5,-8(fp)
 4030518:	1009883a 	mov	r4,r2
 403051c:	40308800 	call	4030880 <memcmp>
 4030520:	1000021e 	bne	r2,zero,403052c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 4030524:	e0bffc17 	ldw	r2,-16(fp)
 4030528:	00000706 	br	4030548 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 403052c:	e0bffc17 	ldw	r2,-16(fp)
 4030530:	10800017 	ldw	r2,0(r2)
 4030534:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 4030538:	e0fffc17 	ldw	r3,-16(fp)
 403053c:	e0bfff17 	ldw	r2,-4(fp)
 4030540:	18bff01e 	bne	r3,r2,4030504 <__flash_rwdata_start+0xfffff5dc>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 4030544:	0005883a 	mov	r2,zero
}
 4030548:	e037883a 	mov	sp,fp
 403054c:	dfc00117 	ldw	ra,4(sp)
 4030550:	df000017 	ldw	fp,0(sp)
 4030554:	dec00204 	addi	sp,sp,8
 4030558:	f800283a 	ret

0403055c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 403055c:	defffb04 	addi	sp,sp,-20
 4030560:	dfc00415 	stw	ra,16(sp)
 4030564:	df000315 	stw	fp,12(sp)
 4030568:	df000304 	addi	fp,sp,12
 403056c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 4030570:	d0a00717 	ldw	r2,-32740(gp)
 4030574:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4030578:	00003106 	br	4030640 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 403057c:	e0bffd17 	ldw	r2,-12(fp)
 4030580:	10800217 	ldw	r2,8(r2)
 4030584:	1009883a 	mov	r4,r2
 4030588:	4023df40 	call	4023df4 <strlen>
 403058c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 4030590:	e0bffd17 	ldw	r2,-12(fp)
 4030594:	10c00217 	ldw	r3,8(r2)
 4030598:	e0bffe17 	ldw	r2,-8(fp)
 403059c:	10bfffc4 	addi	r2,r2,-1
 40305a0:	1885883a 	add	r2,r3,r2
 40305a4:	10800003 	ldbu	r2,0(r2)
 40305a8:	10803fcc 	andi	r2,r2,255
 40305ac:	1080201c 	xori	r2,r2,128
 40305b0:	10bfe004 	addi	r2,r2,-128
 40305b4:	10800bd8 	cmpnei	r2,r2,47
 40305b8:	1000031e 	bne	r2,zero,40305c8 <alt_find_file+0x6c>
    {
      len -= 1;
 40305bc:	e0bffe17 	ldw	r2,-8(fp)
 40305c0:	10bfffc4 	addi	r2,r2,-1
 40305c4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 40305c8:	e0bffe17 	ldw	r2,-8(fp)
 40305cc:	e0ffff17 	ldw	r3,-4(fp)
 40305d0:	1885883a 	add	r2,r3,r2
 40305d4:	10800003 	ldbu	r2,0(r2)
 40305d8:	10803fcc 	andi	r2,r2,255
 40305dc:	1080201c 	xori	r2,r2,128
 40305e0:	10bfe004 	addi	r2,r2,-128
 40305e4:	10800be0 	cmpeqi	r2,r2,47
 40305e8:	1000081e 	bne	r2,zero,403060c <alt_find_file+0xb0>
 40305ec:	e0bffe17 	ldw	r2,-8(fp)
 40305f0:	e0ffff17 	ldw	r3,-4(fp)
 40305f4:	1885883a 	add	r2,r3,r2
 40305f8:	10800003 	ldbu	r2,0(r2)
 40305fc:	10803fcc 	andi	r2,r2,255
 4030600:	1080201c 	xori	r2,r2,128
 4030604:	10bfe004 	addi	r2,r2,-128
 4030608:	10000a1e 	bne	r2,zero,4030634 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 403060c:	e0bffd17 	ldw	r2,-12(fp)
 4030610:	10800217 	ldw	r2,8(r2)
 4030614:	e0fffe17 	ldw	r3,-8(fp)
 4030618:	180d883a 	mov	r6,r3
 403061c:	e17fff17 	ldw	r5,-4(fp)
 4030620:	1009883a 	mov	r4,r2
 4030624:	40308800 	call	4030880 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 4030628:	1000021e 	bne	r2,zero,4030634 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 403062c:	e0bffd17 	ldw	r2,-12(fp)
 4030630:	00000706 	br	4030650 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 4030634:	e0bffd17 	ldw	r2,-12(fp)
 4030638:	10800017 	ldw	r2,0(r2)
 403063c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4030640:	e0fffd17 	ldw	r3,-12(fp)
 4030644:	d0a00704 	addi	r2,gp,-32740
 4030648:	18bfcc1e 	bne	r3,r2,403057c <__flash_rwdata_start+0xfffff654>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 403064c:	0005883a 	mov	r2,zero
}
 4030650:	e037883a 	mov	sp,fp
 4030654:	dfc00117 	ldw	ra,4(sp)
 4030658:	df000017 	ldw	fp,0(sp)
 403065c:	dec00204 	addi	sp,sp,8
 4030660:	f800283a 	ret

04030664 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 4030664:	defffc04 	addi	sp,sp,-16
 4030668:	df000315 	stw	fp,12(sp)
 403066c:	df000304 	addi	fp,sp,12
 4030670:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 4030674:	00bffa04 	movi	r2,-24
 4030678:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 403067c:	e03ffd15 	stw	zero,-12(fp)
 4030680:	00001906 	br	40306e8 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
 4030684:	00800034 	movhi	r2,0
 4030688:	10831504 	addi	r2,r2,3156
 403068c:	e0fffd17 	ldw	r3,-12(fp)
 4030690:	18c00324 	muli	r3,r3,12
 4030694:	10c5883a 	add	r2,r2,r3
 4030698:	10800017 	ldw	r2,0(r2)
 403069c:	10000f1e 	bne	r2,zero,40306dc <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
 40306a0:	00800034 	movhi	r2,0
 40306a4:	10831504 	addi	r2,r2,3156
 40306a8:	e0fffd17 	ldw	r3,-12(fp)
 40306ac:	18c00324 	muli	r3,r3,12
 40306b0:	10c5883a 	add	r2,r2,r3
 40306b4:	e0ffff17 	ldw	r3,-4(fp)
 40306b8:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 40306bc:	d0e00b17 	ldw	r3,-32724(gp)
 40306c0:	e0bffd17 	ldw	r2,-12(fp)
 40306c4:	1880020e 	bge	r3,r2,40306d0 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
 40306c8:	e0bffd17 	ldw	r2,-12(fp)
 40306cc:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
 40306d0:	e0bffd17 	ldw	r2,-12(fp)
 40306d4:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 40306d8:	00000606 	br	40306f4 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 40306dc:	e0bffd17 	ldw	r2,-12(fp)
 40306e0:	10800044 	addi	r2,r2,1
 40306e4:	e0bffd15 	stw	r2,-12(fp)
 40306e8:	e0bffd17 	ldw	r2,-12(fp)
 40306ec:	10800810 	cmplti	r2,r2,32
 40306f0:	103fe41e 	bne	r2,zero,4030684 <__flash_rwdata_start+0xfffff75c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 40306f4:	e0bffe17 	ldw	r2,-8(fp)
}
 40306f8:	e037883a 	mov	sp,fp
 40306fc:	df000017 	ldw	fp,0(sp)
 4030700:	dec00104 	addi	sp,sp,4
 4030704:	f800283a 	ret

04030708 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 4030708:	defffb04 	addi	sp,sp,-20
 403070c:	df000415 	stw	fp,16(sp)
 4030710:	df000404 	addi	fp,sp,16
 4030714:	e13ffe15 	stw	r4,-8(fp)
 4030718:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 403071c:	e0bfff17 	ldw	r2,-4(fp)
 4030720:	10840070 	cmpltui	r2,r2,4097
 4030724:	1000021e 	bne	r2,zero,4030730 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 4030728:	00840004 	movi	r2,4096
 403072c:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 4030730:	e0fffe17 	ldw	r3,-8(fp)
 4030734:	e0bfff17 	ldw	r2,-4(fp)
 4030738:	1885883a 	add	r2,r3,r2
 403073c:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 4030740:	e0bffe17 	ldw	r2,-8(fp)
 4030744:	e0bffc15 	stw	r2,-16(fp)
 4030748:	00000506 	br	4030760 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 403074c:	e0bffc17 	ldw	r2,-16(fp)
 4030750:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 4030754:	e0bffc17 	ldw	r2,-16(fp)
 4030758:	10800804 	addi	r2,r2,32
 403075c:	e0bffc15 	stw	r2,-16(fp)
 4030760:	e0fffc17 	ldw	r3,-16(fp)
 4030764:	e0bffd17 	ldw	r2,-12(fp)
 4030768:	18bff836 	bltu	r3,r2,403074c <__flash_rwdata_start+0xfffff824>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 403076c:	e0bffe17 	ldw	r2,-8(fp)
 4030770:	108007cc 	andi	r2,r2,31
 4030774:	10000226 	beq	r2,zero,4030780 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 4030778:	e0bffc17 	ldw	r2,-16(fp)
 403077c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 4030780:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 4030784:	0001883a 	nop
 4030788:	e037883a 	mov	sp,fp
 403078c:	df000017 	ldw	fp,0(sp)
 4030790:	dec00104 	addi	sp,sp,4
 4030794:	f800283a 	ret

04030798 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 4030798:	defffe04 	addi	sp,sp,-8
 403079c:	df000115 	stw	fp,4(sp)
 40307a0:	df000104 	addi	fp,sp,4
 40307a4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 40307a8:	e0bfff17 	ldw	r2,-4(fp)
 40307ac:	10bffe84 	addi	r2,r2,-6
 40307b0:	10c00428 	cmpgeui	r3,r2,16
 40307b4:	18001a1e 	bne	r3,zero,4030820 <alt_exception_cause_generated_bad_addr+0x88>
 40307b8:	100690ba 	slli	r3,r2,2
 40307bc:	008100f4 	movhi	r2,1027
 40307c0:	1081f404 	addi	r2,r2,2000
 40307c4:	1885883a 	add	r2,r3,r2
 40307c8:	10800017 	ldw	r2,0(r2)
 40307cc:	1000683a 	jmp	r2
 40307d0:	04030810 	cmplti	r16,zero,3104
 40307d4:	04030810 	cmplti	r16,zero,3104
 40307d8:	04030820 	cmpeqi	r16,zero,3104
 40307dc:	04030820 	cmpeqi	r16,zero,3104
 40307e0:	04030820 	cmpeqi	r16,zero,3104
 40307e4:	04030810 	cmplti	r16,zero,3104
 40307e8:	04030818 	cmpnei	r16,zero,3104
 40307ec:	04030820 	cmpeqi	r16,zero,3104
 40307f0:	04030810 	cmplti	r16,zero,3104
 40307f4:	04030810 	cmplti	r16,zero,3104
 40307f8:	04030820 	cmpeqi	r16,zero,3104
 40307fc:	04030810 	cmplti	r16,zero,3104
 4030800:	04030818 	cmpnei	r16,zero,3104
 4030804:	04030820 	cmpeqi	r16,zero,3104
 4030808:	04030820 	cmpeqi	r16,zero,3104
 403080c:	04030810 	cmplti	r16,zero,3104
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 4030810:	00800044 	movi	r2,1
 4030814:	00000306 	br	4030824 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 4030818:	0005883a 	mov	r2,zero
 403081c:	00000106 	br	4030824 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 4030820:	0005883a 	mov	r2,zero
  }
}
 4030824:	e037883a 	mov	sp,fp
 4030828:	df000017 	ldw	fp,0(sp)
 403082c:	dec00104 	addi	sp,sp,4
 4030830:	f800283a 	ret

04030834 <atexit>:
 4030834:	200b883a 	mov	r5,r4
 4030838:	000f883a 	mov	r7,zero
 403083c:	000d883a 	mov	r6,zero
 4030840:	0009883a 	mov	r4,zero
 4030844:	40308fc1 	jmpi	40308fc <__register_exitproc>

04030848 <exit>:
 4030848:	defffe04 	addi	sp,sp,-8
 403084c:	000b883a 	mov	r5,zero
 4030850:	dc000015 	stw	r16,0(sp)
 4030854:	dfc00115 	stw	ra,4(sp)
 4030858:	2021883a 	mov	r16,r4
 403085c:	4030a140 	call	4030a14 <__call_exitprocs>
 4030860:	00800034 	movhi	r2,0
 4030864:	10878e04 	addi	r2,r2,7736
 4030868:	11000017 	ldw	r4,0(r2)
 403086c:	20800f17 	ldw	r2,60(r4)
 4030870:	10000126 	beq	r2,zero,4030878 <exit+0x30>
 4030874:	103ee83a 	callr	r2
 4030878:	8009883a 	mov	r4,r16
 403087c:	4030b940 	call	4030b94 <_exit>

04030880 <memcmp>:
 4030880:	01c000c4 	movi	r7,3
 4030884:	3980192e 	bgeu	r7,r6,40308ec <memcmp+0x6c>
 4030888:	2144b03a 	or	r2,r4,r5
 403088c:	11c4703a 	and	r2,r2,r7
 4030890:	10000f26 	beq	r2,zero,40308d0 <memcmp+0x50>
 4030894:	20800003 	ldbu	r2,0(r4)
 4030898:	28c00003 	ldbu	r3,0(r5)
 403089c:	10c0151e 	bne	r2,r3,40308f4 <memcmp+0x74>
 40308a0:	31bfff84 	addi	r6,r6,-2
 40308a4:	01ffffc4 	movi	r7,-1
 40308a8:	00000406 	br	40308bc <memcmp+0x3c>
 40308ac:	20800003 	ldbu	r2,0(r4)
 40308b0:	28c00003 	ldbu	r3,0(r5)
 40308b4:	31bfffc4 	addi	r6,r6,-1
 40308b8:	10c00e1e 	bne	r2,r3,40308f4 <memcmp+0x74>
 40308bc:	21000044 	addi	r4,r4,1
 40308c0:	29400044 	addi	r5,r5,1
 40308c4:	31fff91e 	bne	r6,r7,40308ac <__flash_rwdata_start+0xfffff984>
 40308c8:	0005883a 	mov	r2,zero
 40308cc:	f800283a 	ret
 40308d0:	20c00017 	ldw	r3,0(r4)
 40308d4:	28800017 	ldw	r2,0(r5)
 40308d8:	18bfee1e 	bne	r3,r2,4030894 <__flash_rwdata_start+0xfffff96c>
 40308dc:	31bfff04 	addi	r6,r6,-4
 40308e0:	21000104 	addi	r4,r4,4
 40308e4:	29400104 	addi	r5,r5,4
 40308e8:	39bff936 	bltu	r7,r6,40308d0 <__flash_rwdata_start+0xfffff9a8>
 40308ec:	303fe91e 	bne	r6,zero,4030894 <__flash_rwdata_start+0xfffff96c>
 40308f0:	003ff506 	br	40308c8 <__flash_rwdata_start+0xfffff9a0>
 40308f4:	10c5c83a 	sub	r2,r2,r3
 40308f8:	f800283a 	ret

040308fc <__register_exitproc>:
 40308fc:	defffa04 	addi	sp,sp,-24
 4030900:	dc000315 	stw	r16,12(sp)
 4030904:	04000034 	movhi	r16,0
 4030908:	84078e04 	addi	r16,r16,7736
 403090c:	80c00017 	ldw	r3,0(r16)
 4030910:	dc400415 	stw	r17,16(sp)
 4030914:	dfc00515 	stw	ra,20(sp)
 4030918:	18805217 	ldw	r2,328(r3)
 403091c:	2023883a 	mov	r17,r4
 4030920:	10003726 	beq	r2,zero,4030a00 <__register_exitproc+0x104>
 4030924:	10c00117 	ldw	r3,4(r2)
 4030928:	010007c4 	movi	r4,31
 403092c:	20c00e16 	blt	r4,r3,4030968 <__register_exitproc+0x6c>
 4030930:	1a000044 	addi	r8,r3,1
 4030934:	8800221e 	bne	r17,zero,40309c0 <__register_exitproc+0xc4>
 4030938:	18c00084 	addi	r3,r3,2
 403093c:	18c7883a 	add	r3,r3,r3
 4030940:	18c7883a 	add	r3,r3,r3
 4030944:	12000115 	stw	r8,4(r2)
 4030948:	10c7883a 	add	r3,r2,r3
 403094c:	19400015 	stw	r5,0(r3)
 4030950:	0005883a 	mov	r2,zero
 4030954:	dfc00517 	ldw	ra,20(sp)
 4030958:	dc400417 	ldw	r17,16(sp)
 403095c:	dc000317 	ldw	r16,12(sp)
 4030960:	dec00604 	addi	sp,sp,24
 4030964:	f800283a 	ret
 4030968:	00800034 	movhi	r2,0
 403096c:	10800004 	addi	r2,r2,0
 4030970:	10002626 	beq	r2,zero,4030a0c <__register_exitproc+0x110>
 4030974:	01006404 	movi	r4,400
 4030978:	d9400015 	stw	r5,0(sp)
 403097c:	d9800115 	stw	r6,4(sp)
 4030980:	d9c00215 	stw	r7,8(sp)
 4030984:	00000000 	call	0 <__alt_mem_sdram>
 4030988:	d9400017 	ldw	r5,0(sp)
 403098c:	d9800117 	ldw	r6,4(sp)
 4030990:	d9c00217 	ldw	r7,8(sp)
 4030994:	10001d26 	beq	r2,zero,4030a0c <__register_exitproc+0x110>
 4030998:	81000017 	ldw	r4,0(r16)
 403099c:	10000115 	stw	zero,4(r2)
 40309a0:	02000044 	movi	r8,1
 40309a4:	22405217 	ldw	r9,328(r4)
 40309a8:	0007883a 	mov	r3,zero
 40309ac:	12400015 	stw	r9,0(r2)
 40309b0:	20805215 	stw	r2,328(r4)
 40309b4:	10006215 	stw	zero,392(r2)
 40309b8:	10006315 	stw	zero,396(r2)
 40309bc:	883fde26 	beq	r17,zero,4030938 <__flash_rwdata_start+0xfffffa10>
 40309c0:	18c9883a 	add	r4,r3,r3
 40309c4:	2109883a 	add	r4,r4,r4
 40309c8:	1109883a 	add	r4,r2,r4
 40309cc:	21802215 	stw	r6,136(r4)
 40309d0:	01800044 	movi	r6,1
 40309d4:	12406217 	ldw	r9,392(r2)
 40309d8:	30cc983a 	sll	r6,r6,r3
 40309dc:	4992b03a 	or	r9,r9,r6
 40309e0:	12406215 	stw	r9,392(r2)
 40309e4:	21c04215 	stw	r7,264(r4)
 40309e8:	01000084 	movi	r4,2
 40309ec:	893fd21e 	bne	r17,r4,4030938 <__flash_rwdata_start+0xfffffa10>
 40309f0:	11006317 	ldw	r4,396(r2)
 40309f4:	218cb03a 	or	r6,r4,r6
 40309f8:	11806315 	stw	r6,396(r2)
 40309fc:	003fce06 	br	4030938 <__flash_rwdata_start+0xfffffa10>
 4030a00:	18805304 	addi	r2,r3,332
 4030a04:	18805215 	stw	r2,328(r3)
 4030a08:	003fc606 	br	4030924 <__flash_rwdata_start+0xfffff9fc>
 4030a0c:	00bfffc4 	movi	r2,-1
 4030a10:	003fd006 	br	4030954 <__flash_rwdata_start+0xfffffa2c>

04030a14 <__call_exitprocs>:
 4030a14:	defff504 	addi	sp,sp,-44
 4030a18:	df000915 	stw	fp,36(sp)
 4030a1c:	dd400615 	stw	r21,24(sp)
 4030a20:	dc800315 	stw	r18,12(sp)
 4030a24:	dfc00a15 	stw	ra,40(sp)
 4030a28:	ddc00815 	stw	r23,32(sp)
 4030a2c:	dd800715 	stw	r22,28(sp)
 4030a30:	dd000515 	stw	r20,20(sp)
 4030a34:	dcc00415 	stw	r19,16(sp)
 4030a38:	dc400215 	stw	r17,8(sp)
 4030a3c:	dc000115 	stw	r16,4(sp)
 4030a40:	d9000015 	stw	r4,0(sp)
 4030a44:	2839883a 	mov	fp,r5
 4030a48:	04800044 	movi	r18,1
 4030a4c:	057fffc4 	movi	r21,-1
 4030a50:	00800034 	movhi	r2,0
 4030a54:	10878e04 	addi	r2,r2,7736
 4030a58:	12000017 	ldw	r8,0(r2)
 4030a5c:	45005217 	ldw	r20,328(r8)
 4030a60:	44c05204 	addi	r19,r8,328
 4030a64:	a0001c26 	beq	r20,zero,4030ad8 <__call_exitprocs+0xc4>
 4030a68:	a0800117 	ldw	r2,4(r20)
 4030a6c:	15ffffc4 	addi	r23,r2,-1
 4030a70:	b8000d16 	blt	r23,zero,4030aa8 <__call_exitprocs+0x94>
 4030a74:	14000044 	addi	r16,r2,1
 4030a78:	8421883a 	add	r16,r16,r16
 4030a7c:	8421883a 	add	r16,r16,r16
 4030a80:	84402004 	addi	r17,r16,128
 4030a84:	a463883a 	add	r17,r20,r17
 4030a88:	a421883a 	add	r16,r20,r16
 4030a8c:	e0001e26 	beq	fp,zero,4030b08 <__call_exitprocs+0xf4>
 4030a90:	80804017 	ldw	r2,256(r16)
 4030a94:	e0801c26 	beq	fp,r2,4030b08 <__call_exitprocs+0xf4>
 4030a98:	bdffffc4 	addi	r23,r23,-1
 4030a9c:	843fff04 	addi	r16,r16,-4
 4030aa0:	8c7fff04 	addi	r17,r17,-4
 4030aa4:	bd7ff91e 	bne	r23,r21,4030a8c <__flash_rwdata_start+0xfffffb64>
 4030aa8:	00800034 	movhi	r2,0
 4030aac:	10800004 	addi	r2,r2,0
 4030ab0:	10000926 	beq	r2,zero,4030ad8 <__call_exitprocs+0xc4>
 4030ab4:	a0800117 	ldw	r2,4(r20)
 4030ab8:	1000301e 	bne	r2,zero,4030b7c <__call_exitprocs+0x168>
 4030abc:	a0800017 	ldw	r2,0(r20)
 4030ac0:	10003226 	beq	r2,zero,4030b8c <__call_exitprocs+0x178>
 4030ac4:	a009883a 	mov	r4,r20
 4030ac8:	98800015 	stw	r2,0(r19)
 4030acc:	00000000 	call	0 <__alt_mem_sdram>
 4030ad0:	9d000017 	ldw	r20,0(r19)
 4030ad4:	a03fe41e 	bne	r20,zero,4030a68 <__flash_rwdata_start+0xfffffb40>
 4030ad8:	dfc00a17 	ldw	ra,40(sp)
 4030adc:	df000917 	ldw	fp,36(sp)
 4030ae0:	ddc00817 	ldw	r23,32(sp)
 4030ae4:	dd800717 	ldw	r22,28(sp)
 4030ae8:	dd400617 	ldw	r21,24(sp)
 4030aec:	dd000517 	ldw	r20,20(sp)
 4030af0:	dcc00417 	ldw	r19,16(sp)
 4030af4:	dc800317 	ldw	r18,12(sp)
 4030af8:	dc400217 	ldw	r17,8(sp)
 4030afc:	dc000117 	ldw	r16,4(sp)
 4030b00:	dec00b04 	addi	sp,sp,44
 4030b04:	f800283a 	ret
 4030b08:	a0800117 	ldw	r2,4(r20)
 4030b0c:	80c00017 	ldw	r3,0(r16)
 4030b10:	10bfffc4 	addi	r2,r2,-1
 4030b14:	15c01426 	beq	r2,r23,4030b68 <__call_exitprocs+0x154>
 4030b18:	80000015 	stw	zero,0(r16)
 4030b1c:	183fde26 	beq	r3,zero,4030a98 <__flash_rwdata_start+0xfffffb70>
 4030b20:	95c8983a 	sll	r4,r18,r23
 4030b24:	a0806217 	ldw	r2,392(r20)
 4030b28:	a5800117 	ldw	r22,4(r20)
 4030b2c:	2084703a 	and	r2,r4,r2
 4030b30:	10000b26 	beq	r2,zero,4030b60 <__call_exitprocs+0x14c>
 4030b34:	a0806317 	ldw	r2,396(r20)
 4030b38:	2088703a 	and	r4,r4,r2
 4030b3c:	20000c1e 	bne	r4,zero,4030b70 <__call_exitprocs+0x15c>
 4030b40:	89400017 	ldw	r5,0(r17)
 4030b44:	d9000017 	ldw	r4,0(sp)
 4030b48:	183ee83a 	callr	r3
 4030b4c:	a0800117 	ldw	r2,4(r20)
 4030b50:	15bfbf1e 	bne	r2,r22,4030a50 <__flash_rwdata_start+0xfffffb28>
 4030b54:	98800017 	ldw	r2,0(r19)
 4030b58:	153fcf26 	beq	r2,r20,4030a98 <__flash_rwdata_start+0xfffffb70>
 4030b5c:	003fbc06 	br	4030a50 <__flash_rwdata_start+0xfffffb28>
 4030b60:	183ee83a 	callr	r3
 4030b64:	003ff906 	br	4030b4c <__flash_rwdata_start+0xfffffc24>
 4030b68:	a5c00115 	stw	r23,4(r20)
 4030b6c:	003feb06 	br	4030b1c <__flash_rwdata_start+0xfffffbf4>
 4030b70:	89000017 	ldw	r4,0(r17)
 4030b74:	183ee83a 	callr	r3
 4030b78:	003ff406 	br	4030b4c <__flash_rwdata_start+0xfffffc24>
 4030b7c:	a0800017 	ldw	r2,0(r20)
 4030b80:	a027883a 	mov	r19,r20
 4030b84:	1029883a 	mov	r20,r2
 4030b88:	003fb606 	br	4030a64 <__flash_rwdata_start+0xfffffb3c>
 4030b8c:	0005883a 	mov	r2,zero
 4030b90:	003ffb06 	br	4030b80 <__flash_rwdata_start+0xfffffc58>

04030b94 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 4030b94:	defffd04 	addi	sp,sp,-12
 4030b98:	df000215 	stw	fp,8(sp)
 4030b9c:	df000204 	addi	fp,sp,8
 4030ba0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 4030ba4:	0001883a 	nop
 4030ba8:	e0bfff17 	ldw	r2,-4(fp)
 4030bac:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 4030bb0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 4030bb4:	10000226 	beq	r2,zero,4030bc0 <_exit+0x2c>
    ALT_SIM_FAIL();
 4030bb8:	002af070 	cmpltui	zero,zero,43969
 4030bbc:	00000106 	br	4030bc4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 4030bc0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 4030bc4:	003fff06 	br	4030bc4 <__flash_rwdata_start+0xfffffc9c>
